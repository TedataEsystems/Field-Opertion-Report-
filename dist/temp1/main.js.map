{"version":3,"sources":["./src/app/interseptors/AuthInterceptor.ts","./src/app/shared/components/loader/loader.component.ts","./src/app/shared/components/loader/loader.component.html","./src/app/components/zone-name/zone-name.component.ts","./src/app/components/zone-name/zone-name.component.html","./src/app/shared/components/navigation/header/header.component.ts","./src/app/shared/components/navigation/header/header.component.html","./src/environments/environment.ts","./src/app/components/pop-name/pop-name.component.ts","./src/app/components/pop-name/pop-name.component.html","./src/app/components/remedy-action/remedy-action.component.ts","./src/app/components/remedy-action/remedy-action.component.html","./src/app/Services/operator.service.ts","./src/app/shared/components/login/login.component.ts","./src/app/shared/components/login/login.component.html","./src/app/shared/components/layout/layout.module.ts","./src/app/components/daily-operation/sla-format.pipe.ts","./src/app/shared/components/navigation/sidebar/sidebar.component.ts","./src/app/shared/components/navigation/sidebar/sidebar.component.html","./src/app/shared/services/notification-msg.service.ts","./src/app/shared/components/navigation/footeer/footeer.component.ts","./src/app/shared/components/navigation/footeer/footeer.component.html","./src/app/shared/components/login/login.module.ts","./src/app/Services/pagination.service.ts","./src/app/Services/status.service.ts","./src/app/shared/modules/AuthGuardService.ts","./src/app/components/pop-name-abbreviations/pop-name-abbreviations.component.ts","./src/app/components/pop-name-abbreviations/pop-name-abbreviations.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/Services/daily-operations.service.ts","./src/app/Services/zone-name.service.ts","./src/app/shared/services/delete-service.service.ts","./src/app/components/operator/operator.component.ts","./src/app/components/operator/operator.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/components/add-daily-operation/add-daily-operation.component.ts","./src/app/components/add-daily-operation/add-daily-operation.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/modules/material/material.module.ts","./src/app/Services/pop-name-abbreviations.service.ts","./src/app/shared/components/layout/layout.component.ts","./src/app/shared/components/layout/layout.component.html","./src/app/Services/account.service.ts","./src/app/Services/remedy-action.service.ts","./src/app/app.module.ts","./src/app/shared/modules/AuthGuardAdminServices.ts","./src/app/components/test/test.component.ts","./src/app/components/test/test.component.html","./src/app/Services/transmission-media.service.ts","./src/app/Services/pop-name.service.ts","./src/app/Services/tech-name.service.ts","./src/app/components/edit-daily-opertion/edit-daily-opertion.component.ts","./src/app/components/edit-daily-opertion/edit-daily-opertion.component.html","./src/app/components/status/status.component.ts","./src/app/components/status/status.component.html","./src/app/Model/pagination.ts","./src/app/Services/logs.service.ts","./src/app/shared/msg/delete/delete.component.ts","./src/app/shared/msg/delete/delete.component.html","./src/app/components/logs/logs.component.ts","./src/app/components/logs/logs.component.html","./src/app/Model/pagination.model.ts","./src/app/components/daily-operation/daily-operation.component.ts","./src/app/components/daily-operation/daily-operation.component.html","./src/app/shared/services/emp.service.ts","./src/app/components/tech-name/tech-name.component.ts","./src/app/components/tech-name/tech-name.component.html","./src/app/app-routing.module.ts","./src/app/components/transmission-media/transmission-media.component.ts","./src/app/components/transmission-media/transmission-media.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEM;AACf;;AAClC,kEAAkE;AAI3D,MAAM,eAAe;IAC1B,gBAAgB,CAAC;IAEjB,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,IAAI,OAAO,GAAG,OAAO,CAAC;QACtB,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAG5C,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,IAAI,EAAE,EAAE;YACtD,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,uCAAsC;SACrI;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,IAAE,GAAG,CAAC,MAAM,KAAG,CAAC,EAAE;gBAC/C,YAAY,CAAC,KAAK,EAAE,CAAC;gBACtB,uCAAuC;gBAEtC,GAAG,CAAC,KAAK,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;gBACvC,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;gBACvB,QAAQ,CAAC,MAAM,EAAE,CAAC;aACnB;YACD,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;;8EAvBU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,4EACI;QAAA,sEACI;QAAA,yEAA2B;QAC/B,4DAAM;QACV,4DAAM;;6FDGO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;;ICYvD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAW;IAAA,mEAAQ;IAAA,4DAAY;IAC/B,4EACA;IADwC,gVAAsB;IAA9D,4DACA;IAAA,4EACA;IADoD,kVAAwB;IAA5E,4DACA;IAAA,sHAAwE;IAC1E,4DAAiB;IACjB,6EAEE;IAFwB,4TAA0B;IAElD,iEACF;IAAA,4DAAS;IACX,4DAAM;;;IARsC,0DAAsB;IAAtB,oFAAsB;IACV,0DAAwB;IAAxB,sFAAwB;IACnD,0DAAoB;IAApB,uFAAoB;IAG7C,0DAA2C;IAA3C,kHAA2C;;;;IAM3C,6EACE;IADgF,gUAAyB;IACzG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAIb,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAUE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAqD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKpE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEzF,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,qGACF;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IAD+C,oYAA0B;IAAzE,4DACA;IAAA,yJAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHoC,0DAA0B;IAA1B,qFAA0B;IAChD,0DAAoD;IAApD,oIAAoD;;;IAPnF,+EACE;IAAA,yJAEe;IACf,yJAKe;IACjB,4DAAW;;;IATM,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAE1E,wEACE;IAAA,6EACE;IADyD,2bAAsB;IAC/E,iEACF;IAAA,4DAAS;IACT,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC3B,6EACE;IADyD,4bAAuB;IAChF,mEAEF;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACE;IAD8D,8bAAyB;IACvF,mEACF;IAAA,4DAAS;IAET,6EACE;IADgC,8VAAsB;IACtD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP2B,0DAAuB;IAAvB,wFAAuB;;;IAZnE,+EACE;IAAA,0JASe;IACf,0JAQe;IAEjB,4DAAW;;;IApBM,0DAAmB;IAAnB,uFAAmB;IAUnB,0DAAkB;IAAlB,sFAAkB;;;IAoBnC,sFACE;IAAA,wEACF;IAAA,4DAAkB;;;;IAMpB,gFAC0F;;;IAAxF,gNAAsE;;;IACxE,4EAAqE;;;IACrE,qEAAoE;;;;;IAxExE,0EAGJ;IAAA,mFAIQ;IAJ6C,+VAAkC;IAI/E,4EACE;IAAA,qJAA0E;IAC1E,uIAA+E;IACjF,qEAAe;IAGf,4EACE;IAAA,qJAA2F;IAC3F,uIAUW;IACb,qEAAe;IAEf,4EACE;IAAA,uJAA4E;IAC5E,yIAqBW;IAIb,qEAAe;IAKf,6EACE;IAAA,uJAEkB;IAEpB,qEAAe;IAIf,qJAC0F;IAC1F,qJAAqE;IACrE,uIAAoE;IAGtE,4DAAY;IAEd,4DAAM;;;IA1EC,0DAAyB;IAAzB,yFAAyB;IAkEX,2DAA2B;IAA3B,kJAA2B;IAE3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD5FzD,MAAM,iBAAiB;IAwB5B,YAAoB,MAAiB,EAC5B,OAAwB,EACxB,cAA8B,EAC7B,YAAmB,EACnB,aAAmC,EACnC,mBAA2C;QALjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAiB;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC7B,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QA5BrD,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,WAAM,GAAY,KAAK,CAAC;QACxB,eAAU,GAAY,KAAK,CAAC;QAC5B,kBAAa,GAAgB,EAAE,CAAC;QAChC,aAAQ,GAAW,EAAE,CAAC;QACtB,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACP,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAI9B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAiLxD,8BAA8B;QAC9B,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAC3B,gBAAW,GAAW,EAAE,CAAC;QACzB,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,YAAO,GAAG,IAAI,CAAC;QACf,cAAS,GAAG,IAAI,CAAC;QACV,QAAG,GAAW,CAAC,CAAC;QA+BvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QAlNiC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAAC,CAAC;IAElG,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3G,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAE9C,CAAC,CAAC;IACJ,CAAC;IACD,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5F,IAAI,CAAC,aAAa,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YACpC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACF,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAID,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,gEAAgE;QAChE,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,UAAU,CAAC,GAAQ;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,YAAY,GAChB;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,EAAE,IAAI,CAAC;YACR,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAE5D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAG,EAAE;gBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,CAAC,EAAE,CAAC,CAAC;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QACtD,CAAC,CAEF,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,cAAc;QAEZ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,IAAI,aAAa,GACjB;YACE,EAAE,EAAE,IAAI,CAAC,UAAU;YACnB,IAAI,EAAE,IAAI,CAAC,QAAQ;SACpB;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACtB,CAAC,EAAE,IAAI,CAAC;gBACR,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACtB,CAAC,EAAE,CAAC,CAAC;gBACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CAAC,CAAC;SAEN;aACI;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAC,CAAC,CAClE,CAAC;SAGH;QACD,IAAI,CAAC,IAAI,GAAG,KAAK;IACnB,CAAC;IAED,QAAQ,CAAC,GAAQ;QACf,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEtB,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAC,CAAC,CAClE,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD,wBAAwB;QACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACtE,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IACD,kCAAkC,CAAC,GAAQ;QACzC,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QACzB,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,SAAS,CAC9D,GAAG,CAAC,EAAE;YACJ,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;aACnC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAWD,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAExH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACtC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBACvD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;gBAClE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC,CAAC;IACJ,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;kFA7PU,iBAAiB;iGAAjB,iBAAiB;kEAmBjB,8DAAO;kEACP,wEAAY;;;;;;QCtCzB,8EACE;QAAA,kFACE;QAAA,iFACC;QAAA,sEACA;QAAA,yEACC;QAAA,0EAA0D;QAAnB,uIAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAChF,4DAAiB;QAErB,4DAAkB;QAClB,yEAA2B;QAC3B,yEACE;QAAA,6GAWI;QACJ,qFACE;QAAA,4EACA;QADgB,yLAAuB,iFAAkD,iBAAa,IAA/D;QAAvC,4DACA;QAAA,qHAES;QACX,4DAAiB;QACnB,4DAAM;QAEN,+GAKM;QACN,4MA+Ec;QAEd,qFACA;QADiE,qJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAClB,4DAAW;;;QA7GD,0DAAU;QAAV,0EAAU;QAaE,0DAAuB;QAAvB,kFAAuB;QAC0B,0DAAe;QAAf,+EAAe;QAM9D,0DAAkC;QAAlC,sGAAkC;QAuFzC,0DAAiC;QAAjC,kJAAiC;;6FDpGrC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;ylBAoBqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEtCzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;;;;;;;;;AAUjE,MAAM,eAAe;IAE5B,YAAqB,MAAc,EAAS,cAA+B,EAAS,mBAA0C;QAAzG,WAAM,GAAN,MAAM,CAAQ;QAAS,mBAAc,GAAd,cAAc,CAAiB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAuB;QAD7G,kBAAa,GAAG,IAAI,0DAAY,EAAE,CAAC;QAkB7C,oBAAe,GAAC,GAAE,EAAE;YAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;IAnBiI,CAAC;IAEnI,QAAQ;IAER,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,GAAG,GAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAEtC,CAAC,EAEA,KAAK,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAC,CAC3D,CAAC;IAEJ,CAAC;;8EAlBY,eAAe;+FAAf,eAAe;QCV5B,8EACI;QAAA,sEACI;QAAA,uEACI;QAAA,oEACA;QACA,0EAAqB;QAAA,iFAAsB;QAAA,4DAAO;QAEtD,4DAAI;QACR,4DAAM;QACN,sEACI;QAAA,4EACI;QADoB,uIAAS,qBAAiB,IAAC;QAC/C,8EAAoB;QAAA,+DAAI;QAAA,4DAAW;QACvC,4DAAS;QACb,4DAAM;QAGN,0EACI;QAAA,yEACI;QAuBA,sEACI;QAAA,6EACG;QADgB,wIAAS,YAAQ,IAAC;QAClC,sEAAU;QAAA,+EAAuB;QAAA,uEAAW;QAAA,4DAAW;QAG1D,4DAAS;QAMb,4DAAK;QACT,4DAAK;QACT,4DAAM;QAEV,4DAAc;;6FD9CD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;oTAEgB,aAAa;kBAA7B,oDAAM;;;;;;;;;;;;;;AEXP;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;;;ICazD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;IAIxE,wEACE;IAAA,iFAAmC;IAAA,uDAAgB;IAAA,4DAAa;IAClE,qEAAe;;;IADD,0DAAsB;IAAtB,2FAAsB;IAAC,0DAAgB;IAAhB,gFAAgB;;;;IAVvD,sEACA;IAAA,qFACE;IAAA,4EAAW;IAAA,kEAAO;IAAA,4DAAY;IAC9B,4EACA;IADyC,8UAAqB;IAA9D,4DACA;IAAA,4EACA;IADqD,kVAAuB;IAA5E,4DACA;IAAA,qHAAwE;IAC5E,4DAAiB;IACjB,iFACE;IAAA,iFACE;IADU,wVAAwB;IAClC,qIAEe;IACjB,4DAAa;IACf,4DAAiB;IACjB,8EACG;IADuB,4TAA0B;IACjD,mEACH;IAAA,4DAAS;IACT,4DAAM;;;IAduC,0DAAqB;IAArB,mFAAqB;IACT,0DAAuB;IAAvB,qFAAuB;IACnD,0DAAoB;IAApB,uFAAoB;IAGnC,0DAAwB;IAAxB,sFAAwB;IACA,0DAAY;IAAZ,qFAAY;IAKmB,0DAA0C;IAA1C,iHAA0C;;;;IAMxG,6EACK;IAD6E,+TAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,mYAA0B;IAA1E,4DACA;IAAA,wJAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,wJAEkB;IACf,wJAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAS1C,sFAAmD;IAAA,oEAAI;IAAA,sEAAU;IAAA,4DAAI;IACrE,4DAAkB;;;IAClB,+EACE;IAAA,uDACF;IAAA,4DAAW;;;IADT,0DACF;IADE,8GACF;;;IAKE,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAIxE,wEAEI;IAAA,6EACE;IAD0D,0bAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,2bAAuB;IAChF,mEAEH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD8D,6bAAyB;IACvF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,6VAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAfxE,+EAGI;IAAA,yJAUiB;IACf,yJAQe;IAErB,4DAAW;;;IArBQ,0DAAmB;IAAnB,uFAAmB;IAWjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IAhFpE,0EAEE;IAAA,mFAGF;IAHuD,8VAAkC;IAGzF,4EACI;IAAA,oJAA0E;IAC1E,sIAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,oJAA2F;IAC3F,sIAUW;IACf,qEAAe;IACf,4EACE;IAAA,sJACkB;IAClB,wIAEW;IACf,qEAAe;IAGb,6EACI;IAAA,sJAA4E;IAC5E,wIAwBW;IAIf,qEAAe;IAKf,6EACI;IAAA,sJAEkB;IAEtB,qEAAe;IAIf,oJAAsI;IACtI,oJAAqE;IACrE,sIAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IAnFW,0DAAyB;IAAzB,yFAAyB;IA4ErB,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD3GrD,MAAM,gBAAgB;IAsB3B,YAAoB,MAAiB,EAC5B,OAAuB,EACtB,YAAmB,EACnB,aAAmC,EACpC,eAAgC,EAC/B,mBAA2C;QALjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAgB;QACtB,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAC/B,wBAAmB,GAAnB,mBAAmB,CAAwB;QA1BrD,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,WAAM,GAAS,KAAK,CAAC;QACrB,eAAU,GAAY,KAAK,CAAC;QAC5B,iBAAY,GAAe,EAAE,CAAC;QAC9B,YAAO,GAAW,EAAE,CAAC;QACrB,cAAS,GAAW,CAAC,CAAC;QACvB,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAY,KAAK,CAAC;QAChC,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACb,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACZ,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAC9B,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAWzB,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAC,QAAQ,CAAC,CAAC;QACjE,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAkNxD,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAkCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QA9PrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAAC,CAAC;IAQ5C,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;YAE5C,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACjD,IAAI,CAAC,SAAS,GAAG,GAAmB,CAAC;YAEvC,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3F,IAAI,CAAC,YAAY,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACjD,IAAI,CAAC,SAAS,GAAG,GAAmB,CAAC;QACvC,CAAC,CAAC,CAAC;QACH,UAAU,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAE,KAAK,EAAC,IAAI,CAAC;IAC1C,CAAC;IAIG,6BAA6B;IAC7B,iDAAiD;IACjD,kDAAkD;IAClD,6CAA6C;IAC7C,mEAAmE;IACnE,kEAAkE;IAClE,mDAAmD;IAEnD,QAAQ;IAER,0DAA0D;IAC1D,4CAA4C;IAC5C,QAAQ;IACR,IAAI;IACN,QAAQ;QAEN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IACD,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,YAAY,GAChB;YACE,EAAE,EAAE,IAAI,CAAC,SAAS;YAClB,IAAI,EAAE,IAAI,CAAC,OAAO;YAClB,UAAU,EAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SACnC;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;YACvB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,SAAS,CAChD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAE,CAAC,CAAC;YACrB,CAAC,EACC,KAAK,CAAC,EAAE;gBAER,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,SAAS,CAChD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAE,CAAC,CAAC;YACrB,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACD,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IAElB,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAC1C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAI3B,CAAC,EACD,KAAK,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAC,CAC5D,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,WAAW,GACf;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;SACnC;QACD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,CAC/C,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC5D,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACrB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CACzD,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;IAEnC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI;IAChB,CAAC;IACD,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAG,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACrE,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC,CAAC,GAAS;QAE3C,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;QACxB,IAAI,UAAU,GAAG,GAAG,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,EAAG,UAAU,CAAC,CAAC,SAAS,CAC7D,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAOA,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEtH,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,EAAC,MAAM,EAAC,UAAU,EAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBAEtB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;gBACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAGN,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;gFAxSS,gBAAgB;gGAAhB,gBAAgB;kEA8Bd,8DAAO;kEACP,wEAAY;;;;;;QChD1B,8EACG;QAAA,kFACE;QAAA,iFACC;QAAA,qEACA;QAAA,yEACC;QAAA,0EAAsC;QAAnB,sIAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAC7D,4DAAiB;QAEpB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,6GAiBI;QACF,qFACI;QAAA,4EACD;QADiB,wLAAuB,gFAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,oHAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,8GAKM;QACN,2MAuFc;QAGd,qFACA;QADiE,oJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAChB,4DAAW;;;QA5HH,0DAAU;QAAV,0EAAU;QAmBM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAgGzC,0DAAiC;QAAjC,kJAAiC;;6FDpHnC,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;ylBA+BuB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEjD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;ICazD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAW;IAAA,6EAAkB;IAAA,4DAAY;IACzC,4EACA;IADyC,4VAA8B;IAAvE,4DACA;IAAA,4EACA;IADqD,0VAA4B;IAAjF,4DACA;IAAA,0HAAwE;IAC5E,4DAAiB;IACjB,6EACG;IADuB,gUAA0B;IACjD,kEACH;IAAA,4DAAS;IACT,4DAAM;;;IAPuC,0DAA8B;IAA9B,4FAA8B;IAClB,0DAA4B;IAA5B,0FAA4B;IACxD,0DAAoB;IAApB,uFAAoB;IAEoB,0DAAmD;IAAnD,0HAAmD;;;;IAMjH,6EACK;IAD6E,oUAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,wYAA0B;IAA1E,4DACA;IAAA,6JAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,6JAEkB;IACf,6JAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAUxC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAIxE,wEAEI;IAAA,6EACE;IAD0D,+bAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,gcAAuB;IAChF,mEAEH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD+D,kcAAyB;IACxF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,kWAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAfxE,+EAGI;IAAA,8JAUiB;IACf,8JAQe;IAErB,4DAAW;;;IArBQ,0DAAmB;IAAnB,uFAAmB;IAWjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IAxEpE,0EAEJ;IAAA,mFAGI;IAHyE,mWAAkC;IAG3G,4EACI;IAAA,yJAA0E;IAC1E,2IAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,yJAA2F;IAC3F,2IAUW;IACf,qEAAe;IAEf,4EACI;IAAA,2JAA4E;IAC5E,6IAwBW;IAIf,qEAAe;IAKf,6EACI;IAAA,2JAEkB;IAEtB,qEAAe;IAIf,yJAAsI;IACtI,yJAAqE;IACrE,2IAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IA3E2B,0DAAyB;IAAzB,yFAAyB;IAoErC,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD9FrD,MAAM,qBAAqB;IAqBhC,YAAoB,MAAiB,EAC5B,OAA4B,EAC3B,YAAmB,EACnB,aAAmC,EACnC,mBAA2C;QAJjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAqB;QAC3B,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QAxBrD,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QAEtB,WAAM,GAAC,KAAK,CAAC;QACb,eAAU,GAAY,KAAK,CAAC;QAC5B,iBAAY,GAAoB,EAAE,CAAC;QACnC,qBAAgB,GAAW,EAAE,CAAC;QAC9B,mBAAc,GAAW,CAAC,CAAC;QAC3B,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QACpB,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAW9B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAkLrD,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAmCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QAhOxB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAC7C,CAAC;IAOD,gBAAgB;QACd,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC/G,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAE9C,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,qBAAqB;QACrB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAChG,IAAI,CAAC,YAAY,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;YACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACF,UAAU,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC;IAC3C,CAAC;IAGC,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,YAAY,GAChB;YACE,EAAE,EAAE,IAAI,CAAC,cAAc;YACvB,IAAI,EAAE,IAAI,CAAC,gBAAgB;SAC5B;QACD,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,EAAE;YAC5B,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,SAAS,CACrD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YAC1B,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC,SAAS,CACrD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YAC1B,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACA,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IACnB,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAE1B,CAAC,EACD,KAAK,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAC,CAC5D,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QACZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,gBAAgB,GACpB;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CACzD,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC5D,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QAC1B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CACzD,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;IAAE,CAAC;IAEtC,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IAED,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,EAAG,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACnF,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC,CAAC,GAAS;QAE3C,IAAI,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,aAAa,EAAG,WAAW,CAAC,CAAC,SAAS,CACnE,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAOC,WAAW,CAAC,KAAU;QACpB,qBAAqB;QACrB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACzH,uBAAuB;QACpB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3F,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC;gBACnC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACrC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,YAAY,CAAC,CAAC;gBACjE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,sBAAsB;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAEN,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;0FAxQQ,qBAAqB;qGAArB,qBAAqB;kEA6BrB,8DAAO;kEACP,wEAAY;;;;;;QC7CxB,8EACG;QAAA,kFACE;QAAA,iFACC;QAAA,0EACA;QAAA,yEACC;QAAA,0EAAqC;QAAnB,2IAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAE3D,4DAAiB;QACrB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,iHAUI;QACF,qFACI;QAAA,4EACD;QADiB,6LAAuB,qFAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,yHAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,mHAKM;QACN,gNA+Ec;QAEd,qFACA;QADiE,yJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAChB,4DAAW;;;QA5GH,0DAAU;QAAV,0EAAU;QAYM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAuFzC,0DAAiC;QAAjC,kJAAiC;;6FDtGnC,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;qgBA8BqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AE9CzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAChC;AAEN;;;;AAO9B,MAAM,eAAe;IAK1B,iDAAiD;IACjD,YAAoB,IAAgB,EAAW,iBAAoC;QAA/D,SAAI,GAAJ,IAAI,CAAY;QAAW,sBAAiB,GAAjB,iBAAiB,CAAmB;QAL3E,YAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QACpC,QAAG,GAAI,sCAAsC,CAAC;QAC9C,SAAI,GAAC,sCAAsC,CAAE;QAC9C,SAAI,GAAI,sCAAsC,CAAC;QAI1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACpE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAAC;IAChE,CAAC;IACD,WAAW,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC5G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IAEH,0CAA0C;IAC1C,sDAAsD;IACtD,IAAI;IAEJ,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,cAAc,EAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IACD,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,cAAc,CAAC,EAAS;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,EAAE,CAAC,CAAE;IAC/D,CAAC;IACD,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;8EA/CU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACG;;;;;;;;;;;;;;ICkB9C,4EACC;IAAA,8EACD;IAAA,4DAAY;;;IAkBZ,4EAA8D;IAAA,6EAAkB;IAAA,4DAAY;;ADzB3G,MAAM,cAAc;IAQzB,YAAoB,KAAqB,EAAU,MAAc,EACvD,YAAmB,EAAS,cAA8B,EAAS,mBAA2C;QADpG,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QACvD,iBAAY,GAAZ,YAAY,CAAO;QAAS,mBAAc,GAAd,cAAc,CAAgB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAwB;QARxH,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAEnD,CAAC,CAAC;QAeH,SAAI,GAAU,EAAE,CAAC;QARf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gCAAgC,CAAC,CAAC;QAC7D,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,KAAK,IAAI,WAAW,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE;YACxD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;SAE9B;IAEH,CAAC;IAGD,QAAQ;IAER,CAAC;IAED,QAAQ;QAEN,IAAI,SAAS,GACb;YACE,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;YAClD,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;SAC5C;QAED,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;gBACrH,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC/C,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACrD,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBACvD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aACnC;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;gBAClG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;aAE/D;iBACI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;gBAClC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,8BAA8B,CAAC;aAC9D;QAEH,CAAC,EACG,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,8BAA8B,CAAC,EAAC,CAAC,CAC7E,CAAC;IAIJ,CAAC;;4EAxDU,cAAc;8FAAd,cAAc;QCf3B,yEACE;QAAA,2EACI;QAAA,mFACI;QAAA,yEACE;QACA,oEACA;QAAA,0EAAqB;QAAA,iFAAsB;QAAA,4DAAO;QACpD,4DAAM;QACL,qEAAI;QAAA,sEAAW;QAAA,4DAAK;QACrB,0EACI;QADE,0IAAY,cAAU,IAAC;QAGrB,qFACI;QAAA,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,uEACA;QAAA,6EACE;QAAA,4EAAU;QAAA,0EAAc;QAAA,4DAAW;QACrC,4DAAS;QAGT,wHAEY;QAEhB,4DAAiB;QAMhB,qFACG;QAAA,6EAAY;QAAA,oEAAQ;QAAA,4DAAY;QAChC,uEACC;QAAA,6EACG;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC5B,4DAAS;QAKX,wHAA4F;QAEhG,4DAAiB;QAGrB,8EAAsC;QAAA,mEAAO;QAAA,4DAAS;QAC1D,4DAAO;QAEX,4DAAmB;QACvB,4DAAW;QAEb,4DAAM;;QA1C8C,0DAAkB;QAAlB,+EAAkB;QAWpC,0DAAgD;QAAhD,qKAAgD;QAoBhD,0DAAgD;QAAhD,qKAAgD;;6FDzBrE,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAC4B;AACT;AACM;AACP;AACR;AACV;AACyB;AACnB;AACsB;AACA;AACW;AACf;AACf;AACY;AACS;AACrB;AACyB;AACE;AACD;AACe;AACpB;AACQ;AAC2B;AACxC;AAC+B;AACW;AAC/C;AACV;AACzD,+FAA+F;AAClC;AACS;AAC4C;AAC7B;AAC6B;AACjC;AACvC;AACmB;AACU;AAEoD;AACxC;AACtC;;AAkDtC,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAFZ,CAAC,+DAAK,EAAE,sFAAoB,EAAE,sFAAoB,EAAE,iEAAU,EAAE,0FAAsB,EAAE,sFAAiB,CAAC,YArB5G;YACP,4DAAY;YACZ,4DAAY;YACZ,sEAAgB;YAChB,gFAAc;YACd,kEAAmB;YACnB,0DAAW;YACX,qEAAgB;YAChB,sEAAe;YACf,uEAAa;YACb,iFAAmB;YACnB,uEAAc;YACd,2EAAmB;YACnB,oFAA2B;YAC3B,wDAAY;YACZ,wGAA0B;YAC1B,oGAAsB;YACtB,+FAAkB;YAClB,2DAAe;SAEhB;mIAGU,YAAY,mBA7CrB,iEAAe;QACf,mFAAe;QACf,uFAAgB;QAChB,uFAAgB;QAChB,oGAAkB;QAClB,qFAAa;QACb,6EAAe;QACf,iGAAiB;QACjB,gGAAgB;QAChB,+GAAqB;QACrB,2FAAe;QACf,mGAAiB;QACjB,8HAA0B;QAC1B,qHAAuB;QACvB,gIAA0B;QAC1B,gIAA0B;QAC1B,mGAAiB;QACjB,yEAAe;QACf,qFAAa;QACb,yIAA6B;QAC7B,iGAAa,aAGb,4DAAY;QACZ,4DAAY;QACZ,sEAAgB;QAChB,gFAAc;QACd,kEAAmB;QACnB,0DAAW;QACX,qEAAgB;QAChB,sEAAe;QACf,uEAAa;QACb,iFAAmB;QACnB,uEAAc;QACd,2EAAmB;QACnB,oFAA2B;QAC3B,wDAAY;QACZ,wGAA0B;QAC1B,oGAAsB;QACtB,+FAAkB;QAClB,2DAAe;6FAKN,YAAY;cA/CxB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,iEAAe;oBACf,mFAAe;oBACf,uFAAgB;oBAChB,uFAAgB;oBAChB,oGAAkB;oBAClB,qFAAa;oBACb,6EAAe;oBACf,iGAAiB;oBACjB,gGAAgB;oBAChB,+GAAqB;oBACrB,2FAAe;oBACf,mGAAiB;oBACjB,8HAA0B;oBAC1B,qHAAuB;oBACvB,gIAA0B;oBAC1B,gIAA0B;oBAC1B,mGAAiB;oBACjB,yEAAe;oBACf,qFAAa;oBACb,yIAA6B;oBAC7B,iGAAa;iBACd;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,4DAAY;oBACZ,sEAAgB;oBAChB,gFAAc;oBACd,kEAAmB;oBACnB,0DAAW;oBACX,qEAAgB;oBAChB,sEAAe;oBACf,uEAAa;oBACb,iFAAmB;oBACnB,uEAAc;oBACd,2EAAmB;oBACnB,oFAA2B;oBAC3B,wDAAY;oBACZ,wGAA0B;oBAC1B,oGAAsB;oBACtB,+FAAkB;oBAClB,2DAAe;iBAEhB;gBACD,SAAS,EAAE,CAAC,+DAAK,EAAE,sFAAoB,EAAE,sFAAoB,EAAE,iEAAU,EAAE,0FAAsB,EAAE,sFAAiB,CAAC;aACtH;;;;;;;;;;;;;;AC5FD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,aAAa;IAH1B;QAIE,cAAS,GAAW,EAAE,CAAE;KA6BzB;IA1BC,SAAS,CAAC,KAAa;QACrB,IAAG,KAAK,IAAI,IAAI,EAAE;YAChB,IAAI,GAAG,GAAc,KAAK,CAAC,KAAK,CAAC,GAAG,EAAG,CAAC,CAAC,CAAC;YAC1C,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAE;YACnB,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACnB,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACrB,IAAG,IAAI,IAAI,IAAI,EAAC;gBACd,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;YAAA,IAAG,KAAK,IAAI,IAAI,EAAC;gBAChB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAC7B;YACD,IAAG,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI,EAAC;gBACpC,OAAO,GAAG,EAAE,CAAC;gBACb,sCAAsC;gBACtC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9B;YACD,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SAC9B;aACG;YACF,OAAO,GAAG,CAAC;SACZ;IAEH,CAAC;;0EA5BU,aAAa;4GAAb,aAAa;6FAAb,aAAa;cAHzB,kDAAI;eAAC;gBACJ,IAAI,EAAE,WAAW;aAClB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;IC+B1C,2EAAuE;IAAA,mEAAQ;IAAA,4DAAO;;;;IAEtF,+EAAoG;IAAA,uEACpG;IAAA,4DAAW;;;IADmB,8JAAqC;;;;IAJvE,uEACI;IADe,oUAAqC;IACpD,2EAAU;IAAA,mEAAQ;IAAA,4DAAW;IAC7B,oHAAsF;IAEtF,4HACW;IACf,4DAAI;;;IAJwC,0DAA6B;IAA7B,uGAA6B;IAEA,0DAA6B;IAA7B,uGAA6B;;;;IAGtG,0EAEI;IAAA,wEACI;IAAA,2EAAU;IAAA,0EAAe;IAAA,4DAAW;IACpC,0EAA0B;IAAA,mEAAQ;IAAA,4DAAO;IAC7C,4DAAI;IACJ,wEACI;IAAA,2EAAU;IAAA,0EAAe;IAAA,4DAAW;IACpC,0EAA0B;IAAA,oEAAQ;IAAA,4DAAO;IAC7C,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,qEAAS;IAAA,4DAAO;IAC9C,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,8EAAkB;IAAA,4DAAO;IACvD,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,qEAAS;IAAA,4DAAO;IAC9C,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,kEAAM;IAAA,4DAAO;IAC3C,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,yEAAa;IAAA,4DAAO;IAClD,4DAAI;IACJ,yEACI;IAAA,4EAAU;IAAA,2EAAe;IAAA,4DAAW;IACpC,2EAA0B;IAAA,gEAAI;IAAA,4DAAO;IACzC,4DAAI;IACR,4DAAM;;;IAlCe,8JAAsC;;;AD5BxD,MAAM,gBAAgB;IAG3B,YAAoB,YAAmB;QACrC,wCAAwC;QADtB,iBAAY,GAAZ,YAAY,CAAO;QAFvC,aAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC7C,aAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAY5C,eAAU,GAAG,IAAI,CAAC;QAClB,gBAAW,GAAY,KAAK,CAAC;QAC7B,cAAS,GAAG,KAAK,CAAC;QAClB,mBAAc,GAAY,KAAK,CAAC;IAX/B,CAAC;IAEF,QAAQ;IACR,CAAC;;gFATU,gBAAgB;gGAAhB,gBAAgB;QCP7B,yEACI;QAAA,oEACA;QAAA,wEAAuC;QAAA,uDAAY;QAAA,4DAAK;QAE5D,4DAAM;QACN,yEAA2B;QAC3B,2EAGI;QAAA,uEACI;QAAA,2EAAU;QAAA,+DAAI;QAAA,4DAAW;QACzB,0EAA2B;QAAA,iEAAI;QAAA,4DAAO;QAC1C,4DAAI;QACJ,wEACI;QAAA,4EAAU;QAAA,iEAAK;QAAA,4DAAW;QAC1B,2EAA2B;QAAA,kEAAK;QAAA,4DAAO;QAC3C,4DAAI;QACJ,wEACI;QAAA,4EAAU;QAAA,gEAAI;QAAA,4DAAW;QACzB,2EAA2B;QAAA,mFAAsB;QAAA,4DAAO;QAC5D,4DAAI;QAQJ,0GAMI;QACJ,+GAkCM;QAEV,4DAAW;;QArEgC,0DAAY;QAAZ,6EAAY;QAOQ,0DAAwC;QAAxC,0JAAwC;QAmB1B,2DAA4C;QAA5C,8GAA4C;QAOxD,0DAA6B;QAA7B,iGAA6B;;6FD5BjF,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,sBAAsB;IAGjC,YAAmB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;QAFxC,uBAAkB,GAAgC,OAAO,CAAC;QAC1D,qBAAgB,GAA6B,KAAK,CAAC;QAInD,WAAM,GAAsB;YAC1B,QAAQ,EAAC,IAAI;YACb,kBAAkB,EAAC,IAAI,CAAC,kBAAkB;YAC1C,gBAAgB,EAAC,IAAI,CAAC,gBAAgB;SACvC;IAP2C,CAAC;IAS7C,OAAO,CAAC,GAAU;QAChB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAC,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,IAAI,CAAC,GAAU;QACb,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;;4FApBU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,8EACI;QAAA,oEAAG;QAAA,+HAAmE;QAAA,4DAAI;QAC9E,4DAAc;;6FDKD,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACI;AACc;AACT;AACH;AACmB;;AAkBjE,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,mBAJZ;QACT,+DAAK;KACL,YAVQ;YACP,4DAAY;YACZ,gFAAc;YACd,kEAAmB;YACnB,qEAAgB;YAChB,uEAAa;SAEd;mIAKU,WAAW,mBAbN,+DAAc,aAE5B,4DAAY;QACZ,gFAAc;QACd,kEAAmB;QACnB,qEAAgB;QAChB,uEAAa;6FAOJ,WAAW;cAdvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAE,+DAAc,CAAC;gBAC/B,OAAO,EAAE;oBACP,4DAAY;oBACZ,gFAAc;oBACd,kEAAmB;oBACnB,qEAAgB;oBAChB,uEAAa;iBAEd;gBACD,SAAS,EAAC;oBACT,+DAAK;iBACL;aACF;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAA2C;AAEiB;;AAIrD,MAAM,iBAAiB;IAe1B;QACI,IAAI,CAAC,eAAe,GAAG,IAAI,uEAAe,EAAE,CAAC;IACjD,CAAC;IAdD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;IAC1C,CAAC;IAED,IAAI,kBAAkB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC;IACnD,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;IACzC,CAAC;IAMD,MAAM,CAAC,SAAoB;QACvB,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QACnD,IAAI,CAAC,eAAe,CAAC,cAAc,GAAG,SAAS,CAAC,MAAM,CAAC;IAC3D,CAAC;;kFAvBQ,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;6FAAjB,iBAAiB;cAD7B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,aAAa;IAIxB,+CAA+C;IAE/C,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,QAAG,GAAI,oCAAoC,CAAC;QAC5C,SAAI,GAAC,oCAAoC,CAAE;QAC3C,SAAI,GAAI,oCAAoC,CAAC;IAGL,CAAC;IAEzC,SAAS,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC1G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,YAAY,CAAC,IAAY;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,YAAY,EAAC,IAAI,CAAC,CAAC;IAC3D,CAAC;IACD,YAAY,CAAC,IAAY;QAExB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,eAAe,EAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;IAED,YAAY,CAAC,EAAS;QAErB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,eAAe,EAAC,EAAE,CAAC,CAAE;IAC7D,CAAC;IAED,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;0EA5CU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAA2C;;;AAapC,MAAM,gBAAgB;IACzB,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAExC,WAAW,CAAC,IAA4B,EAAE,KAA0B;QAGnE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,KAAK,IAAI,WAAW,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;QACA,OAAO,IAAI,CAAC;IACf,CAAC;;gFAZS,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFb,MAAM;6FAET,gBAAgB;cAH5B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;ICQjD,4EACI;IAD8E,wUAAyB;IACvG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAGjB,yEACI;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACe;IAEjB,4DAAM;;;IAeI,sFAAmD;IAAA,oEAAI;IAAA,uEAAW;IAAA,4DAAI;IAAC,4DAAkB;;;IACzF,+EAA8D;IAAA,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,sFAAmD;IAAA,oEAAI;IAAA,qEAAS;IAAA,4DAAI;IAAC,4DAAkB;;;IACvF,+EAA2D;IAAA,uDAC3D;IAAA,4DAAW;;;IADgD,0DAC3D;IAD2D,gGAC3D;;;IAIA,sFAAmD;IAAA,oEAAG;IAAA,mEAAQ;IAAA,4DAAI;IAAC,4DAAkB;;;IACrF,+EAA0D;IAAA,uDAAoB;IAAA,4DAAW;;;IAA/B,0DAAoB;IAApB,+FAAoB;;;IAI9E,sFAAmD;IAAA,oEAAG;IAAA,qEAAU;IAAA,4DAAI;IAAC,4DAAkB;;;IACvF,+EAA2D;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAUhF,sFACI;IAAA,oEACJ;IAAA,4DAAkB;;;IAGtB,4EAAqE;;;IACrE,qEAAoE;;;;IAGpE,gFAC2F;;;IAAvF,gNAAqE;;;;IAjDjF,0EACI;IAAA,gFACI;IAUA,4EACI;IAAA,iKAAyF;IACzF,mJAAiG;IACrG,qEAAe;IACf,4EACI;IAAA,iKAAuF;IACvF,mJACW;IACf,qEAAe;IAEf,4EACI;IAAA,iKAAqF;IACrF,qJAAyF;IAC7F,qEAAe;IAEf,6EACI;IAAA,mKAAuF;IACvF,qJAA2F;IAC/F,qEAAe;IAQf,6EACI;IAAA,mKAEkB;IAEtB,qEAAe;IACf,iKAAqE;IACrE,mJAAoE;IAGpE,iKAC2F;IAE/F,4DAAY;IAChB,4DAAM;;;IAnDS,0DAAyB;IAAzB,yFAAyB;IA2Cf,2DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;IAGvC,0DAA2B;IAA3B,kJAA2B;;;ADvDjD,MAAM,6BAA6B;IAWxC,YAAoB,0BAAuD,EACjE,MAAiB,EACjB,aAAmC,EACnC,MAAc,EAAU,eAA+B,EAAU,YAAmB,EACrF,mBAA2C;QAJhC,+BAA0B,GAA1B,0BAA0B,CAA6B;QACjE,WAAM,GAAN,MAAM,CAAW;QACjB,kBAAa,GAAb,aAAa,CAAsB;QACnC,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAO;QACrF,wBAAmB,GAAnB,mBAAmB,CAAwB;QAdtD,WAAM,GAAC,KAAK,CAAC;QACX,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAW,EAAE,CAAC;QACvB,yBAAoB,GAA4B,EAAE,CAAC;QAGnD,qBAAgB,GAAa,CAAC,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;QAChF,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAoC/D,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAjCrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,gDAAgD,CAAC,CAAC;IAC/E,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACjE,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC;YACrC,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IACD,eAAe;QAEb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;IAC7D,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC7D,UAAU,CAAC,GAAE,EAAE,CAAE,IAAI,CAAC,MAAM,GAAC,KAAK,EAAE,IAAI,CAAC;IAE3C,CAAC;IAOD,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,QAAQ,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;IACjE,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,QAAgB,EAAE,OAAe;QACnE,IAAI,CAAC,0BAA0B,CAAC,uBAAuB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACzF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC3C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBAC7C,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;gBAC5C,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;aACnB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;QAEpB,CAAC,CAAC;IAGJ,CAAC;;0GAjFU,6BAA6B;6GAA7B,6BAA6B;kEAM7B,8DAAO;kEACP,wEAAY;;;;;;QCxBzB,8EACI;QAAA,kFACI;QAAA,iFACI;QAAA,sFACJ;QAAA,4DAAiB;QACrB,4DAAkB;QAClB,yEAA2B;QAG3B,yEACI;QAAA,oFACI;QAAA,2EACA;QADgB,oMAAuB,4FAAkD,iBAAa,IAA/D;QAAvC,4DACA;QAAA,+HAES;QACb,4DAAiB;QACrB,4DAAM;QACN,yHAKQ;QACN,wNAsDQ;QACV,+EACgB;QACpB,4DAAW;;;QArEiB,0DAAuB;QAAvB,kFAAuB;QAC0B,0DAAe;QAAf,+EAAe;QAKlE,0DAAkC;QAAlC,sGAAkC;QA6DzC,0DAAiC;QAAjC,kJAAiC;;6FD7DvC,6BAA6B;cALzC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,yCAAyC;gBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;kqBAOqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AExBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;;;;;;;;;;AAgBtD,MAAM,kBAAkB;IAK7B,YAAoB,MAAiB,EAAU,sBAA+C,EACpF,YAA4B,EAAQ,mBAA2C,EAAU,YAAkB;QADjG,WAAM,GAAN,MAAM,CAAW;QAAU,2BAAsB,GAAtB,sBAAsB,CAAyB;QACpF,iBAAY,GAAZ,YAAY,CAAgB;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAwB;QAAU,iBAAY,GAAZ,YAAY,CAAM;QALrH,cAAS,GAAS,EAAE,CAAE;QACtB,cAAS,GAAS,EAAE,CAAC;QACrB,UAAK,GAAQ,CAAC,CAAC;QACf,aAAQ,GAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAO3C,yBAAoB,GAAW,EAAE,CAAC;QAClC,uBAAkB,GAAiB;YACjC,EAAE;SACH,CAAC;QAEF,sBAAiB,GAAc,UAAU,CAAC;QAC1C,WAAM,GAAY;YAChB;gBACE,eAAe,EAAE;oBACf,SAAS;oBACT,SAAS;oBACT,WAAW;oBACX,SAAS,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,EAAC,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAC,YAAY;iBAC7E;aACF;SACF,CAAC;QAlBA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;IAExD,CAAC;IAmBD,YAAY;QACR,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG,GAAE;YACvD,IAAI,CAAC,SAAS,GAAE,GAAG,CAAC,IAAc,CAAC;YACnC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAE;YACvC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAE;YAC3D,IAAI,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAE;QACjE,CAAC,EACA,GAAG,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAC,CACvD,CAAC;IAGN,CAAC;IACE,QAAQ;QAER,IAAI,CAAC,YAAY,EAAE,CAAC;IACpB,CAAC;;oFA5CO,kBAAkB;kGAAlB,kBAAkB;QChB/B,yEACE;QAAA,yEACS;QAAA,8EACI;QAAA,kFACI;QAAA,oFACI;QAAA,0EAAuC;QAAA,0EAAe;QAAA,4DAAO;QAC7D,0EAAqG;QAAA,gEAAK;QAAA,4DAAO;QAClH,4DAAiB;QACxB,4DAAkB;QAElB,yEAA2B;QAC3B,0EACI;QAAA,wEAKO;QACX,4DAAM;QACV,4DAAW;QACb,4DAAM;QAEZ,4DAAM;;QAhBiD,0DAAkB;QAAlB,+EAAkB;QAOzD,0DAA2B;QAA3B,wFAA2B;;6FDGjC,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2E;AAChC;AAEN;AAG6B;;;AAK3D,MAAM,sBAAsB;IAYjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAXpC,uDAAuD;QACtD,sDAAsD;QACvD,SAAI,GAAG,4CAA4C,CAAC;QACpD,sDAAsD;QACtD,oBAAe,GAAwC,IAAI,iEAAe,EAAsB,CAAC;QAEjG,YAAO,GAAG,IAAI,gEAAW,CAAC;YACxB,QAAQ,EAAE,kBAAkB;YAC5B,kBAAkB,EAAE,OAAO;SAE9B,CAAC,CAAC;IACuC,CAAC;IAEzC,QAAQ,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QACzG,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,mBAAmB,EAAG,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAClG,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC5G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,SAAS,EAAG,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CACxF,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,qBAAqB,CAAC,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,yBAAyB,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC;IACD,oBAAoB,CAAC,IAAsB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,qBAAqB,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IACD,oBAAoB,CAAC,IAAsB;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,wBAAwB,EAAE,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,oBAAoB,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,wBAAwB,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC;IAED,iBAAiB;QAEf,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,mBAAmB,CAAC,CAAC;IAClE,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,qBAAqB,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAEvG,CAAC;IAEI,WAAW,CAAC,IAAU;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,GAAG,eAAe,EAAG,IAAI,EAAG,EAAC,OAAO,EAAG,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAC5F,CAAC;IAED,mBAAmB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,yBAAyB,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAC3G,CAAC;IAED,6BAA6B;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,gCAAgC,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IAClH,CAAC;IAED,yBAAyB,CAAC,GAAY;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,4BAA4B,EAAC,GAAG,EAAC,EAAC,YAAY,EAAE,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;IACnH,CAAC;IAED,WAAW,CAAE,SAAkB;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,yBAAyB,EAAE,SAAS,CAAE,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAE,MAAe;QACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,qBAAqB,EAAE,MAAM,CAAE,CAAC;IACzE,CAAC;IAED,SAAS;QAER,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,mBAAmB,CAAC,CAAE;IAC7D,CAAC;IAED,cAAc,CAAC,IAA4B;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IACD,WAAW,CAAC,QAA0B;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,eAAe,EAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;;4FAxGY,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,eAAe;IAI1B,iDAAiD;IACjD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,sCAAsC,CAAC;QAC9C,SAAI,GAAC,sCAAsC,CAAE;QAC7C,SAAI,GAAI,sCAAsC,CAAC;IAEP,CAAC;IAEzC,WAAW,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC5G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAED,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,cAAc,EAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IAED,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,cAAc,CAAC,EAAS;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,EAAE,CAAC,CAAE;IAC/D,CAAC;IACD,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;8EA5CU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEsB;;;AAK1D,MAAM,oBAAoB;IAE/B,YAAoB,MAAgB;QAAhB,WAAM,GAAN,MAAM,CAAU;IAAI,CAAC;IAEzC,iBAAiB;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4EAAe,EAAC;YACrC,KAAK,EAAG,OAAO;YACf,UAAU,EAAC,0BAA0B;YACrC,YAAY,EAAG,IAAI;YACnB,QAAQ,EAAC,EAAC,GAAG,EAAC,MAAM,EAAC;SACtB,CAAC;IAEJ,CAAC;;wFAZU,oBAAoB;uGAApB,oBAAoB,WAApB,oBAAoB,mBAFnB,MAAM;6FAEP,oBAAoB;cAHhC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAES;AACrB;AACY;;;;;;;;;;;;;;;;;;;;;;;ICWzD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACnC,4EACA;IADyC,oVAA0B;IAAnE,4DACA;IAAA,4EACA;IADqD,kVAAwB;IAA7E,4DACA;IAAA,sHAAwE;IAC5E,4DAAiB;IACjB,6EACG;IADuB,4TAA0B;IACjD,kEACH;IAAA,4DAAS;IACT,4DAAM;;;IAPuC,0DAA0B;IAA1B,wFAA0B;IACd,0DAAwB;IAAxB,sFAAwB;IACpD,0DAAoB;IAApB,uFAAoB;IAEoB,0DAA+C;IAA/C,sHAA+C;;;;IAM7G,6EACK;IAD6E,gUAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,oYAA0B;IAA1E,4DACA;IAAA,yJAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,yJAEkB;IACf,yJAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAUxC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAIxE,wEAEI;IAAA,6EACE;IAD0D,2bAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,4bAAuB;IAChF,mEACH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD8D,8bAAyB;IACvF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,8VAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAdxE,+EAGI;IAAA,0JASiB;IACf,0JAQe;IAErB,4DAAW;;;IApBQ,0DAAmB;IAAnB,uFAAmB;IAUjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IAvEpE,0EAEJ;IAAA,mFAGI;IAHyE,+VAAkC;IAG3G,4EACI;IAAA,qJAA0E;IAC1E,uIAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,qJAA2F;IAC3F,uIAUW;IACf,qEAAe;IAEf,4EACI;IAAA,uJAA4E;IAC5E,yIAuBW;IAIf,qEAAe;IAKf,6EACI;IAAA,uJAEkB;IAEtB,qEAAe;IAIf,qJAAsI;IACtI,qJAAqE;IACrE,uIAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IA1E2B,0DAAyB;IAAzB,yFAAyB;IAmErC,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;ADxFrD,MAAM,iBAAiB;IAsB5B,YAAoB,MAAiB,EAC5B,OAAwB,EACvB,YAAmB,EACnB,aAAmC,EACnC,mBAA2C,EAC3C,iBAAoC;QAL1B,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAiB;QACvB,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QAC3C,sBAAiB,GAAjB,iBAAiB,CAAmB;QAzB9C,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,WAAM,GAAS,KAAK,CAAC;QACrB,eAAU,GAAY,KAAK,CAAC;QAC5B,aAAQ,GAAgB,EAAE,CAAC;QAC3B,iBAAY,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAW,CAAC,CAAC;QACvB,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACP,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAC9B,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAY3B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAgLjD,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAmCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QA9NxB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAMD,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3G,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAE9C,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5F,IAAI,CAAC,QAAQ,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACF,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC,CAAE;IAC5C,CAAC;IAEC,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAID,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,QAAQ,GACZ;YACE,EAAE,EAAE,IAAI,CAAC,UAAU;YACnB,IAAI,EAAE,IAAI,CAAC,YAAY;SACxB;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACtD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC7C,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACD,KAAK,CAAC,EAAE;gBAAK,UAAU,CAAC,GAAE,EAAE;oBAC1B,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACF,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACD,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IAElB,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBAEtB,CAAC,EACD,KAAK,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAC,CAC5D,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,kCAAkC,CAAC,GAAS;QAE3C,IAAI,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC7B,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,aAAa,EAAG,WAAW,CAAC,CAAC,SAAS,CACnE,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,YAAY,GAChB;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CACzD,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;IAAE,CAAC;IACtC,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IAED,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,EAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC3E,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAOC,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEtH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBAClD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAGN,CAAC;IAKD,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;kFAxQQ,iBAAiB;iGAAjB,iBAAiB;kEA+BjB,8DAAO;kEACP,wEAAY;;;;;;QCnDxB,8EACG;QAAA,kFACE;QAAA,iFACC;QAAA,qEACA;QAAA,yEACC;QAAA,0EAAqC;QAAnB,uIAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAC5D,4DAAiB;QACpB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,6GAUI;QACF,qFACI;QAAA,4EACD;QADiB,yLAAuB,iFAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,qHAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,+GAKM;QACN,4MA8Ec;QAGd,qFACA;QADiE,qJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAChB,4DAAW;;;QA5GH,0DAAU;QAAV,0EAAU;QAYM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAuFzC,0DAAiC;QAAjC,kJAAiC;;6FDjGnC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;6lBAgCqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;AEpDznSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACZ;;;;;;;;;;;;;;;;;;;;;;;;IC4CtD,wEACE;IAAA,iFAAsC;IAAA,uDAAmB;IAAA,4DAAa;IACxE,qEAAe;;;IADD,0DAAyB;IAAzB,+FAAyB;IAAC,0DAAmB;IAAnB,oFAAmB;;;IAc3D,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAc7D,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAQ7D,wEACE;IAAA,iFAA2C;IAAA,uDAAwB;IAAA,4DAAa;IAClF,qEAAe;;;IADD,0DAA8B;IAA9B,oGAA8B;IAAC,0DAAwB;IAAxB,yFAAwB;;;IAerE,wEACE;IAAA,iFAAgD;IAAA,uDAA6B;IAAA,4DAAa;IAC5F,qEAAe;;;IADD,0DAAmC;IAAnC,yGAAmC;IAAC,0DAA6B;IAA7B,8FAA6B;;;IAQ/E,wEACE;IAAA,iFAAqC;IAAA,uDAAkB;IAAA,4DAAa;IACtE,qEAAe;;;IADD,0DAAwB;IAAxB,8FAAwB;IAAC,0DAAkB;IAAlB,mFAAkB;;;IAuB3D,4EAAwB;IAAA,6GAAkD;IAAA,4DAAY;;;IACtF,2EAAsD;IAAA,gHAAsD;IAAA,4DAAO;;;IAe/H,wEACa;;ADnIN,MAAM,0BAA0B;IAwBrC,YAAmB,OAA+B,EAAS,SAAmD,EAAS,mBAA2C;QAA/I,YAAO,GAAP,OAAO,CAAwB;QAAS,cAAS,GAAT,SAAS,CAA0C;QAAS,wBAAmB,GAAnB,mBAAmB,CAAwB;QAhBlK,YAAO,GAAY,KAAK,CAAC;QACzB,OAAE,GAAW,CAAC,CAAC;QACf,mBAAc,GAAuC,EAAE,CAAC;QACxD,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAE5B,aAAQ,GAAY,EAAE,CAAC;QACvB,cAAS,GAAQ,EAAE,CAAC;QACrB,WAAM,GAAc,EAAE,CAAC;QACvB,YAAO,GAAc,EAAE,CAAC;QACxB,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAC7B,sBAAiB,GAAyB,EAAE,CAAC;QAC7C,uBAAkB,GAAyB,EAAE,CAAC;QAC9C,kBAAa,GAAoB,EAAE,CAAC;QACpC,mBAAc,GAAoB,EAAE,CAAC;QAGrC,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,EAAE,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC/E,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACzF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC9F,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAE;YACrC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9D,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;QAsJH,YAAO,GAAa,KAAK,CAAC;IAxK4I,CAAC;IAoBvK,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC1D,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC3D,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAoB,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAoB,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,iBAAyC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAyC,CAAC;YAExE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;aACxC,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;aACrD,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE;aAC7C,CAAC;QACJ,CAAC,CAAC,CAAC;IAGL,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,sBAAsB;QACpB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAE;YACzC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oBAAoB;QAClB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAE;YACvC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAE;YACzC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAA8B;QAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACtE,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QACrE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAE;YACzD,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAE;YACjD,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAE;YACnC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAChE,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC7E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACvF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACtG,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACxE,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACrE,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC,EAAE,CAAC,CAAC;gBAEL,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YAC5D,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC,EAAE,CAAC,CAAC;gBAEL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACtD,CAAC,CACA,CAAC;SAEH;aAAI;YAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SAAC;IAChC,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAEzB,CAAC;IACD,gBAAgB,CAAC,KAAU;QACzB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAkB,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAiB,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;aACnC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAsB,CAAC,KAAW;QAChC,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC;YAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAI;YACH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;;oGAvMU,0BAA0B;0GAA1B,0BAA0B;;;;;;;;;;;;;;;;QCnBvC,8EACE;QAAA,0EACE;QAD2C,kJAAU,cAAU,IAAC;QAChE,kFACE;QAAA,iFACE;QAAA,iFACA;QAAA,yEACE;QAAA,4EAAiE;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QAAA,4DAAS;QAC/F,0EAA6B;QAAA,6DAAC;QAAA,4DAAO;QACrC,2EAAqD;QAApB,iJAAS,aAAS,IAAC;QAAC,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAO;QAEnF,4DAAM;QACR,4DAAiB;QACnB,4DAAkB;QAClB,0EAA2B;QAC3B,oFACE;QAAA,iFACE;QAAA,0EACE;QAAA,uEACA;QAAA,kFACE;QAAA,uEACA;QAAA,6EAAW;QAAA,0FAA8B;QAAA,4DAAY;QACvD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,2GAA+C;QAAA,4DAAY;QACxE,4DAAiB;QAGjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,2GAA+C;QAAA,4DAAY;QACxE,4DAAiB;QAGjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,+GAAmD;QAAA,4DAAY;QAC5E,4DAAiB;QAGlB,kFACG;QAAA,kFAEE;QADA,iLAAmB,2BAAuB,IAAC;QAC3C,iFACA;QAD0G,kJAAS,0BAAsB,IAAC;QAA1I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,kFACE;QAAA,iFACA;QAD2G,kJAAS,4BAAwB,IAAC;QAA7I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAGnB,4DAAM;QACR,4DAAgB;QAChB,iFACE;QAAA,0EACE;QAAA,kFACE;QAAA,kFACE;QAAA,iFACA;QAD2G,kJAAS,2BAAuB,IAAC;QAA5I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADgH,kJAAS,+BAA2B,IAAC;QAArJ,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAGjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADoH,kJAAS,oCAAgC,IAAC;QAA9J,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADuG,kJAAS,yBAAqB,IAAC;QAAtI,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,wEAGA;QAAA,wFAAmF;QACnF,gGAC0B;QAC1B,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAGjB,kFACE;QAAA,6EACA;QAD2C,kKAAc,kCAA8B,IAAC;QAAxF,4DACA;QACA,wFAAmF;QACnF,gGAC0B;QAC1B,qIAAsF;QACtF,6HAAmH;QACrH,4DAAiB;QAGnB,4DAAM;QACR,4DAAgB;QAElB,4DAAgB;QAIlB,4DAAO;QAET,4DAAW;QAEX,yIACa;;;;QArJL,0DAAkB;QAAlB,+EAAkB;QAK4B,0DAAoB;QAApB,iFAAoB;QAuCvB,2DAAW;QAAX,iFAAW;QAeV,2DAAY;QAAZ,kFAAY;QAeZ,0DAAY;QAAZ,kFAAY;QASR,0DAAgB;QAAhB,sFAAgB;QAgBX,2DAAoB;QAApB,0FAAoB;QAS/B,0DAAS;QAAT,+EAAS;QAQxC,0DAAoC;QAApC,sFAAoC;QAGV,0DAAyB;QAAzB,qEAAyB;QAQnD,0DAAmC;QAAnC,sFAAmC;QAET,0DAAwB;QAAxB,qEAAwB;QAG7C,0DAAU;QAAV,sEAAU;QACf,0DAAa;QAAb,6EAAa;QAenB,0DAAa;QAAb,6EAAa;;6FDlIb,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;oVAG6B,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACG,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACE,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACI,gBAAgB;kBAA9C,uDAAS;mBAAC,kBAAkB;YACS,uBAAuB;kBAA5D,uDAAS;mBAAC,yBAAyB;YACF,mBAAmB;kBAApD,uDAAS;mBAAC,qBAAqB;;;;;;;;;;;;;;AE1BlC;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;KACjB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACY;AACA;AACN;AACI;AACH;AACD;AACI;AACQ;AACV;AACI;AACK;AACP;AACA;AACS;AACT;AACI;AACI;AACJ;AACR;AACU;AACF;AACR;AACO;AACI;AACX;AACgB;AACV;AACiB;AACR;AACA;AACb;;AAiFhD,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBA1EhB;YACP,4DAAY;YACZ,0EAAgB;YAChB,0EAAgB;YAChB,oEAAa;YACb,wEAAe;YACf,oEAAa;YACb,oEAAa;YACb,sEAAc;YACd,8EAAkB;YAClB,qEAAa;YACb,yEAAe;YAChB,8EAAiB;YACjB,uEAAc;YACd,gFAAkB;YAClB,uEAAc;YACd,yEAAe;YACf,6EAAiB;YACjB,iFAAmB;YACnB,2EAAmB;YACnB,qEAAa;YACb,+EAAkB;YAClB,2EAAgB;YAChB,qEAAa;YACb,2EAAgB;YAChB,8EAAiB;YACjB,qEAAa;YACb,4FAAwB;YACxB,qFAAqB;YACrB,2EAAgB;YAChB,oFAAoB;YACpB,oFAAoB;YACpB,uEAAc;SAGd,EAGC,0EAAgB;QAChB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,sEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,yEAAe;QAChB,8EAAiB;QACjB,uEAAc;QACd,gFAAkB;QAClB,uEAAc;QACd,yEAAe;QACf,6EAAiB;QACjB,iFAAmB;QACnB,2EAAmB;QACnB,qEAAa;QACb,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,2EAAgB;QAChB,8EAAiB;QACjB,qEAAa;QACb,4FAAwB;QACxB,qFAAqB;QACrB,2EAAgB;QAChB,oFAAoB;QACpB,oFAAoB;QACpB,uEAAc;mIAMJ,cAAc,cAzEvB,4DAAY;QACZ,0EAAgB;QAChB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,sEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,yEAAe;QAChB,8EAAiB;QACjB,uEAAc;QACd,gFAAkB;QAClB,uEAAc;QACd,yEAAe;QACf,6EAAiB;QACjB,iFAAmB;QACnB,2EAAmB;QACnB,qEAAa;QACb,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,2EAAgB;QAChB,8EAAiB;QACjB,qEAAa;QACb,4FAAwB;QACxB,qFAAqB;QACrB,2EAAgB;QAChB,oFAAoB;QACpB,oFAAoB;QACpB,uEAAc,aAMb,0EAAgB;QAChB,0EAAgB;QAChB,oEAAa;QACb,wEAAe;QACf,oEAAa;QACb,oEAAa;QACb,sEAAc;QACd,8EAAkB;QAClB,qEAAa;QACb,yEAAe;QAChB,8EAAiB;QACjB,uEAAc;QACd,gFAAkB;QAClB,uEAAc;QACd,yEAAe;QACf,6EAAiB;QACjB,iFAAmB;QACnB,2EAAmB;QACnB,qEAAa;QACb,+EAAkB;QAClB,2EAAgB;QAChB,qEAAa;QACb,2EAAgB;QAChB,8EAAiB;QACjB,qEAAa;QACb,4FAAwB;QACxB,qFAAqB;QACrB,2EAAgB;QAChB,oFAAoB;QACpB,oFAAoB;QACpB,uEAAc;6FAMJ,cAAc;cA5E1B,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;oBACZ,0EAAgB;oBAChB,0EAAgB;oBAChB,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,oEAAa;oBACb,sEAAc;oBACd,8EAAkB;oBAClB,qEAAa;oBACb,yEAAe;oBAChB,8EAAiB;oBACjB,uEAAc;oBACd,gFAAkB;oBAClB,uEAAc;oBACd,yEAAe;oBACf,6EAAiB;oBACjB,iFAAmB;oBACnB,2EAAmB;oBACnB,qEAAa;oBACb,+EAAkB;oBAClB,2EAAgB;oBAChB,qEAAa;oBACb,2EAAgB;oBAChB,8EAAiB;oBACjB,qEAAa;oBACb,4FAAwB;oBACxB,qFAAqB;oBACrB,2EAAgB;oBAChB,oFAAoB;oBACpB,oFAAoB;oBACpB,uEAAc;iBAGd;gBAED,OAAO,EAAC;oBACN,0EAAgB;oBAChB,0EAAgB;oBAChB,oEAAa;oBACb,wEAAe;oBACf,oEAAa;oBACb,oEAAa;oBACb,sEAAc;oBACd,8EAAkB;oBAClB,qEAAa;oBACb,yEAAe;oBAChB,8EAAiB;oBACjB,uEAAc;oBACd,gFAAkB;oBAClB,uEAAc;oBACd,yEAAe;oBACf,6EAAiB;oBACjB,iFAAmB;oBACnB,2EAAmB;oBACnB,qEAAa;oBACb,+EAAkB;oBAClB,2EAAgB;oBAChB,qEAAa;oBACb,2EAAgB;oBAChB,8EAAiB;oBACjB,qEAAa;oBACb,4FAAwB;oBACxB,qFAAqB;oBACrB,2EAAgB;oBAChB,oFAAoB;oBACpB,oFAAoB;oBACpB,uEAAc;iBAId;aACF;;;;;;;;;;;;;;AChHD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,2BAA2B;IAItC,6DAA6D;IAE7D,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALpC,QAAG,GAAI,kDAAkD,CAAC;QAC1D,SAAI,GAAE,kDAAkD,CAAE;QAC1D,SAAI,GAAI,kDAAkD,CAAC;IAGnB,CAAC;IAEzC,uBAAuB,CAAC,IAAY,EAAG,WAAmB;QACxD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,IAAI,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,EAAC;YACvC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;YACvD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;SAC7D;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA0B,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAChE,CAAC;;sGAtBU,2BAA2B;8GAA3B,2BAA2B,WAA3B,2BAA2B,mBAF1B,MAAM;6FAEP,2BAA2B;cAHvC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;;;;;;;;;;AAOlE,MAAM,eAAe;IAI3B,wCAAwC;IAEvC;QAJA,eAAU,GAAG,IAAI,CAAC;QAClB,kBAAa,GAAG,GAAG,CAAC;IAGH,CAAC;IAElB,QAAQ;QACN,mEAAmE;IACrE,CAAC;IAID,mBAAmB;QAEjB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAEnC,IAAG,CAAC,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAE;SAGzB;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;SAI1B;IACH,CAAC;;8EA5BU,eAAe;+FAAf,eAAe;QCP5B,gFAAoD;QAAxC,2JAAiB,yBAAqB,IAAC;QAAC,4DAAa;QACjE,wFACI;QAAA,oFAEI;QAAA,yEAA2B;QAC/B,4DAAc;QACd,4FACI;QAAA,gFACI;QAAA,2EACgB;QAChB,0EAA2B;QAC/B,4DAAO;QACX,4DAAsB;QAC1B,4DAAwB;;QAX2B,0DAA8B;QAA9B,sFAA8B;QAIlD,0DAA6C;QAA7C,6JAA6C;;6FDC/D,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AELD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,cAAc;IAIzB,gDAAgD;IAElD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QALlC,QAAG,GAAI,qCAAqC,CAAC;QAC7C,SAAI,GAAI,qCAAqC,CAAC;QAC9C,SAAI,GAAI,qCAAqC,CAAC;IAGP,CAAC;IAE1C,KAAK,CAAC,IAAe;QAInB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,GAAG,IAAI,CAAC,IAAI,QAAQ,EAAC,IAAI,CAAC,CAAC;IAE1D,CAAC;IAGD,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;IACnD,CAAC;;4EAnBY,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,mBAAmB;IAI9B,qDAAqD;IACrD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,0CAA0C,CAAC;QAClD,SAAI,GAAC,0CAA0C,CAAE;QACjD,SAAI,GAAI,0CAA0C,CAAC;IAEX,CAAC;IAEzC,eAAe,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAChH,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,kBAAkB,CAAC,IAAkB;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,kBAAkB,EAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IACD,kBAAkB,CAAC,IAAkB;QAEpC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,qBAAqB,EAAC,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,kBAAkB,CAAC,EAAS;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,qBAAqB,EAAC,EAAE,CAAC,CAAE;IACnE,CAAC;IACD,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;sFA1CU,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;6FAEP,mBAAmB;cAH/B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACxB;AAEe;AACT;AAOgC;AACP;AACH;AACZ;AACQ;;AAmB1D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,+DAAK,EAAE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,6EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;KAC9E,YATQ;YACP,uEAAa;YACb,oEAAgB;YAChB,4FAAuB;YACvB,oFAAY;YACZ,iFAAW;SACZ;mIAMU,SAAS,mBAdlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,4FAAuB;QACvB,oFAAY;QACZ,iFAAW;6FAOF,SAAS;cAhBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,4FAAuB;oBACvB,oFAAY;oBACZ,iFAAW;iBACZ;gBACD,SAAS,EAAE;oBACT,+DAAK,EAAE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,6EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;iBAC9E;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACjCD;AAAA;AAAA;AAAA;AAA2C;;;AAapC,MAAM,sBAAsB;IAC/B,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;IAExC,WAAW,CAAC,IAA4B,EAAE,KAA0B;QACnE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC1C,IAAI,IAAI,GAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3C,IAAI,KAAK,IAAI,WAAW,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,IAAE,IAAI,IAAE,4BAA4B,EAAE;YAC1F,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;QACA,OAAO,IAAI,CAAC;IACf,CAAC;;4FAXS,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFnB,MAAM;6FAET,sBAAsB;cAHlC,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;;;;;;;;ICuCpD,4EAA4D;IAAA,mFAAwB;IAAA,4DAAY;;;IAChG,4EAA6D;IAAA,wFAA6B;IAAA,4DAAY;;;IAmBpG,wEACE;IAAA,iFAAsC;IAAA,uDAAoB;IAAA,4DAAa;IACzE,qEAAe;;;IADD,0DAAyB;IAAzB,8FAAyB;IAAC,0DAAoB;IAApB,oFAAoB;;ADlDvE,MAAM,aAAa;IAExB,YAAmB,OAAmB,EAAS,SAAsC,EAAQ,mBAA2C;QAArH,YAAO,GAAP,OAAO,CAAY;QAAS,cAAS,GAAT,SAAS,CAA6B;QAAQ,wBAAmB,GAAnB,mBAAmB,CAAwB;QAIxI,gBAAW,GAAE;YACX,EAAC,EAAE,EAAC,CAAC,EAAE,KAAK,EAAC,OAAO,EAAC;YACrB,EAAC,EAAE,EAAC,CAAC,EAAE,KAAK,EAAC,OAAO,EAAC;YACrB,EAAC,EAAE,EAAC,CAAC,EAAE,KAAK,EAAC,OAAO,EAAC;SAEtB;QACD,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;YAC5C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC;YAC5B,UAAU,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACpC,CAAC,CAAC;IApByI,CAAC;IAE7I,QAAQ;IACR,CAAC;IAsBD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAChE,CAAC;IACD,QAAQ;QACN,IAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAC;YACzB,sDAAsD;YACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;YACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAC9D,IAAI,CAAC,OAAO,EAAE,CAAC;SAEd;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAEzB,CAAC;;0EA/CU,aAAa;6FAAb,aAAa;QCPzB,8EACG;QAAA,0EACA;QAD6C,qIAAU,cAAU,IAAC;QAClE,kFACI;QAAA,iFACI;QAAA,iEACD;QAAA,yEACI;QAAA,0EAA0C;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QAAA,4DAAO;QACtE,0EAA6B;QAAA,6DAAC;QAAA,4DAAO;QACrC,2EAAsD;QAApB,oIAAS,aAAS,IAAC;QAAC,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAO;QAErF,4DAAM;QACV,4DAAiB;QACrB,4DAAkB;QAClB,0EAA2B;QASvB,oFACE;QAAA,iFACE;QAAA,0EACE;QAAA,uEACA;QAAA,kFACE;QAAA,uEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,kFAAsB;QAAA,4DAAY;QAC/C,4DAAiB;QACjB,kFACE;QAAA,wEACA;QAAA,wHAAgG;QAChG,wHAAsG;QACxG,4DAAiB;QACjB,kFACE;QAAA,wEACF;QAAA,4DAAiB;QACnB,4DAAM;QACR,4DAAgB;QAChB,iFACE;QAAA,0EACE;QAAA,2EACE;QAAA,6EAA8B;QAAA,qEAAS;QAAA,4DAAQ;QAC/C,uFACE;QAAA,wFAA4B;QAAA,gEAAI;QAAA,4DAAmB;QACnD,wFAA4B;QAAA,kEAAM;QAAA,4DAAmB;QACvD,4DAAkB;QACpB,4DAAM;QACN,kFACE;QAAA,kFACE;QAAA,8EAAY;QAAA,gEAAI;QAAA,4DAAa;QAC7B,8HAEe;QACjB,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,wEACA;QAAA,wFAAwE;QACxE,uFAAyC;QAC3C,4DAAiB;QACjB,2EACE;QAAA,oFAA4C;QAAA,8EAAkB;QAAA,4DAAe;QAC/E,4DAAM;QAER,4DAAM;QACR,4DAAgB;QAElB,4DAAgB;QAClB,4DAAO;QAQb,4DAAW;;;QAjFD,0DAAkB;QAAlB,+EAAkB;QAmCA,2DAA8C;QAA9C,iKAA8C;QAC9C,0DAA+C;QAA/C,kKAA+C;QAmBpB,2DAAc;QAAd,oFAAc;QAMV,0DAAwB;QAAxB,8EAAwB;QAClC,0DAAc;QAAd,oEAAc;;6FDxDlD,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,wBAAwB;IAInC,0DAA0D;IAC1D,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,+CAA+C,CAAC;QACvD,SAAI,GAAC,+CAA+C,CAAE;QACtD,SAAI,GAAI,+CAA+C,CAAC;IAEhB,CAAC;IAGzC,oBAAoB,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QACrH,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,mDAAmD;IACnD,+DAA+D;IAC/D,IAAI;IAEJ,uBAAuB,CAAC,IAAuB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,EAAC,IAAI,CAAC,CAAC;IACtE,CAAC;IACD,uBAAuB,CAAC,IAAuB;QAE9C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,0BAA0B,EAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,uBAAuB,CAAC,EAAS;QAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,0BAA0B,EAAC,EAAE,CAAC,CAAE;IACxE,CAAC;IACD,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;gGA3CU,wBAAwB;2GAAxB,wBAAwB,WAAxB,wBAAwB,mBAFvB,MAAM;6FAEP,wBAAwB;cAHpC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,cAAc;IAIzB,gDAAgD;IAChD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,qCAAqC,CAAC;QAC7C,SAAI,GAAE,qCAAqC,CAAE;QAC7C,SAAI,GAAI,qCAAqC,CAAC;IAEN,CAAC;IAEzC,UAAU,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC3G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,gBAAgB,EAAE,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa,CAAC,IAAa;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,aAAa,EAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IACD,aAAa,CAAC,IAAa;QAE1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,gBAAgB,EAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;IAED,aAAa,CAAC,EAAS;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,gBAAgB,EAAC,EAAE,CAAC,CAAE;IAC9D,CAAC;IAED,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;4EAhDU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,eAAe;IAI1B,iDAAiD;IACjD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,sCAAsC,CAAC;QAC9C,SAAI,GAAC,sCAAsC,CAAE;QAC7C,SAAI,GAAI,sCAAsC,CAAC;IAEP,CAAC;IAGzC,WAAW,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QAC5G,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAC;YAC1C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,cAAc,EAAC,IAAI,CAAC,CAAC;IAC7D,CAAC;IACD,cAAc,CAAC,IAAc;QAE5B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IAED,cAAc,CAAC,EAAS;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,IAAI,CAAC,IAAI,iBAAiB,EAAC,EAAE,CAAC,CAAE;IAC/D,CAAC;IAED,iBAAiB,CAAC,IAAW,EAAC,EAAS;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,uBAAuB,GAAC,IAAI,GAAC,GAAG,GAAC,EAAE,CAAC,CAAC;IAC5E,CAAC;;8EA5CU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACb;AACK;AACxC;AACR;;;;;;;;;;;;;;;;;;;;;;;;;ICwCX,wEACE;IAAA,iFAAsC;IAAA,uDAAmB;IAAA,4DAAa;IACxE,qEAAe;;;IADD,0DAAyB;IAAzB,+FAAyB;IAAC,0DAAmB;IAAnB,oFAAmB;;;IAc3D,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAc7D,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAQ7D,wEACE;IAAA,iFAA2C;IAAA,uDAAwB;IAAA,4DAAa;IAClF,qEAAe;;;IADD,0DAA8B;IAA9B,oGAA8B;IAAC,0DAAwB;IAAxB,yFAAwB;;;IAerE,wEACE;IAAA,iFAAgD;IAAA,uDAA6B;IAAA,4DAAa;IAC5F,qEAAe;;;IADD,0DAAmC;IAAnC,yGAAmC;IAAC,0DAA6B;IAA7B,8FAA6B;;;IAQ/E,wEACE;IAAA,iFAAqC;IAAA,uDAAkB;IAAA,4DAAa;IACtE,qEAAe;;;IADD,0DAAwB;IAAxB,8FAAwB;IAAC,0DAAkB;IAAlB,mFAAkB;;;IAS3D,2EAA2C;IAAA,uEAAY;IAAA,4DAAO;;;IAmB9D,4EAAwB;IAAA,gHAAqD;IAAA,4DAAY;;;IACzF,2EAAsD;IAAA,gHAAsD;IAAA,4DAAO;;;IAiB9H,wEAAyC;;ADtInC,MAAM,0BAA0B;IAyBrC,YAAmB,OAA+B,EAAQ,gBAAkC,EAAS,SAAmD,EAAS,mBAA2C,EAAkC,IAAS;QAApO,YAAO,GAAP,OAAO,CAAwB;QAAQ,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAS,cAAS,GAAT,SAAS,CAA0C;QAAS,wBAAmB,GAAnB,mBAAmB,CAAwB;QAAkC,SAAI,GAAJ,IAAI,CAAK;QAjBvP,aAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9C,YAAO,GAAS,KAAK,CAAC;QACrB,OAAE,GAAW,CAAC,CAAC;QACf,mBAAc,GAAuC,EAAE,CAAC;QACxD,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAC7B,aAAQ,GAAe,EAAE,CAAC;QAC1B,cAAS,GAAQ,EAAE,CAAC;QACpB,WAAM,GAAc,EAAE,CAAC;QACvB,YAAO,GAAc,EAAE,CAAC;QACxB,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAC7B,sBAAiB,GAAyB,EAAE,CAAC;QAC7C,uBAAkB,GAAyB,EAAE,CAAC;QAC9C,kBAAa,GAAoB,EAAE,CAAC;QACpC,mBAAc,GAAoB,EAAE,CAAC;QAMrC,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,EAAE,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,CAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACjF,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAG,CAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACvE,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAE,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC1E,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACrD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACjD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC7D,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAClD,UAAU,EAAG,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACpD,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAChC,CAAC,CAAC;QAgKH,YAAO,GAAa,KAAK,CAAC;QAiB5B,eAAU,GAAG,KAAK,CAAC;QArMf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC;IAsBD,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC1D,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC3D,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAoB,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAoB,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,iBAAyC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAyC,CAAC;QAC1E,CAAC,CAAC,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC1D,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAwB,CAAE;YACpD,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,eAAe;gBACpD,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAChC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS;gBACxC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,YAAY;gBAC9C,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,QAAQ,EAAE;gBACpD,QAAQ,EAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAClD,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,EAAE;gBACtD,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,QAAQ,EAAE;gBACtD,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE;gBAC9D,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK;gBAChC,oBAAoB,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,EAAE;gBACxE,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAClD,UAAU,EAAG,IAAI,CAAC,cAAc,CAAC,UAAU;gBAC3C,WAAW,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW;gBAC5C,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,UAAU;aAC3C,CAAC;QACJ,CAAC,CAAC,CAAC;IAEP,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,sBAAsB;QACpB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAE;YACzC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oBAAoB;QAClB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAE;YACvC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC5D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAE;YACzC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAA8B;QAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACtE,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QACrE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAE;YACzD,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QACjE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,GAAE;YACjD,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC/D,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAE;QAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAE;YACnC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAE;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;IAChE,CAAC;IACD,QAAQ;QACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACzD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC7E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACvF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACrE,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACrB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC9D,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACrB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YACtD,CAAC,CACA,CAAC;SAEH;IACH,CAAC;IACD,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAEzB,CAAC;IAED,gBAAgB,CAAC,KAAU;QACzB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAkB,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAU;QACxB,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAiB,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;aACnC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,sBAAsB,CAAC,KAAW;QAChC,uEAAuE;QACvE,IAAI,UAAU,GAAI,mCAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACxD,IAAI,WAAW,GAAI,mCAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAEvD,IAAG,WAAW,GAAG,UAAU,EAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aACK,IAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,EAAC;YACtE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aACG;YACF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACtB;IACH,CAAC;IAGH,kBAAkB;QAEhB,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAC5D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CACrD,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,EACb;gBAAC,IAAI,CAAC,UAAU,GAAG,KAAK;aAAC;iBACpB;gBAAC,IAAI,CAAC,UAAU,GAAG,IAAI;aAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;;oGAzOY,0BAA0B,2qBAyBiL,wEAAe;0GAzB1N,0BAA0B;;;;;;;;;;;;;;;;QCrBvC,8EACE;QAAA,0EACE;QAD2C,kJAAU,cAAU,IAAC;QAChE,kFACE;QAAA,iFACE;QAAA,iFACA;QAAA,yEACE;QAAA,4EAA+E;QAAA,wEAAO;QAAA,iEAAM;QAAA,4DAAQ;QAAA,4DAAS;QAC7G,0EAA6B;QAAA,6DAAC;QAAA,4DAAO;QACrC,2EAAqD;QAApB,iJAAS,aAAS,IAAC;QAAC,yEAAO;QAAA,kEAAM;QAAA,4DAAQ;QAAA,4DAAO;QAEnF,4DAAM;QACR,4DAAiB;QACnB,4DAAkB;QAClB,0EAA2B;QAC3B,oFACE;QAAA,iFACE;QAAA,0EACE;QAAA,uEACA;QAAA,kFACE;QAAA,uEACA;QAAA,6EAAW;QAAA,0FAA8B;QAAA,4DAAY;QACvD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,2GAA+C;QAAA,4DAAY;QACxE,4DAAiB;QAGjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,2GAA+C;QAAA,4DAAY;QACxE,4DAAiB;QAGjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,+GAAmD;QAAA,4DAAY;QAC5E,4DAAiB;QAEjB,kFACE;QAAA,kFAEE;QADA,iLAAmB,2BAAuB,IAAC;QAC3C,iFACA;QAD0G,kJAAS,0BAAsB,IAAC;QAA1I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,kFACE;QAAA,iFACA;QAD2G,kJAAS,4BAAwB,IAAC;QAA7I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAGnB,4DAAM;QACR,4DAAgB;QAChB,iFACE;QAAA,0EACE;QAAA,kFACE;QAAA,kFACE;QAAA,iFACA;QAD2G,kJAAS,2BAAuB,IAAC;QAA5I,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADgH,kJAAS,+BAA2B,IAAC;QAArJ,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,wEACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAGjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADoH,kJAAS,oCAAgC,IAAC;QAA9J,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADuG,kJAAS,yBAAqB,IAAC;QAAtI,4DACA;QAAA,2IAEe;QACjB,4DAAa;QACb,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,6EACA;QADuE,kJAAS,wBAAoB,IAAC;QAArG,4DACA;QAAA,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QAC/C,2HAA8D;QAChE,4DAAiB;QAGjB,kFACE;QAAA,wEAGA;QAAA,wFAAmF;QACnF,gGAC0B;QAC1B,6EAAW;QAAA,oFAAwB;QAAA,4DAAY;QACjD,4DAAiB;QAEjB,kFACE;QAAA,8EACA;QAD2C,mKAAc,kCAA8B,IAAC;QAAxF,4DACA;QAAA,yFAAmF;QACnF,iGAC0B;QAC1B,uIAAyF;QACzF,6HAAmH;QACrH,4DAAiB;QAGnB,4DAAM;QACR,4DAAgB;QAIlB,4DAAgB;QAIlB,4DAAO;QAIR,yIAAyC;QAE1C,4DAAW;;;;QA5JH,0DAAkB;QAAlB,+EAAkB;QAK4B,0DAAkC;QAAlC,mGAAkC;QAsCrC,2DAAW;QAAX,iFAAW;QAeV,2DAAY;QAAZ,kFAAY;QAeZ,0DAAY;QAAZ,kFAAY;QASR,0DAAgB;QAAhB,sFAAgB;QAgBX,2DAAoB;QAApB,0FAAoB;QAS/B,0DAAS;QAAT,+EAAS;QAQuD,0DAAkD;QAAlD,iHAAkD;QAE/H,0DAAgB;QAAhB,gFAAgB;QAKlC,0DAAoC;QAApC,sFAAoC;QAGV,0DAAyB;QAAzB,qEAAyB;QAOnD,0DAAmC;QAAnC,sFAAmC;QACT,0DAAwB;QAAxB,qEAAwB;QAG7C,0DAAU;QAAV,sEAAU;QACf,0DAAa;QAAb,6EAAa;QAiBlB,0DAAa;QAAb,6EAAa;;6FDtId,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;sBA0BgN,oDAAM;uBAAC,wEAAe;wBAvBzM,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACG,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACE,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACI,gBAAgB;kBAA9C,uDAAS;mBAAC,kBAAkB;YACS,uBAAuB;kBAA5D,uDAAS;mBAAC,yBAAyB;YACF,mBAAmB;kBAApD,uDAAS;mBAAC,qBAAqB;;;;;;;;;;;;;;AE5BlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;ICazD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAW;IAAA,sEAAW;IAAA,4DAAY;IAClC,4EACA;IADyC,gVAAwB;IAAjE,4DACA;IAAA,4EACA;IADqD,8UAAsB;IAA3E,4DACA;IAAA,oHAAwE;IAC5E,4DAAiB;IACjB,6EACG;IADuB,0TAA0B;IACjD,kEACH;IAAA,4DAAS;IACT,4DAAM;;;IAPuC,0DAAwB;IAAxB,sFAAwB;IACZ,0DAAsB;IAAtB,oFAAsB;IAClD,0DAAoB;IAApB,uFAAoB;IAEoB,0DAA6C;IAA7C,oHAA6C;;;;IAM3G,6EACK;IAD6E,8TAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,kYAA0B;IAA1E,4DACA;IAAA,uJAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,uJAEkB;IACf,uJAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAUxC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAIxE,wEAEI;IAAA,6EACE;IAD0D,ybAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,0bAAuB;IAChF,mEAEH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD8D,4bAAyB;IACvF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,4VAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAfxE,+EAGI;IAAA,wJAUiB;IACf,wJAQe;IAErB,4DAAW;;;IArBQ,0DAAmB;IAAnB,uFAAmB;IAWjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IAxEpE,0EAEJ;IAAA,mFAGI;IAHyE,6VAAkC;IAG3G,4EACI;IAAA,mJAA0E;IAC1E,qIAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,mJAA2F;IAC3F,qIAUW;IACf,qEAAe;IAEf,4EACI;IAAA,qJAA4E;IAC5E,uIAwBW;IAIf,qEAAe;IAKf,6EACI;IAAA,qJAEkB;IAEtB,qEAAe;IAIf,mJAAsI;IACtI,mJAAqE;IACrE,qIAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IA3E2B,0DAAyB;IAAzB,yFAAyB;IAoErC,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD9FrD,MAAM,eAAe;IAsB1B,YAAoB,MAAiB,EAC5B,OAAsB,EACrB,YAAmB,EACnB,aAAmC,EACnC,mBAA2C;QAJjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAe;QACrB,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QAxBrD,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,WAAM,GAAS,KAAK,CAAC;QACrB,eAAU,GAAY,KAAK,CAAC;QAC5B,WAAM,GAAc,EAAE,CAAC;QACvB,eAAU,GAAW,EAAE,CAAC;QACxB,aAAQ,GAAW,CAAC,CAAC;QACrB,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACP,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAC9B,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAW3B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAgLjD,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAkCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QA5NtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAMD,UAAU;QACN,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACzG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YACrD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAE9C,CAAC,CAAC;IACN,CAAC;IACD,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC1F,IAAI,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YACrD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACH,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC,CAAE;IAC3C,CAAC;IAGD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,MAAM,GACV;YACE,EAAE,EAAE,IAAI,CAAC,QAAQ;YACjB,IAAI,EAAE,IAAI,CAAC,UAAU;SACtB;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAE;YACtB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACzC,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YACpB,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CACzC,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YACpB,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACL,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IACd,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CACzC,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;gBACpB,CAAC,EACD,KAAK,GAAE;oBACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAAA,CAAC,CACtD,CAAC;aACL;YAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,UAAU,GACd;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,SAAS,CAC7C,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CACzD,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;IACnC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IAED,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CACvE,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC,CAAC,GAAS;QAE3C,IAAI,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC;QAC3B,IAAI,SAAS,GAAG,GAAG,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,WAAW,EAAG,SAAS,CAAC,CAAC,SAAS,CAC/D,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAMD,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEtH,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3D,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAGN,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;8EArQU,eAAe;+FAAf,eAAe;kEA6Bf,8DAAO;kEACP,wEAAY;;;;;;QC7CxB,8EACG;QAAA,kFACE;QAAA,iFACA;QAAA,mEACA;QAAA,yEACE;QAAA,0EAAqC;QAAnB,qIAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAC3D,4DAAiB;QAErB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,2GAUI;QACF,qFACI;QAAA,4EACD;QADiB,uLAAuB,+EAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,mHAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,6GAKM;QACN,0MA+Ec;QAGd,qFACA;QADiE,mJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAEhB,4DAAW;;;QA9GH,0DAAU;QAAV,0EAAU;QAYM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAwFzC,0DAAiC;QAAjC,kJAAiC;;6FDvGnC,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;wfA8BqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AEvCzB;AAAA;AAAO,MAAO,eAAe;IAA7B;QACI,WAAM,GAAW,EAAE,CAAC;QACpB,eAAU,GAA4B,EAAE,CAAC;IAE7C,CAAC;CAAA;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAA8D;AACnB;AAEN;;;AAM9B,MAAM,WAAW;IAItB,6CAA6C;IAC7C,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJpC,QAAG,GAAI,kCAAkC,CAAC;QAC1C,SAAI,GAAE,kCAAkC,CAAE;QAC1C,SAAI,GAAI,kCAAkC,CAAC;IAEH,CAAC;IAEzC,OAAO,CAAC,UAAkB,EAAG,QAAgB,EAAG,WAAkB,EAAE,UAAiB,EAAC,aAAoB;QACxG,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC;QAC9B,IAAG,UAAU,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,EAAE;YAC3C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YACzD,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,EAAG,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC/D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAG,UAAU,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,EAAG,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;SACpE;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,GAAG,IAAI,CAAC,IAAI,EAAE,EAAI,EAAC,OAAO,EAAC,UAAU,EAAG,MAAM,EAAC,CAAC,CAAC,IAAI,CAC7E,0DAAG,CAAC,QAAQ,CAAC,EAAE;YACZ,OAAO,QAAQ,CAAC,IAAI,CAAE;QACzB,CAAC,CAAC,CACH;IACH,CAAC;IACD,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAChD,CAAC;;sEAxBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAQ3C,MAAM,eAAe;IAE1B,YAAmB,SAAwC;QAAxC,cAAS,GAAT,SAAS,CAA+B;IACrD,CAAC;IAEP,QAAQ;IACR,CAAC;IACD,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5B,0BAA0B;IAE5B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACvB,kBAAkB;IAExB,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCR5B,8EACI;QAAA,8EAAqB;QAAA,yEAAc;QAAA,4DAAW;QAC9C,0EAAe;QAAA,iEAAM;QAAA,4DAAO;QAC5B,4EACI;QAD+B,uIAAS,aAAS,IAAC;QAClD,2EAAU;QAAA,gEAAK;QAAA,4DAAW;QAAA,4DAAS;QAExC,4DAAc;QACjB,sEACI;QAAA,yEAGG;QAAA,2EACE;QAAA,2GACD;QAAA,4DAAO;QACX,4DAAM;QACN,6EAA2D;QAApB,wIAAS,aAAS,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACtE,6EAA6D;QAArB,wIAAS,cAAU,IAAC;QAAC,+DAAG;QAAA,4DAAS;QAC7E,4DAAM;;6FDTO,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;;ICQjD,4EACI;IAD8E,wTAAyB;IACvG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAGjB,yEACI;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAKI,sFAAmD;IAAA,oEAAI;IAAA,8DAAE;IAAA,4DAAI;IAAC,4DAAkB;;;IAChF,+EAAqD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAIpE,sFAAmD;IAAA,oEAAI;IAAA,sEAAU;IAAA,4DAAI;IAAC,4DAAkB;;;IACxF,+EAA4D;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;IAIlF,sFAAmD;IAAA,oEAAI;IAAA,uEAAW;IAAA,4DAAI;IAAC,4DAAkB;;;IACzF,+EAA8D;IAAA,uDAAwB;IAAA,4DAAW;;;IAAnC,0DAAwB;IAAxB,mGAAwB;;;IAGtF,sFAAmD;IAAA,oEAAI;IAAA,wEAAY;IAAA,4DAAI;IAAC,4DAAkB;;;IAC1F,+EAA+D;IAAA,uDAC/D;;IAAA,4DAAW;;;IADoD,0DAC/D;IAD+D,+KAC/D;;;IAIA,sFAAmD;IAAA,oEAAI;IAAA,uEAAW;IAAA,4DAAI;IAAC,4DAAkB;;;IACzF,+EAA6D;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;IAIpF,sFAAmD;IAAA,oEAAI;IAAA,qEAAS;IAAA,4DAAI;IAAC,4DAAkB;;;IACvF,+EAA2D;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,gGAAqB;;;IAGhF,sFAAmD;IAAA,oEAAI;IAAA,sEAAU;IAAA,4DAAI;IAAC,4DAAkB;;;IACxF,+EAA4D;IAAA,uDAAsB;IAAA,4DAAW;;;IAAjC,0DAAsB;IAAtB,iGAAsB;;;IAGlF,sFAAmD;IAAA,oEAAI;IAAA,uEAAW;IAAA,4DAAI;IAAC,4DAAkB;;;IACzF,+EAA6D;IAAA,uDAAuB;IAAA,4DAAW;;;IAAlC,0DAAuB;IAAvB,kGAAuB;;;IAGpF,sFACI;IAAA,qEACJ;IAAA,4DAAkB;;;IAKlB,sFACI;IAAA,oEACJ;IAAA,4DAAkB;;;IAGtB,4EAAqE;;;IACrE,qEAAoE;;;;IACpE,gFACiB;;;IAD8B,kLAAmD;;;IAElG,gFAC2F;;;IAAvF,gNAAqE;;;;;;IAzDjF,0EACI;IAAA,mFACI;IADiD,2VAAkC;IACnF,4EACI;IAAA,iJAAgF;IAChF,mIAA+E;IACnF,qEAAe;IAEf,4EACI;IAAA,iJAAwF;IACxF,mIAA6F;IACjG,qEAAe;IAEf,4EACI;IAAA,mJAAyF;IACzF,qIAAiG;IACrG,qEAAe;IACf,6EACI;IAAA,mJAA0F;IAC1F,qIACW;IACf,qEAAe;IAEf,6EACI;IAAA,mJAAyF;IACzF,qIAA+F;IACnG,qEAAe;IAEf,6EACI;IAAA,mJAAuF;IACvF,qIAA2F;IAC/F,qEAAe;IACf,6EACI;IAAA,mJAAwF;IACxF,qIAA6F;IACjG,qEAAe;IACf,6EACI;IAAA,mJAAyF;IACzF,qIAA+F;IACnG,qEAAe;IACf,6EACI;IAAA,mJAEkB;IAEtB,qEAAe;IAEf,6EACI;IAAA,mJAEkB;IAEtB,qEAAe;IACf,iJAAqE;IACrE,mIAAoE;IACpE,iJACiB;IACjB,iJAC2F;IAE/F,4DAAY;IAChB,4DAAM;;;IA3DS,0DAAyB;IAAzB,yFAAyB;IAmDf,2DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;IACvC,0DAA4B;IAA5B,kJAA4B;IAE5B,0DAA2B;IAA3B,kJAA2B;;;AD/DjD,MAAM,aAAa;IAexB,YAAoB,WAAyB,EACnC,MAAiB,EACjB,aAAkC,EACnC,MAAc,EAAS,eAA+B,EAAU,YAAkB,EACnF,mBAA2C;QAJ/B,gBAAW,GAAX,WAAW,CAAc;QACnC,WAAM,GAAN,MAAM,CAAW;QACjB,kBAAa,GAAb,aAAa,CAAqB;QACnC,WAAM,GAAN,MAAM,CAAQ;QAAS,oBAAe,GAAf,eAAe,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAM;QACnF,wBAAmB,GAAnB,mBAAmB,CAAwB;QAjBnD,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,MAAM,CAAC;QACrB,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,MAAM,CAAC;QAC/B,cAAS,GAAS,EAAE,CAAE;QACtB,SAAI,GAAW,EAAE,CAAC;QAGlB,qBAAgB,GAAa,CAAC,IAAI,EAAC,WAAW,EAAC,aAAa,EAAE,cAAc,EAAC,YAAY,EAAC,UAAU,EAAC,WAAW,EAAC,YAAY,CAAC,CAAC;QAC/H,eAAU,GAAC,IAAI,0EAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAkC7C,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QA8BvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QA9DtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,8BAA8B,CAAC,CAAC;IAC5D,CAAC;IAEJ,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEnG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5F,IAAI,CAAC,IAAI,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;IAEJ,CAAC;IAEC,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAEC,aAAa;QACX,IAAI,CAAC,SAAS,GAAE,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QAAG,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACjE,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAOH,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAE,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACvH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;aAC5D;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE1C,CAAC,CAAC;IAGN,CAAC;IAKD,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;0EAhGU,aAAa;6FAAb,aAAa;kEAUb,8DAAO;kEACP,wEAAY;;;;;;QC5BzB,8EACI;QAAA,kFACI;QAAA,iFACI;QAAA,qEACJ;QAAA,4DAAiB;QACrB,4DAAkB;QAClB,yEAA2B;QAG3B,yEACI;QAAA,oFACI;QAAA,2EACA;QADgB,oLAAuB,4EAAkD,iBAAa,IAA/D;QAAvC,4DACA;QAAA,+GAES;QACb,4DAAiB;QACrB,4DAAM;QACN,yGAKQ;QACN,wMA8DY;QACd,oFACA;QADiE,iJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QACpB,4DAAW;;;QA7EiB,0DAAuB;QAAvB,kFAAuB;QAC0B,0DAAe;QAAf,+EAAe;QAKlE,0DAAuB;QAAvB,wFAAuB;QAqE9B,0DAAiC;QAAjC,kJAAiC;;6FDrEvC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;goBAWqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AE5BzB;AAAA;AAAO,MAAM,eAAe;IAA5B;QACI,uBAAkB,GAAa,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAChD,aAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtC,cAAS,GAAG,CAAC,CAAC;QACd,mBAAc,GAAG,CAAC,CAAC;IACvB,CAAC;CAAA;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6F;AACvB;AACX;AACV;AACY;AAaqC;AACA;AAC9D;AAEoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICE1C,wEACE;IAAA,iFAAsC;IAAA,uDAAmB;IAAA,4DAAa;IACxE,qEAAe;;;IADD,0DAAyB;IAAzB,+FAAyB;IAAC,0DAAmB;IAAnB,oFAAmB;;;IAO3D,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAgC7D,wEACE;IAAA,iFAA2C;IAAA,uDAAwB;IAAA,4DAAa;IAClF,qEAAe;;;IADD,0DAA8B;IAA9B,oGAA8B;IAAC,0DAAwB;IAAxB,yFAAwB;;;IA6BjE,wEACE;IAAA,iFAAuC;IAAA,uDAAoB;IAAA,4DAAa;IAC1E,qEAAe;;;IADD,0DAA0B;IAA1B,gGAA0B;IAAC,0DAAoB;IAApB,qFAAoB;;;IAO7D,wEACE;IAAA,iFAAgD;IAAA,uDAA6B;IAAA,4DAAa;IAC5F,qEAAe;;;IADD,0DAAmC;IAAnC,yGAAmC;IAAC,0DAA6B;IAA7B,8FAA6B;;;IA4BnF,wEACE;IAAA,iFAAqC;IAAA,uDAAkB;IAAA,4DAAa;IACtE,qEAAe;;;IADD,0DAAwB;IAAxB,8FAAwB;IAAC,0DAAkB;IAAlB,mFAAkB;;;;IA+DjE,8EACE;IAAA,6EACE;IAD8D,oUAAiB;IAC/E,+EAAoB;IAAA,gEAAK;IAAA,4DAAW;IACtC,4DAAS;IACX,4DAAc;IACd,qFACE;IAAA,0EACE;IAAA,8EAEE;IAAA,4EAGA;IAHgB,mWAAsB;IAAtC,4DAGA;IAAA,6EACE;IAAA,wEACF;IAAA,4DAAS;IACX,4DAAc;IAEd,iFAEF;IAFgD,2VAAiC;IAA/E,4DAEF;IAAA,4DAAM;IACR,4DAAiB;IAEjB,8EACE;IADsB,uUAAmB;IACzC,4EAAU;IAAA,wEAAY;IAAA,4DAAW;IAAC,oEACpC;IAAA,4DAAS;;;IAfa,0DAAsB;IAAtB,qFAAsB;;;;IAmB5C,8EACE;IAAA,6EACE;IAD8D,uUAAoB;IAClF,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;IACX,4DAAc;IACd,0EACE;IAAA,qEAEM;IACR,4DAAM;;;IAHc,0DAAuB;IAAvB,sJAAuB;;;;IAU3C,6EACE;IADgF,uUAAyB;IACzG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC5B,4DAAS;;;IAIb,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACe;IAEjB,4DAAM;;;IAQE,uFAA2D;IAAA,gEAAI;IAAA,4DAAkB;;;;IACjF,gFACE;IAAA,uDAAe;IAAA,4DAAW;;;;IADkC,8LAA4E;IACxI,0DAAe;IAAf,0FAAe;;;;IAIjB,kFACE;IAAA,oFAAkD;IAApC,yXAAmC;IAAC,8DAAG;IAAA,4DAAe;IACtE,4DAAkB;;;;IAClB,gFACE;IAAA,oFAAqE;IAArC,yZAAoC;IAAC,4DAAe;IACtF,4DAAW;;;;IAFsC,gMAA4E;IAC7G,0DAAiB;IAAjB,kFAAiB;;;IAKjC,uFAAoE;IAAA,6EAAiB;IAAA,4DAAkB;;;IAGrG,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,wGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EAEA;IADE,0ZAAqC;IADvC,4DAEA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHT,0DAAqC;IAArC,iGAAqC;;;IAR7C,gFAEE;IAAA,kKAEe;IACf,kKAMe;IACjB,4DAAW;;;;IAXT,gMAA4E;IAC7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAWnC,uFAAoE;IAAA,mEAAO;IAAA,4DAAkB;;;IAE3F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,8FACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADiD,gZAA2B;IAA5E,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHsC,0DAA2B;IAA3B,uFAA2B;;;IANlF,gFACE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAVqD,gMAA4E;IAC3H,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAoE;IAAA,uEAAW;IAAA,4DAAkB;;;IAE/F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,kGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADyD,oZAA+B;IAAxF,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAH8C,0DAA+B;IAA/B,2FAA+B;;;IAN9F,gFACE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAV0D,gMAA4E;IAChI,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAoE;IAAA,0EAAc;IAAA,4DAAkB;;;IAGlG,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,qGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IAD+D,uZAAkC;IAAjG,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHoD,0DAAkC;IAAlC,8FAAkC;;;IAPvG,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAVT,gMAA4E;IAC7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAmD;IAAA,oEAAI;IAAA,qEAAS;IAAA,4DAAI;IAAC,4DAAkB;;;IACvF,gFACE;IAAA,uDAAqB;IAAA,4DAAW;;;;IADkC,gMAA4E;IAC9I,0DAAqB;IAArB,iGAAqB;;;IAIvB,uFAAoE;IAAA,sEAAU;IAAA,4DAAkB;;;IAE9F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,iGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADuD,mZAA8B;IAArF,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAH4C,0DAA8B;IAA9B,0FAA8B;;;IAN3F,gFACE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAVyD,gMAA4E;IAC/H,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAoE;IAAA,yEAAa;IAAA,4DAAkB;;;IAGjG,wEACE;IAAA,uDACF;;IAAA,qEAAe;;;IADb,0DACF;IADE,mLACF;;;IACA,wEACE;IAAA,iFACE;IAAA,wEACA;IAAA,uFAA6E;IAC7E,uFAA8C;IAC9C,4EAAW;IAAA,mFAAwB;IAAA,4DAAY;IACjD,4DAAiB;IACnB,qEAAe;;;IALJ,0DAA6B;IAA7B,gFAA6B;IACH,0DAAmB;IAAnB,sEAAmB;;;IAR1D,gFAEE;IAAA,kKAEe;IACf,kKAOe;IACjB,4DAAW;;;;IAZT,gMAA4E;IAC7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAYnC,uFAAoE;IAAA,0EAAc;IAAA,4DAAkB;;;IAGlG,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,oGACF;;;IACA,wEACE;IAAA,iFACE;IAAA,wEACA;IAAA,gGAA+F;IAC/F,gGAAgE;IAChE,4EAAW;IAAA,mFAAwB;IAAA,4DAAY;IACjD,4DAAiB;IACnB,qEAAe;;;IALJ,0DAA6B;IAA7B,gFAA6B;IACM,0DAAmB;IAAnB,sEAAmB;;;IARnE,gFAEE;IAAA,kKAEe;IACf,kKAOe;IACjB,4DAAW;;;;IAZT,gMAA4E;IAC7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAYnC,uFAAoE;IAAA,wEAAY;IAAA,4DAAkB;;;IAIhG,wEACE;IAAA,uDACF;;IAAA,qEAAe;;;IADb,0DACF;IADE,kLACF;;;IACA,wEACE;IAAA,iFACE;IAAA,wEACA;IAAA,uFAA4E;IAC5E,uFAA6C;IAC7C,4EAAW;IAAA,mFAAwB;IAAA,4DAAY;IACjD,4DAAiB;IACnB,qEAAe;;;IALJ,0DAA4B;IAA5B,gFAA4B;IACF,0DAAkB;IAAlB,sEAAkB;;;IATzD,gFAGE;IAAA,kKAEe;IACf,kKAOe;IACjB,4DAAW;;;;IAbT,gMAA4E;IAE7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAYnC,uFAAoE;IAAA,wEAAY;IAAA,4DAAkB;;;IAIhG,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,mGACF;;;IACA,wEACE;IAAA,iFACE;IAAA,wEACA;IAAA,gGAA8F;IAC9F,gGAA+D;IAC/D,4EAAW;IAAA,mFAAwB;IAAA,4DAAY;IACjD,4DAAiB;IACnB,qEAAe;;;IALJ,0DAA4B;IAA5B,gFAA4B;IACO,0DAAkB;IAAlB,sEAAkB;;;IATlE,gFAGE;IAAA,kKAEe;IACf,kKAOe;IACjB,4DAAW;;;;IAbT,gMAA4E;IAE7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAYnC,uFAAoE;IAAA,gEAAI;IAAA,4DAAkB;;;IAGxF,wEACE;IAAA,uDACF;;IAAA,qEAAe;;;IADb,0DACF;IADE,6JACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IAD6C,8YAAyB;IAAtE,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHkC,0DAAyB;IAAzB,qFAAyB;;;IAP5E,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAXoD,gMAA4E;IAE1H,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAmD;IAAA,oEAAI;IAAA,0EAAc;IAAA,4DAAI;IAAC,4DAAkB;;;IAC5F,gFAEE;IAAA,uDACF;IAAA,4DAAW;;;;IAFT,gMAA4E;IAC5E,0DACF;IADE,sGACF;;;IAIA,uFAAoE;IAAA,wEAAY;IAAA,4DAAkB;;;IAGhG,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,mGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IAD2D,qZAAgC;IAA3F,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHgD,0DAAgC;IAAhC,4FAAgC;;;IAPjG,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAVT,gMAA4E;IAC7D,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAmD;IAAA,oEAAI;IAAA,qEAAS;IAAA,4DAAI;IAAC,4DAAkB;;;IACvF,gFACE;IAAA,uDACF;IAAA,4DAAW;;;;IAF0D,gMAA4E;IAC/I,0DACF;IADE,kGACF;;;IAIA,uFAAmD;IAAA,oEAAI;IAAA,yEAAa;IAAA,4DAAI;IAAC,4DAAkB;;;IAC3F,gFAEE;IAAA,uDACF;IAAA,4DAAW;;;;IAFT,gMAA4E;IAC5E,0DACF;IADE,0GACF;;;IAIA,uFAAoE;IAAA,kEAAM;IAAA,4DAAkB;;;IAE1F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,8FACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADiD,gZAA2B;IAA5E,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHsC,0DAA2B;IAA3B,uFAA2B;;;IANlF,gFACE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAVqD,gMAA4E;IAC3H,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAmD;IAAA,oEAAI;IAAA,+EAAmB;IAAA,4DAAI;IAAC,4DAAkB;;;IACjG,gFAGE;IAAA,uDACF;IAAA,4DAAW;;;;IAHT,gMACqC;IACrC,0DACF;IADE,+GACF;;;IAIA,uFAAmD;IAAA,oEAAI;IAAA,mEAAO;IAAA,4DAAI;IAAC,4DAAkB;;;;IACrF,gFAGE;IAAA,uDACF;IAAA,4DAAW;;;;IAHT,kOACwF;IACxF,0DACF;IADE,oGACF;;;IAIA,uFAAoE;IAAA,wEAAY;IAAA,4DAAkB;;;IAGhG,wEACE;IAAA,uDACF;;IAAA,qEAAe;;;IADb,0DACF;IADE,kLACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IAD2D,qZAAgC;IAA3F,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAHgD,0DAAgC;IAAhC,4FAAgC;;;IAPjG,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAX0D,gMAChC;IACpB,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAoE;IAAA,uEAAW;IAAA,4DAAkB;;;IAG/F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,kGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADyD,oZAA+B;IAAxF,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAH8C,0DAA+B;IAA/B,2FAA+B;;;IAP9F,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAX0D,gMAA4E;IAEhI,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAAoE;IAAA,uEAAW;IAAA,4DAAkB;;;IAG/F,wEACE;IAAA,uDACF;IAAA,qEAAe;;;IADb,0DACF;IADE,kGACF;;;;IACA,wEACE;IAAA,sFACE;IAAA,6EACA;IADyD,oZAA+B;IAAxF,4DACA;IAAA,4EAAW;IAAA,uEAAY;IAAA,4DAAY;IACrC,4DAAiB;IACnB,qEAAe;;;IAH8C,0DAA+B;IAA/B,2FAA+B;;;IAP9F,gFAEE;IAAA,kKAEe;IACf,kKAKe;IACjB,4DAAW;;;;IAXwD,gMAA4E;IAE9H,0DAAmB;IAAnB,uFAAmB;IAGnB,0DAAkB;IAAlB,sFAAkB;;;IAUnC,uFAA0D;IAAA,oEAAI;IAAA,qEAAS;IAAA,4DAAI;IAAC,4DAAkB;;;IAC9F,gFACE;IAAA,uDAAqB;IAAA,4DAAW;;;IAAhC,0DAAqB;IAArB,iGAAqB;;;IAIvB,uFAAoD;IAAA,6EAAiB;IAAA,4DAAkB;;;IACuD,gFAAmD;IAAA,+EAAoB;IAAA,4DAAW;;;IAAhO,gFAA8I;IAAA,2JAAkF;IAAC,4DAAW;;;IAA5K,gMAA4E;IAAiC,0DAAkB;IAAlB,mFAAkB;;;IAI/L,uFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAG1E,wEACE;IAAA,8EACE;IADyD,0cAAyB;IAClF,iEACF;IAAA,4DAAS;IACT,4EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC3B,8EACE;IADyD,wcAAuB;IAChF,mEACF;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,8EACE;IADsC,0cAAyB;IAC/D,mEACF;IAAA,4DAAS;IACT,8EACE;IADgC,wWAAsB;IACtD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAlBjB,gFAEE;IAAA,kKAQe;IACf,kKAOe;IACjB,4DAAW;;;;IAnByC,gMAA4E;IAE/G,0DAAmB;IAAnB,uFAAmB;IASnB,0DAAkB;IAAlB,sFAAkB;;;IAYnC,uFACE;IAAA,wEACF;IAAA,4DAAkB;;;IAKpB,4EAAqE;;;IACrE,qEAAoE;;;;IACpE,iFAAsI;;;IAAxF,iNAAsE;;;;;IAtWxH,0EAEE;IAAA,oFAEE;IAFyE,yWAAkC;IAE3G,4EACE;IAAA,4JAAiF;IACjF,8IAC4B;IAC9B,qEAAe;IAEf,4EACE;IAAA,4JAEkB;IAClB,8IAEW;IACb,qEAAe;IAEf,4EACE;IAAA,8JAAuG;IACvG,gJAYW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAA6F;IAC7F,gJAUW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAiG;IACjG,gJAUW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAoG;IACpG,gJAWW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAuF;IACvF,gJACkC;IACpC,qEAAe;IAEf,6EACE;IAAA,8JAAgG;IAChG,gJAUW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAmG;IACnG,gJAaW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAoG;IACpG,gJAaW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAkG;IAClG,gJAcW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAAkG;IAClG,gJAcW;IACb,qEAAe;IAEf,6EACE;IAAA,8JAA0F;IAC1F,iJAWW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAA4F;IAC5F,iJAGW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAkG;IAClG,iJAWW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAuF;IACvF,iJAEW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAA2F;IAC3F,iJAGW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAA4F;IAC5F,iJAUW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAiG;IACjG,iJAIW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAqF;IACrF,iJAIW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAkG;IAClG,iJAWW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAiG;IACjG,iJAWW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAAiG;IACjG,iJAWW;IACb,qEAAe;IAEf,8EACE;IAAA,8JAA8F;IAC9F,iJACkC;IACpC,qEAAe;IAEf,8EACE;IAAA,8JAAuF;IACvF,iJAA4O;IAC9O,qEAAe;IAEf,8EACE;IAAA,+JAA4E;IAC5E,iJAmBW;IACb,qEAAe;IAEf,8EACE;IAAA,+JAEkB;IAEpB,qEAAe;IAGf,6JAAqE;IACrE,+IAAoE;IACpE,6JAAsI;IAIxI,4DAAY;IAEd,4DAAM;;;IA1W6B,0DAAyB;IAAzB,0FAAyB;IAkWvC,2DAAiC;IAAjC,qGAAiC;IACpB,0DAA0B;IAA1B,sGAA0B;IACvC,0DAA2B;IAA3B,mJAA2B;;;IAiBpD,wEACa;;;ADvlBN,MAAM,uBAAuB;IA+DlC,YAAoB,MAAc,EAAU,MAAiB,EAAS,OAA+B,EAAU,YAAmB,EAAU,aAAmC,EAAS,mBAA2C,EAAU,YAA4B;QAArP,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAW;QAAS,YAAO,GAAP,OAAO,CAAwB;QAAU,iBAAY,GAAZ,YAAY,CAAO;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAS,wBAAmB,GAAnB,mBAAmB,CAAwB;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAxDzQ,cAAS,GAAW,EAAE,CAAC;QAGvB,WAAM,GAAU,KAAK,CAAC;QACtB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,eAAU,GAAY,KAAK,CAAC;QAC5B,oBAAe,GAAU,EAAE,CAAC;QAC5B,mBAAc,GAAuC,EAAE,CAAC;QACxD,yBAAoB,GAAmD,EAAE,CAAC;QAC1E,aAAQ,GAAe,EAAE,CAAC;QAC1B,cAAS,GAAe,EAAE,CAAC;QAC3B,WAAM,GAAc,EAAE,CAAC;QACvB,YAAO,GAAc,EAAE,CAAC;QACxB,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAC7B,sBAAiB,GAAyB,EAAE,CAAC;QAC7C,uBAAkB,GAAyB,EAAE,CAAC;QAC9C,kBAAa,GAAoB,EAAE,CAAC;QACpC,mBAAc,GAAoB,EAAE,CAAC;QACrC,cAAS,GAAgB,EAAE,CAAC;QAC5B,eAAU,GAAgB,EAAE,CAAC;QAC7B,aAAQ,GAAW,EAAE,CAAC;QACtB,YAAO,GAAY,KAAK,CAAC;QACzB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAY,KAAK,CAAC;QAC5B,sBAAiB,GAAY,KAAK,CAAC;QACnC,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QAEP,YAAO,GAAW,aAAa,CAAC;QAChC,WAAM,GAAW,MAAM,CAAC;QAC/B,kBAAa,GAAW,aAAa,CAAC;QACtC,eAAU,GAAW,MAAM,CAAC;QAC5B,eAAU,GAAY,EAAE,CAAC;QACzB,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9B,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACjC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAElC,CAAC,CAAC;QAUH,qBAAgB,GAAa,CAAE,IAAI,EAAC,KAAK,EAAG,iBAAiB,EAAE,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,UAAU;YAC7G,UAAU,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,EAAE,YAAY,EAAC,KAAK,EAAC,eAAe,EAAE,YAAY,EAAE,WAAW,EAAE,mBAAmB,EAAE,OAAO,EAAE,wBAAwB;YAC7K,aAAa,EAAI,YAAY,EAAE,WAAW,EAAC,WAAW,EAAE,UAAU,EAAC,MAAM,EAAC,QAAQ,CAAC,CAAC;QACtF,eAAU,GAAG,IAAI,0EAAkB,EAAO,CAAC;QA6I3C,yBAAyB;QAChB,UAAK,GAAG,MAAM,CAAC;QAMxB,aAAQ,GAAG,aAAa,CAAC;QACzB,cAAS,GAAG,aAAa,CAAC;QAC1B,cAAS,GAAW,EAAE,CAAC;QAMvB,QAAG,GAAa,EAAE,CAAC;QACnB,aAAa;QACb,UAAK,GAAY,KAAK,CAAC;QA6TvB,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QA4DvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QAriBtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IASD,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC5F,IAAI,CAAC,eAAe,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAA0B,CAAC;gBAC5D,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,eAAe,CAAC,CAAC;gBACtE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC1C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAE7D,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBACzF,IAAI,CAAC,eAAe,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAA0B,CAAC;gBAC5D,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC7D,CAAC,CAAC;SACH;QACD,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC3C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,QAAsB,CAAC;YAC5C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC1D,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,aAAgC,CAAC;YAC3D,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,OAAoB,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAoB,CAAC;YACxC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,SAAwB,CAAC;YAC/C,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,iBAAyC,CAAC;YACvE,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,iBAAyC,CAAC;QAC1E,CAAC,CAAC,CAAC;QACH,uBAAuB;QACxB,UAAU,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,EAAI,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAGD,sBAAsB;QACpB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC1C,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oBAAoB;QAClB,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACxC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;QACnB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC1C,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8BAA8B;QAC5B,MAAM,WAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpE,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACtE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAC1D,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yBAAyB;QACvB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAClE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAClD,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC7D,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YACpC,MAAM,IAAI,GAAW,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,qBAAqB;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACtD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IAClG,CAAC;IACD,cAAc;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,0CAA0C;QAC3C,sBAAsB;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,oBAAoB,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACpF,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACxE,IAAI,CAAC,oBAAoB,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACtE,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QACzE,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC9D,IAAI,CAAC,oBAAoB,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAClE,IAAI,CAAC,oBAAoB,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3E,IAAI,CAAC,oBAAoB,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC3E,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;QACnF,IAAI,CAAC,oBAAoB,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC7F,IAAI,CAAC,oBAAoB,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAC3H,IAAI,CAAC,oBAAoB,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACrH,IAAI,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QACxH,IAAI,CAAC,oBAAoB,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QAClH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAI,CAAC,eAAe,GAAG,GAAyB,CAAC;YACjD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC/D,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;YAC5C,oBAAoB;YACpB,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,MAAM,GAAC,KAAK,EAAE,CAAC,CAAE;QACvC,CAAC,CAAC,CAAC;IAEL,CAAC;IAmBD,gBAAgB,CAAC,KAAU;QACzB,IAAI,KAAK,CAAC,OAAO,EAAE;YAEjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;aACI;YACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SAEpB;IACH,CAAC;IAED,aAAa,CAAC,KAAU,EAAE,CAAM;QAC9B,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;SAChC;aACI;YACH,MAAM,KAAK,GAAW,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;aAC3B;SAEF;IAIH,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,IAAI,IAAI,CAAC,iBAAiB,IAAE,KAAK,EAAE;YAC3E,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAEjD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBAEzH,yDAAM,CAAC,IAAI,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;YAEnE,CAAC,EAAE,GAAG,CAAC,EAAE;gBAEP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEzC,CAAC,CAAC,CAAC;SACJ;aACI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,IAAE,KAAK,EAAE;YACvE,IAAI,CAAC,OAAO,CAAC,6BAA6B,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAE3D,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBAEzH,yDAAM,CAAC,IAAI,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;YAEnE,CAAC,EAAE,GAAG,CAAC,EAAE;gBAEP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;YAEzC,CAAC,CAAC,CAAC;SACJ;aACI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAC;YAC3G,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC/F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,oBAAoB,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACpG,yDAAM,CAAC,IAAI,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;YAEnE,CAAC,EACC,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;YACzC,CAAC,CAAC,CAAC;SACN;aACI;YACH,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;gBACxB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC;gBAC9C,OAAO;aACR;YAED,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAE/D,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,oBAAoB,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;gBACpG,yDAAM,CAAC,IAAI,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;YAEnE,CAAC,EACC,GAAG,CAAC,EAAE;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;YACzC,CAAC,CAAC,CAAC;SAEN;IAEH,CAAC;IAGD,cAAc,CAAC,OAAY;QACzB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE;gBAC1D,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;YACH,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,CAAC,CAAM,EAAE,EAAE;gBACzB,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;gBACxB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC5B,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE;oBAClB,IAAI,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtC,CAAC,CAAC;YACJ,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9C,0CAA0C;YACzC,IAAI,CAAC,SAAwB,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;SACzD;aAAM;YACL,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;SAC/B;IACH,CAAC;IACD,MAAM;QACJ,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;QAC5B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,UAAU,GAAG,eAAe,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1F,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IACD,SAAS;QACP,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;IAChC,CAAC;IACD,kBAAkB;QAChB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/B,UAAU,EAAE,sBAAsB;YAClC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IACD,eAAe;QACb,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACpC,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACrC,UAAU,EAAE,0BAA0B;YACtC,YAAY,EAAE,IAAI;SAGnB,CAAC,CAAC;IAEL,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC1B,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC3C,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpE,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;gBAC9B,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI;aAC1B;iBACI;gBACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC;aAC5B;QACH,CAAC,EACG,KAAK,CAAC,EAAE;YACR,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC;YACxC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CACF,CAAC;IAGJ,CAAC;IAED,QAAQ,CAAC,CAAM;QACb,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACnE,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAC/C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACtE,CAAC,EACD,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAC,CAAC,CAClE,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,EAAO;QACb,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,KAAK,CAAC;QAC3B,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC;QAE5B,YAAY,CAAC,UAAU,GAAG,eAAe,CAAC;QAC1C,YAAY,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE;QAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6GAA0B,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;YAC1F,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtE,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,kBAAkB;QAEhB,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAE9C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;YACnE,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,EAAE,EAAE,IAAI,EAAE,0BAA0B,EAAE,CAAC,CAAC;YACzH,yDAAM,CAAC,IAAI,EAAE,2BAA2B,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC;QAElE,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzC,CAAC,CAAC,CAAC;IAIL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC9B,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5C,IAAI,CAAC,cAAc,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC9E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACnE,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YACxD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YACrE,IAAI,CAAC,cAAc,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC7E,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAClD,IAAI,CAAC,cAAc,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACvF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACjE,IAAI,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC9D,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;YACtG,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACvE,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YAExE,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAErE,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC,EAAE,CAAC,CAAC;gBACL,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,4DAA4D;YAC9D,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,UAAU,CAAC,GAAG,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACvB,CAAC,EAAE,CAAC,CAAC;gBAEL,sDAAsD;YACxD,CAAC,CACA,CAAC;SAEH;IACH,CAAC;IACD,iCAAiC;IACjC,sCAAsC;IACtC,+DAA+D;IAC/D,8CAA8C;IAC9C,QAAQ;IACR,IAAI;IAEJ,eAAe,CAAC,KAAU;QACxB,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAClD,IAAI,QAAQ,GAAG,GAAG,CAAC,IAAiB,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;gBACnB,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE;aACnC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IACD,WAAW;QACT,IAAI,CAAC,WAAW,EAAE,CAAE;QACpB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IACD,UAAU,CAAC,OAAY;QACrB,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,iBAAiB,IAAE,KAAK,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC;YAClC,IAAG,IAAI,CAAC,iBAAiB,EAAC;gBACtB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;aAChE;YACR,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;gBAC3G,IAAI,CAAC,eAAe,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAA0B,CAAC;gBAC5D,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC9D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC7D,CAAC,CAAC;SAEH;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACnE;IACH,CAAC;IAMD,WAAW,CAAC,KAAU;QACpB,sBAAsB;QACtB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACxH,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;oBACtB,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,OAAO,CAAC;oBACtC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;oBACzD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,eAAe,CAAC,CAAC;oBACpE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;oBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACrB;;oBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEtB,CAAC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBACvG,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;oBACtB,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,OAAO,CAAC;oBACtC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;oBACxC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;oBACzD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,eAAe,CAAC,CAAC;oBACpE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;oBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;oBAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;oBAC5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACrB;;oBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;gBACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEtB,CAAC,CAAC;SACH;IAEH,CAAC;IACD,WAAW;QAET,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc;IAC5C,CAAC;IAKD,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;8FAnnBU,uBAAuB;uGAAvB,uBAAuB;;;;;;;kEAoEvB,8DAAO;kEACP,wEAAY;;;;;;;;;;;;;;;;;;;;;;;;QCnGzB,yFACE;QADmB,mNAA6B;QAChD,6FACE;QAAA,kFACE;QAAA,4EACF;QAAA,4DAAkB;QAClB,mFAEwB;QAC1B,4DAA6B;QAC7B,yEAA2B;QAC3B,0EACE;QAD2C,+IAAU,oBAAgB,IAAC;QACtE,mFACE;QAAA,gFACE;QAAA,yEAEE;QAAA,kFACE;QAAA,uEACF;QAAA,4DAAiB;QAEjB,kFACE;QAAA,iFAEE;QADA,8KAAmB,2BAAuB,IAAC;QAC3C,+EACA;QAD0G,+IAAS,0BAAsB,IAAC;QAA1I,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,iFACE;QAAA,gFACA;QAD2G,+IAAS,2BAAuB,IAAC;QAA5I,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QAEjB,kFACE;QAAA,wEAEA;QAAA,wFAAuF;QACvF,qGAA4C;QAAA,yFAC5C;QAAA,4DAA0B;QAC5B,4DAAiB;QAQnB,4DAAM;QACR,4DAAgB;QAChB,iFACE;QAAA,0EACE;QAAA,kFACE;QAAA,wEACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,wEACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,gFACA;QADgH,+IAAS,+BAA2B,IAAC;QAArJ,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,wEAEA;QAAA,wFAAqF;QACrF,qGAAwC;QAAA,yFACxC;QAAA,4DAA0B;QAC5B,4DAAiB;QASjB,4DAAM;QACN,4DAAgB;QAChB,iFACE;QAAA,0EACE;QAAA,kFACE;QAAA,wEACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,gFACA;QAD2G,+IAAS,4BAAwB,IAAC;QAA7I,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,kFACE;QAAA,gFACA;QADoH,+IAAS,oCAAgC,IAAC;QAA9J,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QACjB,kFACE;QAAA,wEACA;QAAA,wFAAsF;QACtF,qGAA0C;QAAA,wFAC1C;QAAA,4DAA0B;QAC5B,4DAAiB;QAGjB,4DAAM;QACN,4DAAgB;QACxB,iFACE;QAAA,0EACE;QAAA,kFACE;QAAA,wEACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,wEACF;QAAA,4DAAiB;QAIjB,kFACE;QAAA,kFACE;QAAA,iFACA;QADuG,+IAAS,yBAAqB,IAAC;QAAtI,4DACA;QAAA,uIAEe;QACjB,4DAAa;QACf,4DAAiB;QAKjB,kFACE;QAAA,wEACA;QAAA,wFAAoF;QACpF,qGAAyC;QAAA,wFACzC;QAAA,4DAA0B;QAC5B,4DAAiB;QAKnB,4DAAM;QACR,4DAAgB;QAKlB,4DAAgB;QAChB,qFACE;QAAA,iFACE;QAAA,2EACE;QAAA,2EACE;QAAA,8EACE;QAAA,4EAAU;QAAA,kEAAM;QAAA,4DAAW;QAAA,mEAC7B;QAAA,4DAAS;QAET,6EAEF;QAF6D,+IAAS,iBAAa,IAAC;QAAlF,4DAEF;QAAA,4DAAM;QAER,4DAAM;QACR,4DAAgB;QAClB,4DAAgB;QAGlB,4DAAO;QACT,4DAAsB;QAEtB,gFACE;QAAA,mFACE;QAAA,kFACE;QAAA,kFAAqB;QAAA,4EAAkC;QAAA,6DAAC;QAAA,4DAAO;QAC/D,4EAAkD;QAA7B,8IAAW,qBAAiB;QAAC,wEAAY;QAAA,4DAAO;QACrE,4EAA6B;QAAA,8DAAC;QAAA,4DAAO;QACrC,6EAAgD;QAA3B,+IAAW,mBAAe;QAAC,yEAAY;QAAA,4DAAO;QACnE,6EAA6B;QAAA,8DAAC;QAAA,4DAAO;QACrC,6EAAoD;QAA/B,+IAAS,wBAAoB,IAAC;QAAC,+EAAkB;QAAA,4DAAO;QAC7E,4EACE;QAAA,6EAAqC;QAAnB,+IAAS,YAAQ,IAAC;QAAC,sEAAS;QAAA,4DAAO;QACvD,4DAAM;QACR,4DAAiB;QACnB,4DAAkB;QAClB,2EAA2B;QAC3B,4EAEE;QAAA,qNA0Bc;QAEd,oNAWc;QAEd,qFAAmE;QAA9B,+JAAU,sBAAkB,IAAC;QAAC,wEAAW;QAAA,4DAAe;QAE7F,uFACE;QAAA,8EACA;QADgB,gMAAuB,wFAAkD,iBAAa,IAA/D;QAAvC,4DACA;QAAA,8HAES;QACX,4DAAiB;QACnB,4DAAM;QAEN,wHAKM;QAEN,qNA8Wc;QAEd,sFACA;QADgE,4JAAQ,uBAAmB,IAAC;QAC5F,4DAAgB;QAElB,4DAAW;QAKX,sIACa;;;;;;;QArnBQ,wFAA6B;QAU1C,0DAAkB;QAAlB,+EAAkB;QAayB,2DAAW;QAAX,iFAAW;QAQV,0DAAY;QAAZ,kFAAY;QAO7C,0DAAwC;QAAxC,qFAAwC;QAEd,0DAA6B;QAA7B,oEAA6B;QAwBlB,2DAAgB;QAAhB,sFAAgB;QAMrD,0DAAsC;QAAtC,qFAAsC;QAEZ,0DAA2B;QAA3B,oEAA2B;QAsBhB,2DAAY;QAAZ,kFAAY;QAQH,0DAAoB;QAApB,0FAAoB;QAM9D,0DAAuC;QAAvC,sFAAuC;QACb,0DAA4B;QAA5B,qEAA4B;QAsB3B,2DAAS;QAAT,+EAAS;QAUxC,0DAAqC;QAArC,sFAAqC;QACX,0DAA0B;QAA1B,qEAA0B;QAgGjD,2DAAuB;QAAvB,kFAAuB;QAC0B,0DAAe;QAAf,+EAAe;QAM9D,0DAAkC;QAAlC,sGAAkC;QAuXzC,0DAAgC;QAAhC,oJAAgC;QAQpC,0DAAa;QAAb,6EAAa;;6FDtlBb,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;2qBAE6B,aAAa;kBAAxC,uDAAS;mBAAC,eAAe;YACG,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACE,cAAc;kBAA1C,uDAAS;mBAAC,gBAAgB;YACI,gBAAgB;kBAA9C,uDAAS;mBAAC,kBAAkB;YACS,uBAAuB;kBAA5D,uDAAS;mBAAC,yBAAyB;YACF,mBAAmB;kBAApD,uDAAS;mBAAC,qBAAqB;YA8DZ,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;YAkJd,KAAK;kBAAb,mDAAK;YACa,QAAQ;kBAA1B,uDAAS;mBAAC,MAAM;YACG,SAAS;kBAA5B,uDAAS;mBAAC,OAAO;YACM,SAAS;kBAAhC,uDAAS;mBAAC,WAAW;YACJ,GAAG;kBAApB,uDAAS;mBAAC,KAAK;YACG,IAAI;kBAAtB,uDAAS;mBAAC,MAAM;YAQG,KAAK;kBAAxB,uDAAS;mBAAC,OAAO;;;;;;;;;;;;;;AElQpB;AAAA;AAAA;AAAA;AAA2C;AACyB;;AAK7D,MAAM,UAAU;IAGrB;QACA,SAAI,GAAc,IAAI,wDAAS,CAAC;YAC9B,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC3B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,KAAK,CAAC;YAC5C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,MAAM,EAAE,IAAI,0DAAW,CAAC,GAAG,CAAC;YAC5B,UAAU,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YAC9B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACpC,CAAC,CAAC;IAXa,CAAC;IAYjB,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;YACjB,IAAI,EAAC,IAAI;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,MAAM,EAAC,EAAE;YACT,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,CAAC;YACb,QAAQ,EAAC,EAAE;YACX,WAAW,EAAE,KAAK;SAEnB,CAAC;IACJ,CAAC;;oEA5BU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;6FAEP,UAAU;cAHtB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;ICYzD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAY;IAAA,qEAAS;IAAA,4DAAY;IACjC,4EACA;IADyC,gVAAsB;IAA/D,4DACA;IAAA,4EACA;IADqD,kVAAwB;IAA7E,4DACA;IAAA,sHAAwE;IAC5E,4DAAiB;IACjB,6EACG;IADuB,4TAA0B;IACjD,kEACH;IAAA,4DAAS;IACT,4DAAM;;;IAPuC,0DAAsB;IAAtB,oFAAsB;IACV,0DAAwB;IAAxB,sFAAwB;IACpD,0DAAoB;IAApB,uFAAoB;IAEoB,0DAA2C;IAA3C,kHAA2C;;;;IAMzG,6EACK;IAD6E,gUAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,oYAA0B;IAA1E,4DACA;IAAA,yJAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,yJAEkB;IACf,yJAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAUxC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAIxE,wEAEI;IAAA,6EACE;IAD0D,2bAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,4bAAuB;IAChF,mEAEH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD+D,8bAAyB;IACxF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,8VAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAfxE,+EAGI;IAAA,0JAUiB;IACf,0JAQe;IAErB,4DAAW;;;IArBQ,0DAAmB;IAAnB,uFAAmB;IAWjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IAxEpE,0EAEJ;IAAA,mFAGI;IAHyE,+VAAkC;IAG3G,4EACI;IAAA,qJAA0E;IAC1E,uIAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,qJAA2F;IAC3F,uIAUW;IACf,qEAAe;IAEf,4EACI;IAAA,uJAA4E;IAC5E,yIAwBW;IAIf,qEAAe;IAKf,6EACI;IAAA,uJAEkB;IAEtB,qEAAe;IAIf,qJAAsI;IACtI,qJAAqE;IACrE,uIAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IA3E2B,0DAAyB;IAAzB,yFAAyB;IAoErC,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD7FrD,MAAM,iBAAiB;IAsB5B,YAAoB,MAAiB,EAC5B,OAAwB,EACvB,YAAmB,EACnB,aAAmC,EACnC,mBAA2C;QAJjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAAiB;QACvB,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QAxBrD,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,WAAM,GAAS,KAAK,CAAC;QACrB,eAAU,GAAY,KAAK,CAAC;QAC5B,kBAAa,GAAgB,EAAE,CAAC;QAChC,aAAQ,GAAW,EAAE,CAAC;QACtB,eAAU,GAAW,CAAC,CAAC;QACvB,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAE,EAAE,CAAC;QACb,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QACpB,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAY9B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAwLxD,8BAA8B;QAC9B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAkCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QArOtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAOD,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC3G,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;YACnE,+CAA+C;YAC9C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAE7D,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YAC5F,IAAI,CAAC,aAAa,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YACpC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC5D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;QACF,UAAU,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC,CAAE;IAC7C,CAAC;IAIC,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAED,eAAe;QAEb,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;IAC7D,CAAC;IAED,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,aAAa,GACjB;YACE,EAAE,EAAE,IAAI,CAAC,UAAU;YACnB,IAAI,EAAE,IAAI,CAAC,QAAQ;SACpB;QACD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;YACxB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAClD,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;gBACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACtB,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACL,IAAI,CAAC,IAAI,GAAE,KAAK,CAAC;IACf,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3C,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC,EACD,KAAK,GAAE;oBAEL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;gBAAA,CAAC,CACtD,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,YAAY,GAChB;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,SAAS,CACjD,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC5D,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACtB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CAC1D,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;IACnC,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI;IAChB,CAAC;IACD,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACvE,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC,CAAC,GAAS;QAE3C,IAAI,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC;QACzB,IAAI,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,SAAS,EAAG,WAAW,CAAC,CAAC,SAAS,CAC/D,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IAOD,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEtH,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACvF,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBAEtB,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,OAAO,CAAC;gBACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACtC,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBACvD,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,aAAa,CAAC,CAAC;gBAClE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAGN,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;kFA9QU,iBAAiB;iGAAjB,iBAAiB;kEA8BjB,8DAAO;kEACP,wEAAY;;;;;;QC9CxB,8EACG;QAAA,kFACE;QAAA,iFACE;QAAA,sEACA;QAAA,yEACE;QAAA,0EAAsC;QAAnB,uIAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAC9D,4DAAiB;QACrB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,6GAUI;QACF,qFACI;QAAA,4EACD;QADiB,yLAAuB,iFAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,qHAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,+GAKM;QACN,4MA+Ec;QAEd,qFACA;QADiE,qJAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAChB,4DAAW;;;QA5GH,0DAAU;QAAV,0EAAU;QAYM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAuFzC,0DAAiC;QAAjC,kJAAiC;;6FDrGnC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;6fA+BqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AE/CzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAE0C;AACjB;AACf;AACY;AACwC;AACzC;AACe;AACpB;AACQ;AAE2B;AAC3B;AACD;AACH;AACM;AACZ;;;AAErE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,OAAO;QACd,SAAS,EAAC,wFAAc;KACxB;IACA;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAAc;KAC1B;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,2FAAe;QAG1B,QAAQ,EAAE,CAAC;gBACT,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,4FAAkB;aAE9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,6GAAuB;gBAClC,WAAW,EAAC,CAAC,kFAAgB,CAAC;aAC/B;YACD;gBACE,IAAI,EAAE,sBAAsB;gBAC5B,SAAS,EAAE,iIAA6B;gBACxC,WAAW,EAAC,CAAC,kFAAgB,CAAC;aAC/B;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,yFAAiB;gBAC5B,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,SAAS,EAAE,wFAAgB;gBAC3B,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,4FAAiB;gBAC5B,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,uHAA0B;gBACrC,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,UAAU;gBAChB,SAAS,EAAE,4FAAiB;gBAC5B,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,mFAAe;gBAC1B,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,uGAAqB;gBAChC,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,6EAAa;gBACxB,WAAW,EAAC,CAAC,8FAAsB,CAAC;aACrC;SACA;KACF;CAEF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACjGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEF;AACV;AACY;;;;;;;;;;;;;;;;;;;;;;ICYzD,2EAA+C;IAAA,6EAAkB;IAAA,4DAAO;;;;IAL1E,sEACA;IAAA,qFACE;IAAA,4EAAY;IAAA,mFAAuB;IAAA,4DAAY;IAC/C,4EACA;IADyC,qWAAkC;IAA3E,4DACA;IAAA,4EACA;IADqD,mWAAgC;IAArF,4DACA;IAAA,+HAAwE;IAE5E,4DAAiB;IACjB,6EACG;IADuB,qUAA0B;IACjD,kEACH;IAAA,4DAAS;IACT,4DAAM;;;IARuC,0DAAkC;IAAlC,gGAAkC;IACtB,0DAAgC;IAAhC,8FAAgC;IAC5D,0DAAoB;IAApB,uFAAoB;IAGoB,0DAAuD;IAAvD,8HAAuD;;;;IAMrH,6EACK;IAD6E,yUAAyB;IACtG,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAC9B,4DAAS;;;IAIjB,0EACE;IAAA,uEAAM;IAAA,2EAAgB;IAAA,4DAAO;IAC7B,kFACiB;IAEnB,4DAAM;;;IAQE,sFAAoD;IAAA,gEAAI;IAAA,4DAAkB;;;IAC1E,+EAAsD;IAAA,uDAAe;IAAA,4DAAW;;;IAA1B,0DAAe;IAAf,0FAAe;;;IAKrE,sFAAoE;IAAA,iEAAK;IAAA,4DAAkB;;;IAEvF,wEACI;IAAA,uDACD;IAAA,qEAAe;;;IADd,0DACD;IADC,qGACD;;;IAII,2EAA+E;IAAA,6EAAkB;IAAA,4DAAO;;;;IAH5G,wEACE;IAAA,qFACE;IAAA,4EACA;IADgD,6YAA0B;IAA1E,4DACA;IAAA,kKAAwG;IAC1G,4DAAiB;IACnB,qEAAe;;;;IAHqC,0DAA0B;IAA1B,qFAA0B;IACjD,0DAAoD;IAApD,oIAAoD;;;IAPxF,+EACI;IAAA,kKAEkB;IACf,kKAKe;IACtB,4DAAW;;;IATQ,0DAAmB;IAAnB,uFAAmB;IAGhB,0DAAkB;IAAlB,sFAAkB;;;IAUxC,sFAAoD;IAAA,kEAAM;IAAA,4DAAkB;;;;IAExE,wEACI;IAAA,6EACE;IAD0D,ocAAsB;IAChF,iEACF;IAAA,4DAAS;IACV,2EAAmB;IAAA,4DAAC;IAAA,4DAAO;IAC1B,6EACG;IADyD,qcAAuB;IAChF,mEACH;IAAA,4DAAS;IACX,qEAAe;;;;IACf,wEACE;IAAA,6EACG;IAD8D,ucAAyB;IACvF,mEACH;IAAA,4DAAS;IAET,6EACE;IADkC,uWAAsB;IACxD,mEACF;IAAA,4DAAS;IACX,qEAAe;;;IAP4B,0DAAuB;IAAvB,wFAAuB;;;IAXxE,+EACI;IAAA,mKAQiB;IACf,mKAQe;IAErB,4DAAW;;;IAnBQ,0DAAmB;IAAnB,uFAAmB;IASjB,0DAAkB;IAAlB,sFAAkB;;;IAoBvC,sFACG;IAAA,wEACH;IAAA,4DAAkB;;;;IAMtB,gFAAsI;;;IAAxF,gNAAsE;;;IACpH,4EAAqE;;;IACrE,qEAAoE;;;;;IApEpE,0EAEJ;IAAA,mFAGI;IAHyE,wWAAkC;IAG3G,4EACI;IAAA,8JAA0E;IAC1E,gJAAgF;IACpF,qEAAe;IAGf,4EACI;IAAA,8JAA2F;IAC3F,gJAUW;IACf,qEAAe;IAEf,4EACI;IAAA,gKAA4E;IAC5E,kJAoBW;IAIf,qEAAe;IAKf,6EACI;IAAA,gKAEkB;IAEtB,qEAAe;IAIf,8JAAsI;IACtI,8JAAqE;IACrE,gJAAoE;IAGxE,4DAAY;IAEZ,4DAAM;;;IAvE2B,0DAAyB;IAAzB,yFAAyB;IAgErC,2DAA2B;IAA3B,kJAA2B;IAC3B,0DAAiC;IAAjC,oGAAiC;IACpB,0DAA0B;IAA1B,qGAA0B;;;AD1FrD,MAAM,0BAA0B;IAoBrC,YAAoB,MAAiB,EAC5B,OAAiC,EAChC,YAAmB,EACnB,aAAmC,EACnC,mBAA2C;QAJjC,WAAM,GAAN,MAAM,CAAW;QAC5B,YAAO,GAAP,OAAO,CAA0B;QAChC,iBAAY,GAAZ,YAAY,CAAO;QACnB,kBAAa,GAAb,aAAa,CAAsB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAwB;QAtBvD,WAAM,GAAS,KAAK,CAAC;QACnB,cAAS,GAAW,EAAE,CAAC;QAGvB,iBAAY,GAAY,KAAK,CAAC;QAC9B,SAAI,GAAY,KAAK,CAAC;QACtB,eAAU,GAAY,KAAK,CAAC;QAC5B,qBAAgB,GAAyB,EAAE,CAAC;QAC5C,yBAAoB,GAAW,EAAE,CAAC;QAClC,uBAAkB,GAAW,CAAC,CAAC;QAC/B,mBAAc,GAAY,KAAK,CAAC;QAChC,0BAAqB,GAAY,KAAK,CAAC;QACvC,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,CAAC,CAAC;QACf,aAAQ,GAAE,EAAE,CAAC;QACN,YAAO,GAAW,IAAI,CAAC;QACvB,WAAM,GAAW,KAAK,CAAC;QAY9B,qBAAgB,GAAa,CAAC,IAAI,EAAE,MAAM,EAAC,QAAQ,CAAC,CAAC;QACrD,eAAU,GAAG,IAAI,0EAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QA6L3D,8BAA8B;QAC9B,kBAAa,GAAW,IAAI,CAAC;QAC7B,eAAU,GAAW,KAAK,CAAC;QAC3B,WAAM,GAAG,CAAC,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,gBAAW,GAAW,EAAE,CAAC;QAClB,QAAG,GAAW,CAAC,CAAC;QAmCvB,YAAO,GAAW,IAAI,CAAC;QACvB,YAAO,GAAW,KAAK,CAAC;QA7OtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;IAClD,CAAC;IAOD,qBAAqB;QACnB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACpH,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC,CAAC;YAC9C,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;QAE9C,CAAC,CAAC;IACN,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QACnG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACrG,UAAU,CAAC,GAAE,EAAE,KAAI,CAAC,MAAM,GAAG,KAAK,EAAC,IAAI,CAAC,CAAC;YACzC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,IAAI,CAAC;YACvC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,CAAC,UAAU,CAAC;YAC/D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACrE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;QAC7D,CAAC,CAAC;IAEJ,CAAC;IAIC,6BAA6B;IAC7B,iDAAiD;IACjD,kDAAkD;IAClD,2DAA2D;IAC3D,uEAAuE;IACvE,kEAAkE;IAClE,mDAAmD;IAEnD,QAAQ;IACR,IAAI;IACJ,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtE,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IACD,WAAW;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,gBAAgB,GACpB;YACE,EAAE,EAAE,IAAI,CAAC,kBAAkB;YAC3B,IAAI,EAAE,IAAI,CAAC,oBAAoB;SAChC;QACD,IAAI,IAAI,CAAC,kBAAkB,IAAI,CAAC,EAAE;YAChC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAC9D,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC9B,CAAC,EACC,KAAK,CAAC,EAAE;gBACR,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBAEJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,sBAAsB,CAAC;YACvD,CAAC,CACF,CAAC;SAEH;aACI;YACH,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAC9D,GAAG,CAAC,EAAE;gBACJ,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,IAAI,CAAC;gBACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;gBAC5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;gBAC/B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;YAC9B,CAAC,EACD,KAAK,CAAC,EAAE;gBACN,UAAU,CAAC,GAAE,EAAE;oBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;gBACpB,CAAC,EAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;YAAC,CAAC,CACzD,CAAC;SAGH;QACL,IAAI,CAAC,IAAI,GAAC,KAAK,CAAC;IACd,CAAC;IACD,QAAQ,CAAC,GAAO;QACd,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrE,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,CACpD,EAAE,CAAC,EAAE;oBACH,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;oBAC5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAE/B,CAAC,EACD,KAAK,GAAE,GAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAC,CAC5D,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACH,CAAC;IAED,OAAO,CAAC,CAAM;QAEZ,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IACD,UAAU,CAAC,GAAS;QAClB,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC;QACjB,IAAI,oBAAoB,GACxB;YACE,EAAE,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,EAAE,GAAG,CAAC,IAAI;SACf;QACD,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAClE,GAAG,CAAC,EAAE;YACJ,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,IAAI,CAAC;YACP,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;YAC5D,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC9B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,UAAU,CAAC,GAAE,EAAE;gBACb,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC;YACpB,CAAC,EAAC,CAAC,CAAC;YACH,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC,CAC1D,CAAC;QACF,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC5B,CAAC;IACH,MAAM;QACJ,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;IACjB,CAAC;IACD,wBAAwB;QAEtB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,EAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAC3F,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,KAAK,CAAC;aAC3B;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;aAC1B;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAkC,CAAC,GAAS;QAE3C,IAAI,qBAAqB,GAAG,GAAG,CAAC,IAAI,CAAC;QACrC,IAAI,mBAAmB,GAAG,GAAG,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,qBAAqB,EAAG,mBAAmB,CAAC,CAAC,SAAS,CACnF,GAAG,CAAC,EAAE;YACR,IAAG,GAAG,CAAC,MAAM,IAAI,IAAI,EACrB;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,KAAK,CAAC;aAClC;iBACD;gBACE,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC;gBACxB,IAAI,CAAC,qBAAqB,GAAC,IAAI,CAAC;aACjC;QACD,CAAC,CAAC,CAAC;IACL,CAAC;IASC,WAAW,CAAC,KAAU;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC;QAClC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;QAChC,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC9B,IAAI,YAAY,GAAG,QAAQ,GAAG,SAAS,CAAC;QACxC,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAG,SAAS,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IACD,kBAAkB,CAAC,OAAe,EAAE,OAAe,EAAE,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,OAAe;QAEtH,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAChG,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,EAAE;gBACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,OAAO,CAAC;gBACvC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,UAAU,CAAC,UAAU,CAAC;gBAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,0EAAkB,CAAM,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACrE,IAAI,CAAC,UAAU,CAAC,yBAAyB,EAAE,CAAC;gBAC5C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAyB,CAAC;gBAC3D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;gBAC5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACrB;;gBACI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;QAC/C,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEtB,CAAC,CAAC;IAGN,CAAC;IAID,QAAQ,CAAC,IAAS;QAChB,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE;YACjE,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK;gBACvB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;gBAExB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;QAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAC1D,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5D,CAAC;;oGApRU,0BAA0B;0GAA1B,0BAA0B;kEA4B1B,8DAAO;kEACP,wEAAY;;;;;;QC5CxB,8EACG;QAAA,kFACE;QAAA,iFACC;QAAA,+EACA;QAAA,yEACC;QAAA,0EAAsC;QAAnB,gJAAS,YAAQ,IAAC;QAAC,oEAAS;QAAA,4DAAO;QAAA,4DAAM;QAC5D,4DAAiB;QACrB,4DAAkB;QAClB,yEAA2B;QAC/B,yEACE;QAAA,sHAWI;QACF,qFACI;QAAA,4EACD;QADiB,kMAAuB,0FAAkD,iBAAa,IAA/D;QAAvC,4DACD;QAAA,8HAEU;QACb,4DAAiB;QACrB,4DAAM;QAEN,wHAKM;QACN,qNA2Ec;QAEd,qFACA;QADiE,8JAAQ,uBAAmB,IAAC;QAC7F,4DAAgB;QAChB,4DAAW;;;QAzGH,0DAAU;QAAV,0EAAU;QAaM,0DAAuB;QAAvB,kFAAuB;QACyB,0DAAe;QAAf,+EAAe;QAMjE,0DAAkC;QAAlC,sGAAkC;QAmFzC,0DAAiC;QAAjC,kJAAiC;;6FDlGnC,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;+gBA6BqB,IAAI;kBAAvB,uDAAS;mBAAC,8DAAO;YACO,SAAS;kBAAjC,uDAAS;mBAAC,wEAAY;;;;;;;;;;;;;;AE7CzB;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n//import { TokenService } from '../shared/services/token-service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    let authReq = request;\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n\r\n    if (token != null && token != undefined && token != '') {\r\n      authReq = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token) });//.set('Cache-Control', 'no-cache')});\r\n    }\r\n    return next.handle(authReq).pipe(catchError(err => {\r\n      if ((err && err.status === 401)||err.status===0) {\r\n        localStorage.clear();\r\n       // this.router.navigateByUrl('/login');\r\n        \r\n        err.error = { Message: \"\", status: 0 };\r\n        err.error.status = 401;\r\n        location.reload();\r\n      }\r\n      const error = err.error.message || err.statusText;\r\n      return throwError(err);\r\n    }));\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"loading\" #loading>\r\n    <div>\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { IpopName } from 'src/app/Model/IpopName';\r\nimport { IzoneName } from 'src/app/Model/IzoneName';\r\nimport { PopNameService } from 'src/app/Services/pop-name.service';\r\nimport { ZoneNameService } from 'src/app/Services/zone-name.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-zone-name',\r\n  templateUrl: './zone-name.component.html',\r\n  styleUrls: ['./zone-name.component.css']\r\n})\r\nexport class ZoneNameComponent implements OnInit {\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  loader : boolean= false;\r\n  showNewRow: boolean = false;\r\n  zoneNameModel: IzoneName[] = [];\r\n  zoneName: string = '';\r\n  zoneNameId: number = 0;\r\n  isNameRepeated: boolean = false;\r\n  isNameUpdatedRepeated: boolean = false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['Id', 'name', 'action'];\r\n  dataSource = new MatTableDataSource(this.zoneNameModel);\r\n\r\n  constructor(private dialog: MatDialog,\r\n    public service: ZoneNameService,\r\n    public popNameService: PopNameService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService) { this.titleService.setTitle(\"ZoneName\"); }\r\n\r\n  LoadZoneName() {\r\n    this.service.getZoneName(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n      this.zoneNameModel.push(...response?.data);\r\n      this.zoneNameModel.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.zoneNameModel);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n\r\n    })\r\n  }\r\n  getRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    this.loader = true;\r\n    this.service.getZoneName(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n      this.zoneNameModel = response?.data;\r\n      this.zoneNameModel.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.zoneNameModel);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n    })\r\n    setTimeout(()=>this.loader = false,2000);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    // this.dataSource.filter = this.searchKey.trim().toLowerCase();\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  updateEdit(row: any) {\r\n    this.loader = true;\r\n    let zoneNameEdit: IzoneName =\r\n    {\r\n      id: row.id,\r\n      name: row.name,\r\n    }\r\n    this.service.updateZoneName(zoneNameEdit).subscribe(\r\n      res => {\r\n        setTimeout(() => {\r\n          this.loader = false;\r\n        }, 1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n\r\n        this.LoadZoneName();\r\n        this.zoneName = '';\r\n        this.zoneNameId = 0;\r\n      },\r\n      error => {\r\n        setTimeout(() => {\r\n          this.loader = false;\r\n        }, 0)\r\n        this.notificationService.warn(':: An Error Occured')\r\n      }\r\n\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated = false;\r\n  }\r\n\r\n  onCreateUpdate() {\r\n\r\n    this.loader = true;\r\n\r\n    let zoneNameModel: IzoneName =\r\n    {\r\n      id: this.zoneNameId,\r\n      name: this.zoneName,\r\n    }\r\n    if (this.zoneNameId == 0) {\r\n      this.service.insertZoneName(zoneNameModel).subscribe(\r\n        res => {\r\n          setTimeout(() => {\r\n            this.loader = false;\r\n          }, 1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadZoneName();\r\n          this.zoneName = '';\r\n          this.zoneNameId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(() => {\r\n            this.loader = false;\r\n          }, 0)\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        });\r\n\r\n    }\r\n    else {\r\n      this.service.updateZoneName(zoneNameModel).subscribe(\r\n        res => {\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadZoneName();\r\n          this.zoneName = '';\r\n          this.zoneNameId = 0;\r\n        },\r\n        error => { this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\n    this.show = false\r\n  }\r\n\r\n  onDelete(row: any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.service.deleteZoneName(row.id).subscribe(\r\n          rs => {\r\n            this.notificationService.success(':: Successfully Deleted');\r\n            this.LoadZoneName();\r\n\r\n          },\r\n          error => { this.notificationService.warn(':: An Error Occured') }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  addNew() {\r\n    this.show = true;\r\n  }\r\n  onChecknameIsalreadysign() {\r\n    this.service.nameIsalreadysign(this.zoneName, this.zoneNameId).subscribe(\r\n      res => {\r\n        if (res.status == true) {\r\n          this.isDisabled = false;\r\n          this.isNameRepeated = false;\r\n        } else {\r\n          this.isDisabled = true;\r\n          this.isNameRepeated = true;\r\n        }\r\n      });\r\n  }\r\n  onChecknameIsalreadysignWhenUpdate(row: any) {\r\n    let _zoneName = row.name;\r\n    let _zoneNameId = row.id;\r\n    this.service.nameIsalreadysign(_zoneName, _zoneNameId).subscribe(\r\n      res => {\r\n        if (res.status == true) {\r\n          this.isDisabled = false;\r\n          this.isNameUpdatedRepeated = false;\r\n        } else {\r\n          this.isDisabled = true;\r\n          this.isNameUpdatedRepeated = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  //this section for pagination \r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  pagesizedef: number = 25;\r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  simflag = true;\r\n  adminflag = true;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    this.loader = true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    \r\n    this.service.getZoneName(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n      if (res.status == true) {\r\n        this.loader = false;\r\n        this.zoneNameModel.length = cursize;\r\n        this.zoneNameModel.push(...res?.data);\r\n        this.zoneNameModel.length = res?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource<any>(this.zoneNameModel);\r\n        this.dataSource._updateChangeSubscription();\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n        this.loader = false;\r\n      }\r\n      else this.notificationService.warn(res.error)\r\n    }, err => {\r\n      this.notificationService.warn(\"! Fail\");\r\n      this.loader = false;\r\n    })\r\n  }\r\n  lastcol: string = 'Id';\r\n  lastdir: string = 'asc';\r\n\r\n  sortData(sort: any) {\r\n    if (this.pIn != 0)\r\n      window.location.reload();\r\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n      if (this.lastdir == 'asc')\r\n        sort.direction = 'desc';\r\n      else\r\n        sort.direction = 'asc';\r\n    }\r\n    this.lastcol = sort.active; this.lastdir = sort.direction;\r\n    var c = this.pageIn;\r\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n  }\r\n}\r\n","<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n     Zone Name\r\n     <div style=\"float: right;\">\r\n      <span class=\"add\" matTooltip=\"Add new\" (click)=\"addNew()\">+ Add New</span></div>\r\n      </mat-card-title>\r\n\r\n  </mat-card-header>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"search-div\" fxLayout=\"row\">\r\n    <div *ngIf=\"show\">\r\n    <mat-form-field class=\"example-full-width mr-2\">\r\n      <mat-label>ZoneName</mat-label>\r\n      <input type=\"text\" name=\"name\" matInput [(ngModel)]=\"zoneName\"   (keyup)=\"onChecknameIsalreadysign()\">\r\n      <input type=\"hidden\" name=\"id\" formControlName=\"id\" [(ngModel)]=\"zoneNameId\">\r\n      <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n    </mat-form-field>\r\n    <button mat-raised-button (click)=\"onCreateUpdate()\" class=\"search\"\r\n      [disabled]=\"!zoneName.length || isDisabled\">\r\n      Save\r\n    </button>\r\n  </div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n      <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\r\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n    <span>Loading Data ...</span>\r\n    <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n  </mat-progress-bar>\r\n    \r\n  </div>\r\n  <ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n\r\n<mat-table [dataSource]=\"dataSource\" #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear>\r\n\r\n\r\n\r\n        <ng-container matColumnDef=\"Id\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\" data-label=\"Id\"> {{element.id}} </mat-cell>\r\n        </ng-container>\r\n\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\" data-label=\"name\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.name|| 'N/A'}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"Name\" name=\"name\" [(ngModel)]=\"element.name\"  (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n      \r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              <button mat-button class=\"text-success font-weight-bolder\" (click)=\"editROw(row)\">\r\n                Edit\r\n              </button>\r\n              <span class=\"mx-2\">|</span>\r\n              <button mat-button class=\"font-weight-bolder\" color=\"warn\" (click)=\"onDelete(row)\">\r\n                Delete\r\n\r\n              </button>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <button class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\" (click)=\"updateEdit(row)\">\r\n                Update\r\n              </button>\r\n\r\n              <button class=\"btn-danger btn-sm\" (click)=\"cancelEdit()\">\r\n                Cancel\r\n              </button>\r\n            </ng-container>\r\n\r\n          </mat-cell>\r\n\r\n\r\n\r\n        </ng-container>\r\n\r\n\r\n\r\n\r\n        <ng-container matColumnDef=\"noData\">\r\n          <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n            No Data ...\r\n          </mat-footer-cell>\r\n\r\n        </ng-container>\r\n\r\n\r\n\r\n        <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n          [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n\r\n\r\n      </mat-table>\r\n      <!-- end test -->\r\n    </div>\r\n  </ng-template>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n  </mat-paginator>\r\n</mat-card>\r\n  \r\n<!-- <app-loader *ngIf=\"loading\">\r\n</app-loader> -->","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountService } from 'src/app/Services/account.service';\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n@Output() public sidenavToggle = new EventEmitter();\nconstructor( private router :Router,private accountService : AccountService,private notificationService:NotificationMsgService) { }\n\nngOnInit(): void {\n\n}\n\nlogOut(){\n  localStorage.clear();\n  this.accountService.logout().subscribe(res=>{\n    this.router.navigateByUrl('/login');\n    \n  } \n  \n  ,error=>{this.notificationService.warn('occured an error ')}\n  );\n\n}\npublic onToggleSidenav=()=> {\nthis.sidenavToggle.emit();\n}\n\n}\n","<mat-toolbar>\r\n    <div>\r\n        <a routerLink=\"#\">\r\n            <img src=\"../../../assets/image/f.png\" height=\"40\" width=\"60\"/>\r\n            <!-- <img src=\"../../../assets/image/s3.png\" height=\"40\" width=\"160\"/> -->\r\n            <span class=\"slogan\">Field Operation Report</span>\r\n            \r\n        </a>\r\n    </div>\r\n    <div>\r\n        <button mat-icon-button (click)=\"onToggleSidenav()\">\r\n            <mat-icon class=\"x\">menu</mat-icon>\r\n        </button>\r\n    </div>\r\n   \r\n   \r\n    <div fxFlex fxLayout fxLayoutAlign=\"end\" >\r\n        <ul fxLayout fxLayoutGap=\"15px\" class=\"navigation.items\">\r\n            <!-- <li>\r\n                <button mat-icon-button  [matMenuTriggerFor]=\"notification\">\r\n                    <mat-icon matBadge=\"3\" matBadgeColor=\"warn\">notifications_active</mat-icon>\r\n               </button>\r\n               \r\n               <mat-menu   class=\"note\" #notification=\"matMenu\">\r\n                 \r\n                   <button  mat-menu-item title=\"\">\r\n                       <mat-icon>notifications</mat-icon> note 1 \r\n                    </button>\r\n                    <mat-divider></mat-divider>\r\n                    <button  mat-menu-item title=\"\">\r\n                        <mat-icon>notifications</mat-icon> note 2 \r\n                     </button>\r\n                     <mat-divider></mat-divider>\r\n                     <button  mat-menu-item title=\"\">\r\n                        <mat-icon>notifications</mat-icon> note 3 \r\n                     </button>\r\n                  \r\n                 \r\n               </mat-menu> \r\n            </li>\r\n            -->\r\n            <li>\r\n                <button mat-button (click)=\"logOut()\">\r\n                   Sign Out  <mat-icon class=\"ml-1\">exit_to_app</mat-icon>\r\n                    <!-- <span>username</span> \r\n                    <mat-icon> person_outline </mat-icon> -->\r\n                </button>\r\n                <!-- <mat-menu #menu=\"matMenu\">\r\n                    <button mat-menu-item  >\r\n                        <mat-icon>exit_to_app</mat-icon>Signout\r\n                    </button>\r\n                </mat-menu> -->\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { IpopName } from 'src/app/Model/IpopName';\r\nimport { IzoneName } from 'src/app/Model/IzoneName';\r\nimport { PopNameService } from 'src/app/Services/pop-name.service';\r\nimport { ZoneNameService } from 'src/app/Services/zone-name.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-pop-name',\r\n  templateUrl: './pop-name.component.html',\r\n  styleUrls: ['./pop-name.component.css']\r\n})\r\nexport class PopNameComponent implements OnInit {\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  loader:boolean=false;\r\n  showNewRow: boolean = false;\r\n  popNameModel: IpopName[] = [];\r\n  popName: string = '';\r\n  popNameId: number = 0;\r\n zoneNames: IzoneName[] = [];\r\n zoneNameId: number = 0;\r\n isNameRepeated : boolean =false;\r\n pageNumber = 1;\r\n pageSize = 25;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  constructor(private dialog: MatDialog,\r\n    public service: PopNameService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    public zoneNameService: ZoneNameService,\r\n    private notificationService: NotificationMsgService) \r\n    { this.titleService.setTitle(\"PopName\"); }\r\n\r\n    @ViewChild(MatSort) sort?: MatSort;\r\n    @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n    displayedColumns: string[] = ['id', 'name', 'zoneName','action'];\r\n    dataSource = new MatTableDataSource(this.popNameModel);\r\n\r\n    \r\n  LoadPopName() {\r\n    this.service.getPopName(this.pageNumber, this.pageSize ,'',this.colname,this.coldir).subscribe(response => {\r\n      this.popNameModel.push(...response?.data);\r\n      this.popNameModel.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.popNameModel);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n\r\n      this.zoneNameService.getRequests().subscribe(res => {\r\n        this.zoneNames = res  as IzoneName[];\r\n\r\n      });\r\n\r\n    })\r\n}\r\n\r\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  this.loader = true;\r\n  this.service.getPopName(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n    this.popNameModel = response?.data;\r\n    this.popNameModel.length = response?.pagination.totalCount;\r\n    this.dataSource = new MatTableDataSource<any>(this.popNameModel);\r\n    this.dataSource._updateChangeSubscription();\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  })\r\n  this.zoneNameService.getRequests().subscribe(res => {\r\n    this.zoneNames = res  as IzoneName[];\r\n  });\r\n  setTimeout(()=> this.loader =false,2000)\r\n}\r\n\r\n\r\n\r\n    // datatableRefresh(): void {\r\n    //   this.dataSource.sort = this.sort as MatSort;\r\n    //   this.service.getRequests().subscribe(res => {\r\n    //     this.popNameModel = res as IpopName[];\r\n    //     this.dataSource = new MatTableDataSource(this.popNameModel);\r\n    //     this.dataSource.paginator = this.paginator as MatPaginator;\r\n    //     this.dataSource.sort = this.sort as MatSort;\r\n  \r\n    //   });\r\n\r\n    //   this.zoneNameService.getRequests().subscribe(res => {\r\n    //     this.zoneNames = res  as IzoneName[];\r\n    //   });\r\n    // }\r\n  ngOnInit(): void \r\n  {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let popNameModel: IpopName =\r\n    {\r\n      id: this.popNameId,\r\n      name: this.popName,\r\n      zoneNameId:Number(this.zoneNameId) ,\r\n    }\r\n    if (this.popNameId == 0) {\r\n      this.service.insertPopName(popNameModel).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadPopName();\r\n          this.popName = '';\r\n          this.popNameId = 0;\r\n          this.zoneNameId =0;\r\n        }\r\n        , error => {\r\n\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updatePopName(popNameModel).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadPopName();\r\n          this.popName = '';\r\n          this.popNameId = 0;\r\n          this.zoneNameId =0;\r\n        },\r\n        error => { \r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\n    this.show=false;\r\n\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deletePopName(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');\r\n          window.location.reload();\r\n\r\n      \r\n         \r\n        },\r\n        error=>{this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    } \r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let popNameEdit: IpopName =\r\n    {\r\n      id: row.id,\r\n      name: row.name,\r\n      zoneNameId: Number(row.zoneNameId),\r\n    }\r\n    this.service.updatePopName(popNameEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n        this.LoadPopName();\r\n        this.popName = '';\r\n        this.popNameId = 0;\r\n      },\r\n      error => { \r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n        this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated=false;\r\n\r\n  }\r\n  addNew(){\r\n    this.show=true\r\n  }\r\n  onChecknameIsalreadysign()\r\n  {\r\n    this.service.nameIsalreadysign(this.popName , this.popNameId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n  onChecknameIsalreadysignWhenUpdate(row : any)\r\n  {\r\n   let _popName = row.name;\r\n   let _popNameId = row.id;\r\n    this.service.nameIsalreadysign(_popName , _popNameId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameUpdatedRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameUpdatedRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n   //this section for pagination \r\n   pageIn = 0;\r\n   previousSizedef = 25;\r\n   pagesizedef: number = 25;\r\n   public pIn: number = 0;\r\n   pageChanged(event: any) {\r\n     this.loader = true;\r\n     this.pIn = event.pageIndex;\r\n     this.pageIn = event.pageIndex;\r\n     this.pagesizedef = event.pageSize;\r\n     let pageIndex = event.pageIndex;\r\n     let pageSize = event.pageSize;\r\n     let previousSize = pageSize * pageIndex;\r\n     this.previousSizedef = previousSize;\r\n     this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n   }\r\n   getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    \r\n       this.service.getPopName(pageNum, pageSize,search,sortColumn,sortDir).subscribe(res => {\r\n         if (res.status == true) {\r\n          \r\n           this.popNameModel.length = cursize;\r\n           this.popNameModel.push(...res?.data);\r\n           this.popNameModel.length = res?.pagination.totalCount;\r\n           this.dataSource = new MatTableDataSource<any>(this.popNameModel);\r\n           this.dataSource._updateChangeSubscription();\r\n           this.dataSource.paginator = this.paginator as MatPaginator;\r\n           this.loader = false;\r\n         }\r\n         else this.notificationService.warn(res.error)\r\n       }, err => {\r\n         this.notificationService.warn(\"! Fail\");\r\n         this.loader = false;\r\n \r\n       })\r\n     \r\n \r\n   }\r\n   lastcol: string = 'Id';\r\n   lastdir: string = 'asc';\r\n \r\n   sortData(sort: any) {\r\n     if (this.pIn != 0)\r\n       window.location.reload();\r\n     if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n       if (this.lastdir == 'asc')\r\n         sort.direction = 'desc';\r\n       else\r\n         sort.direction = 'asc';\r\n     }\r\n     this.lastcol = sort.active; this.lastdir = sort.direction;\r\n     var c = this.pageIn;\r\n     this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n   }\r\n \r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n       Pop Name\r\n       <div style=\"float: right;\">\r\n        <span class=\"add\"  (click)=\"addNew()\">+ Add New</span></div>\r\n       </mat-card-title>\r\n\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label>PopName</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"popName\" (keyup)=\"onChecknameIsalreadysign()\">\r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"popNameId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n</mat-form-field>\r\n<mat-form-field>\r\n  <mat-select [(ngModel)]=\"zoneNameId\" placeholder=\"Zone Name*\">\r\n    <ng-container *ngFor=\"let element of zoneNames\">\r\n      <mat-option value=\"{{element.id}}\">{{element.name}}</mat-option>\r\n    </ng-container>\r\n  </mat-select>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!popName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n      <mat-table [dataSource]=\"dataSource\" #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear>\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled\">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\" (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n    <ng-container matColumnDef=\"zoneName\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header><b> Zone Name </b> \r\n      </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let element\" data-label=\"zoneName\">\r\n        {{element.zoneName.name|| 'N/A'}}\r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n               \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                  \r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\" (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons >\r\n</mat-paginator>\r\n</mat-card>\r\n\r\n\r\n\r\n<!--   \r\n<app-loader *ngIf=\"loading\">\r\n</app-loader> -->\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { IremedyAction } from 'src/app/Model/IremedyAction';\r\nimport { RemedyActionService } from 'src/app/Services/remedy-action.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-remedy-action',\r\n  templateUrl: './remedy-action.component.html',\r\n  styleUrls: ['./remedy-action.component.css']\r\n})\r\nexport class RemedyActionComponent implements OnInit {\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n \r\n  loader=false;\r\n  showNewRow: boolean = false;\r\n  remedyAction: IremedyAction[] = [];\r\n  remedyActionName: string = '';\r\n  remedyActionId: number = 0;\r\n  isNameRepeated : boolean =false;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n  constructor(private dialog: MatDialog,\r\n    public service: RemedyActionService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService) {\r\n    this.titleService.setTitle(\"RemedyAction\");\r\n  }\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['id', 'name','action'];\r\n  dataSource = new MatTableDataSource(this.remedyAction);\r\n\r\n  LoadRemedyAction() {\r\n    this.service.getRemedyAction(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n      this.remedyAction.push(...response?.data);\r\n      this.remedyAction.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.remedyAction);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n\r\n    })\r\n}\r\n\r\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  //this.loader = true;\r\n  this.loader=true;\r\n  this.service.getRemedyAction(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n    this.remedyAction = response?.data;\r\n    this.remedyAction.length = response?.pagination.totalCount;\r\n    this.dataSource = new MatTableDataSource<any>(this.remedyAction);\r\n    this.dataSource._updateChangeSubscription();\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  })\r\n  setTimeout(()=> this.loader = false,2000)\r\n}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let remedyAction: IremedyAction =\r\n    {\r\n      id: this.remedyActionId,\r\n      name: this.remedyActionName,\r\n    }\r\n    if (this.remedyActionId == 0) {\r\n      this.service.insertRemedyAction(remedyAction).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadRemedyAction();\r\n          this.remedyActionName = '';\r\n          this.remedyActionId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updateRemedyAction(remedyAction).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadRemedyAction();\r\n          this.remedyActionName = '';\r\n          this.remedyActionId = 0;\r\n        },\r\n        error => { \r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\n     this.show=false;\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deleteRemedyAction(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');\r\n          this.LoadRemedyAction();\r\n         \r\n        },\r\n        error=>{this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    } \r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let remedyActionEdit: IremedyAction =\r\n    {\r\n      id: row.id,\r\n      name: row.name\r\n    }\r\n    this.service.updateRemedyAction(remedyActionEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n        this.LoadRemedyAction();\r\n        this.remedyActionName = '';\r\n        this.remedyActionId = 0;\r\n      },\r\n      error => { \r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n        this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated=false;  }\r\n\r\n  addNew(){\r\n    this.show=true;\r\n  }\r\n\r\n  onChecknameIsalreadysign()\r\n  {\r\n    this.service.nameIsalreadysign(this.remedyActionName , this.remedyActionId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n  onChecknameIsalreadysignWhenUpdate(row : any)\r\n  {\r\n   let _operatorName = row.name;\r\n   let _operatorId = row.id;\r\n    this.service.nameIsalreadysign(_operatorName , _operatorId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameUpdatedRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameUpdatedRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n    //this section for pagination \r\n    pageIn = 0;\r\n    previousSizedef = 25;\r\n    pagesizedef: number = 25;\r\n    public pIn: number = 0;\r\n    pageChanged(event: any) {\r\n      //this.loader = true;\r\n      this.loader=true;\r\n      this.pIn = event.pageIndex;\r\n      this.pageIn = event.pageIndex;\r\n      this.pagesizedef = event.pageSize;\r\n      let pageIndex = event.pageIndex;\r\n      let pageSize = event.pageSize;\r\n      let previousSize = pageSize * pageIndex;\r\n      this.previousSizedef = previousSize;\r\n      this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n    }\r\n    getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n     // this.loader = false;\r\n        this.service.getRemedyAction(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n          if (res.status == true) {\r\n            this.loader = false;\r\n            this.remedyAction.length = cursize;\r\n            this.remedyAction.push(...res?.data);\r\n            this.remedyAction.length = res?.pagination.totalCount;\r\n            this.dataSource = new MatTableDataSource<any>(this.remedyAction);\r\n            this.dataSource._updateChangeSubscription();\r\n            this.dataSource.paginator = this.paginator as MatPaginator;\r\n            this.loader = false;\r\n          }\r\n          else this.notificationService.warn(res.error)\r\n        }, err => {\r\n          this.notificationService.warn(\"! Fail\");\r\n          //this.loader = false;\r\n          this.loader = false;\r\n  \r\n        })\r\n  \r\n    }\r\n    lastcol: string = 'Id';\r\n    lastdir: string = 'asc';\r\n  \r\n    sortData(sort: any) {\r\n      if (this.pIn != 0)\r\n        window.location.reload();\r\n      if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n        if (this.lastdir == 'asc')\r\n          sort.direction = 'desc';\r\n        else\r\n          sort.direction = 'asc';\r\n      }\r\n      this.lastcol = sort.active; this.lastdir = sort.direction;\r\n      var c = this.pageIn;\r\n      this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n    }\r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n       Remedy Action\r\n       <div style=\"float: right;\">\r\n        <span class=\"add\" (click)=\"addNew()\">+ Add New</span></div>\r\n      \r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label>Remedy Action Name</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"remedyActionName\" (keyup)=\"onChecknameIsalreadysign()\"> \r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"remedyActionId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!remedyActionName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"table-striped\" [dataSource]=\"dataSource\"   #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear >\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled\">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\" (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n               \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                  \r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\"  (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n</mat-paginator>\r\n</mat-card>\r\n  \r\n<!-- <app-loader *ngIf=\"loading\">\r\n</app-loader> -->\r\n\r\n\r\n\r\n\r\n\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Ioperator } from '../Model/Ioperator';\nimport { PaginationService } from './pagination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperatorService {\n  private headers = new HttpHeaders();\n  url =  \"http://172.29.29.8:2021/api/Operator\";\n  url2=\"https://localhost:44375/api/Operator\" ;\n url3 =  \"http://172.29.29.8:2031/api/Operator\";\n  //url3 =  \"http://172.29.29.8:5050/api/Operator\";\n  constructor(private http: HttpClient , private paginationService: PaginationService\n    ) {\n      this.headers = this.headers.set('content-type', 'application/json');\n      this.headers = this.headers.set('Accept', 'application/json');\n    }\n    getOperator(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\n      let params = new HttpParams();\n      if(PageNumber !== null && PageSize !== null ){\n        params = params.append('pageNumber' , PageNumber.toString());\n        params = params.append('pageSize' , PageSize.toString());\n        params = params.append('searchValue' , searchValue.toString());\n        params = params.append('sortcolumn' , sortcolumn.toString());\n        params = params.append('sortcolumndir' , sortcolumndir.toString());\n      }\n      return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n        map(response => {\n           return response.body ;\n        })\n      )\n    }\n\n  // getRequests(): Observable<Ioperator[]>{\n  //   return this.http.get<Ioperator[]>(`${this.url}`);\n  // }\n  \n  insertOperator(data:Ioperator ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/AddOperator`,data);  \n  }\n  updateOperator(data:Ioperator ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/UpdateOperator`,data);  \n  }\n\n  deleteOperator(id:number):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/DeleteOperator`,id) ; \n  }\n  nameIsalreadysign(name:string,id:number ):Observable<any>\n  {\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Component, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Iloginview } from 'src/app/Model/Iloginview';\nimport { Iuser } from 'src/app/Model/Iuser';\nimport { AccountService } from 'src/app/Services/account.service';\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required)\n\n  });\n\n\n  constructor(private route: ActivatedRoute, private router: Router,\n    private titleService: Title, public accountService: AccountService, public notificationService: NotificationMsgService\n\n  ) {\n    this.titleService.setTitle(\"Field Operation Report | Login\");\n    let token = localStorage.getItem(\"token\");\n    if (token != \"undefined\" || token != null || token != \"\") {\n      this.router.navigateByUrl('')\n\n    }\n\n  }\n  user = <Iuser>{};\n  error: any;\n  ngOnInit() {\n\n  }\n\n  onSubmit() {\n   \n    let loginview: Iloginview =\n    {\n      userName: this.form.controls.username.value.trim(),\n      password: this.form.controls.password.value,\n    }\n\n    this.accountService.login(loginview).subscribe(res => {\n      this.user = res;\n      if ((this.user.token != \"undefined\" || this.user.token != null || this.user.token != \"\") && this.user.status != false) {\n        localStorage.setItem('token', this.user.token);\n        localStorage.setItem('userName', this.user.userName);\n        localStorage.setItem('userGroup', this.user.userGroup);\n        this.router.navigateByUrl('home');\n      }\n      if (this.user.token == \"undefined\" || this.user.userName == \"undefined\" || this.user.token == null) {\n        this.notificationService.warn('Invalid UserName or Password');\n\n      }\n      else if (this.user.status == false) {\n        this.notificationService.warn('Invalid UserName or Password')\n      }\n\n    }\n      , error => { this.notificationService.warn('Invalid UserName or Password') }\n    );\n\n\n\n  }\n\n}\n","<div class=\"content-body\">\r\n  <mat-card>\r\n      <mat-card-content>\r\n          <div class=\"header\">\r\n            <!-- <img src=\"../../../assets/image/ss1.png\"  height=\"100\" width=\"100%\"/> -->\r\n            <img src=\"../../../assets/image/f.png\" class=\"d-block mx-auto mb-2\" height=\"80\" width=\"100\"/>\r\n            <span class=\"slogan\">Field Operation Report</span>\r\n          </div>\r\n           <h2>Join Now !!</h2>\r\n          <form (ngSubmit)=\"onSubmit()\" name=\"form\" [formGroup]=\"form\">\r\n              <!-- <div class=\"email-input form-input\"> -->\r\n                  <!--     Email       -->\r\n                  <mat-form-field class=\"full-width\" >\r\n                      <mat-label>User Name</mat-label>\r\n                      <input formControlName=\"username\" matInput required>\r\n                      <button mat-icon-button matSuffix >\r\n                        <mat-icon>account_circle</mat-icon> \r\n                      </button>\r\n                     \r\n                      \r\n                      <mat-error *ngIf=\"form.controls['username'].errors?.required\">\r\n                       Required UserName  \r\n                      </mat-error>\r\n                    \r\n                  </mat-form-field>\r\n              <!-- </div>\r\n              <div class=\"form-input\"> -->\r\n                  <!-- <span class=\"aLink\">Forgot Password ?</span> -->\r\n              \r\n                   <!--    Password      -->\r\n                   <mat-form-field class=\"full-width\" >\r\n                      <mat-label >Password</mat-label>\r\n                      <input formControlName=\"password\" matInput type=\"password\" required>\r\n                       <button mat-icon-button matSuffix >\r\n                          <mat-icon>https</mat-icon> \r\n                        </button>\r\n                      <!-- <button mat-icon-button matSuffix (click)=\"hide =!hide\" [attr.aria-label]=\"'Hide Password'\" [attr.aria-pressed]=\"hide\">\r\n                        <mat-icon>{{hide ? \"visibility_off\" : \"visibility\"}}</mat-icon>       \r\n                      </button> -->\r\n                  \r\n                      <mat-error *ngIf=\"form.controls['password'].errors?.required\">Required password.</mat-error>\r\n                    \r\n                  </mat-form-field> \r\n\r\n              <!-- </div> -->\r\n              <button mat-flat-button class=\"login\">Sign In</button>\r\n          </form>\r\n     \r\n      </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../modules/material/material.module';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HeaderComponent } from '../navigation/header/header.component';\r\nimport { LayoutComponent } from './layout.component';\r\nimport { SidebarComponent } from '../navigation/sidebar/sidebar.component';\r\nimport { FooteerComponent } from '../navigation/footeer/footeer.component';\r\nimport { DashboardComponent } from 'src/app/components/dashboard/dashboard.component';\r\nimport { TestComponent } from 'src/app/components/test/test.component';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { DeleteComponent } from '../../msg/delete/delete.component';\r\nimport { DeleteServiceService } from '../../services/delete-service.service';\r\nimport { EmpService } from '../../services/emp.service';\r\nimport { NotificationMsgService } from '../../services/notification-msg.service';\r\nimport { OperatorComponent } from 'src/app/components/operator/operator.component';\r\nimport { PopNameComponent } from 'src/app/components/pop-name/pop-name.component';\r\nimport { RemedyActionComponent } from 'src/app/components/remedy-action/remedy-action.component';\r\nimport { StatusComponent } from 'src/app/components/status/status.component';\r\nimport { TechNameComponent } from 'src/app/components/tech-name/tech-name.component';\r\nimport { TransmissionMediaComponent } from 'src/app/components/transmission-media/transmission-media.component';\r\nimport { PaginationService } from 'src/app/Services/pagination.service';\r\nimport { DailyOperationComponent } from 'src/app/components/daily-operation/daily-operation.component';\r\nimport { AddDailyOperationComponent } from 'src/app/components/add-daily-operation/add-daily-operation.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatInputModule } from '@angular/material/input';\r\n//import { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from 'ngx-mat-datetime-picker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { EditDailyOpertionComponent } from 'src/app/components/edit-daily-opertion/edit-daily-opertion.component';\r\nimport { ZoneNameComponent } from 'src/app/components/zone-name/zone-name.component';\r\nimport { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\r\nimport { NgxMatMomentModule } from '@angular-material-components/moment-adapter';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { LoaderComponent } from '../loader/loader.component';\r\nimport { LogsComponent } from 'src/app/components/logs/logs.component';\r\n\r\nimport { PopNameAbbreviationsComponent } from 'src/app/components/pop-name-abbreviations/pop-name-abbreviations.component';\r\nimport { SlaFormatPipe } from 'src/app/components/daily-operation/sla-format.pipe';\r\nimport { NgSelect2Module } from 'ng-select2';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LayoutComponent,\r\n    HeaderComponent,\r\n    SidebarComponent,\r\n    FooteerComponent,\r\n    DashboardComponent,\r\n    TestComponent,\r\n    DeleteComponent,\r\n    OperatorComponent,\r\n    PopNameComponent,\r\n    RemedyActionComponent,\r\n    StatusComponent,\r\n    TechNameComponent,\r\n    TransmissionMediaComponent,\r\n    DailyOperationComponent,\r\n    AddDailyOperationComponent,\r\n    EditDailyOpertionComponent,\r\n    ZoneNameComponent,\r\n    LoaderComponent,\r\n    LogsComponent,\r\n    PopNameAbbreviationsComponent,\r\n    SlaFormatPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ScrollingModule,\r\n    BrowserModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    NgxMaterialTimepickerModule,\r\n    ChartsModule,\r\n    NgxMatDatetimePickerModule,\r\n    NgxMatTimepickerModule,\r\n    NgxMatMomentModule,\r\n    NgSelect2Module\r\n\r\n  ],\r\n  providers: [Title, DeleteServiceService, DeleteServiceService, EmpService, NotificationMsgService, PaginationService]\r\n})\r\nexport class LayoutModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'slaFormat'\n})\nexport class SlaFormatPipe implements PipeTransform {\n  finalShow : any[] = [] ;\n\n \n  transform(value: string): string {\n    if(value != null ){\n      let sla : string[] = value.split(':' , 3);\n      let days = sla[0] ;\n      let hours = sla[1];\n      let minutes = sla[2];\n      if(days != \"00\"){\n        let _days = days.concat(\"d\");\n        this.finalShow.push(_days);\n      }if(hours != \"00\"){\n        let _hours = hours.concat(\"h\");\n        this.finalShow.push(_hours);\n      }\n      if(minutes != \"00\" || minutes == \"00\"){\n        minutes = \"\";\n        // let _minutes = minutes.concat(\"m\");\n        this.finalShow.push(minutes);\n      }\n      return this.finalShow.join();\n    }\n    else{\n      return \" \";\n    }\n   \n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n  userRole = localStorage.getItem('userGroup');\n  userName = localStorage.getItem('userName');\n  constructor(private titleService: Title) {\n    //this.titleService.setTitle(\"sidnave\");\n  \n   }\n\n  ngOnInit(): void {\n  }\n\n\n \n \n  isExpanded = true;\n  showSubmenu: boolean = false;\n  isShowing = false;\n  showSubSubMenu: boolean = false;\n\n  \n\n}\n","\r\n<div fxlayout=\"column\" fxlayoutalign=\"center center\" class=\"user-block py-3\" style=\"flex-direction: column; box-sizing: border-box; display: flex; place-content: center; align-items: center;\">\r\n    <img src=\"../../../../../assets/image/user2.png\" alt=\"user-image\">\r\n    <h2 class=\"mt-2 mb-0 ng-star-inserted\">{{userName}}</h2>\r\n    <!-- <p class=\"secondary-text-color ng-star-inserted\">user role</p> -->\r\n</div>\r\n<mat-divider></mat-divider>\r\n<mat-list>\r\n\r\n\r\n    <a mat-list-item routerLink=\"./\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">\r\n        <mat-icon>home</mat-icon>\r\n        <span class=\"nav-caption\"> Home</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"./dailey\" routerLinkActive=\"active\" >\r\n        <mat-icon>today</mat-icon>\r\n        <span class=\"nav-caption\"> Daily</span>\r\n    </a>\r\n    <a mat-list-item routerLink=\"./popNameAbbreviations\" routerLinkActive=\"active\" >\r\n        <mat-icon>list</mat-icon>\r\n        <span class=\"nav-caption\"> Pop Name Abbreviations</span>\r\n    </a>\r\n    <!-- <a mat-list-item routerLink=\"./test\" routerLinkActive=\"active\">\r\n        <mat-icon>engineering</mat-icon>\r\n        <span class=\"nav-caption\">Form</span>\r\n    </a> -->\r\n\r\n   \r\n \r\n    <a mat-list-item   (click)=\"showSubmenu = !showSubmenu;\" class=\"parent\" *ngIf=\"userRole=='FieldOperationReport_Admin'\">\r\n        <mat-icon>settings</mat-icon>\r\n        <span class=\" full-width  nav-caption\" *ngIf=\"isExpanded || isShowing\">Settings</span>\r\n\r\n        <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubmenu}\" *ngIf=\"isExpanded || isShowing\">expand_more\r\n        </mat-icon>\r\n    </a>\r\n    <div class=\"submenu\" [ngClass]=\"{'expanded' : showSubmenu}\" *ngIf=\"isShowing || isExpanded\">\r\n\r\n        <a mat-list-item routerLink=\"./operator\" routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon> \r\n            <span class=\"nav-caption\">Operator</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./popName\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Pop Name</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./zoneName\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Zone Name</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./transmissionMedia\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Transmission Media</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./techName\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Tech Name</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./status\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Status</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./remedyAction\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Remedy Action</span>\r\n        </a>\r\n        <a mat-list-item routerLink=\"./logs\"  routerLinkActive=\"active\">\r\n            <mat-icon>label_important</mat-icon>\r\n            <span class=\"nav-caption\">Logs</span>\r\n        </a>\r\n    </div>\r\n\r\n</mat-list>","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar,MatSnackBarConfig,MatSnackBarHorizontalPosition,MatSnackBarVerticalPosition  } from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationMsgService {\r\n  horizontalPosition:MatSnackBarHorizontalPosition ='right';\r\n  verticalPosition:MatSnackBarVerticalPosition='top';\r\n  constructor(public snackBar: MatSnackBar) { }\r\n\r\n \r\n  config: MatSnackBarConfig = {\r\n    duration:2000,\r\n    horizontalPosition:this.horizontalPosition,\r\n    verticalPosition:this.verticalPosition\r\n  }\r\n\r\n  success(msg:string) {\r\n    this.config['panelClass'] = ['notification', 'success'];\r\n    this.snackBar.open(msg,'',this.config);\r\n  }\r\n\r\n  warn(msg:string) {\r\n    this.config['panelClass'] = ['notification', 'warn'];\r\n    this.snackBar.open(msg, '', this.config);\r\n  }\r\n\r\n\r\n  \r\n}\r\n\r\n \r\n \r\n\r\n \r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footeer',\n  templateUrl: './footeer.component.html',\n  styleUrls: ['./footeer.component.css']\n})\nexport class FooteerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n    <p>Copyright © 2021 Field Operation Report   |   All Rights Reserved. </p>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../../modules/material/material.module';\n\n\n\n@NgModule({\n  declarations: [ LoginComponent],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule \n    \n  ],\n  providers:[\n   Title\n  ],\n})\nexport class LoginModule { }\n","import { Injectable } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { PaginationModel } from '../Model/pagination.model';\r\n\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n    private paginationModel: PaginationModel;\r\n\r\n    get page(): number {\r\n        return this.paginationModel.pageIndex;\r\n    }\r\n\r\n    get selectItemsPerPage(): number[] {\r\n        return this.paginationModel.selectItemsPerPage;\r\n    }\r\n\r\n    get pageCount(): number {\r\n        return this.paginationModel.pageSize;\r\n    }\r\n\r\n    constructor() {\r\n        this.paginationModel = new PaginationModel();\r\n    }\r\n\r\n    change(pageEvent: PageEvent) {\r\n        this.paginationModel.pageIndex = pageEvent.pageIndex + 1;\r\n        this.paginationModel.pageSize = pageEvent.pageSize;\r\n        this.paginationModel.allItemsLength = pageEvent.length;\r\n    }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Istatus } from '../Model/Istatus';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatusService {\r\n  url =  \"http://172.29.29.8:2021/api/Status\";\r\n  url2=\"https://localhost:44375/api/Status\" ;\r\n  url3 =  \"http://172.29.29.8:2031/api/Status\";\r\n  //url3 =  \"http://172.29.29.8:5050/api/Status\";\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getStatus(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\r\n    let params = new HttpParams();\r\n    if(PageNumber !== null && PageSize !== null ){\r\n      params = params.append('pageNumber' , PageNumber.toString());\r\n      params = params.append('pageSize' , PageSize.toString());\r\n      params = params.append('searchValue' , searchValue.toString());\r\n      params = params.append('sortcolumn' , sortcolumn.toString());\r\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\r\n    }\r\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\r\n      map(response => {\r\n         return response.body ;\r\n      })\r\n    )\r\n  }\r\n  getRequests(): Observable<Istatus[]>{\r\n    return this.http.get<Istatus[]>(`${this.url3}`);\r\n  }\r\n  \r\n  insertStatus(data:Istatus ):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/AddStatus`,data);  \r\n  }\r\n  updateStatus(data:Istatus ):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/UpdateStatus`,data);  \r\n  }\r\n\r\n  deleteStatus(id:number):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/DeleteStatus`,id) ; \r\n  }\r\n\r\n  nameIsalreadysign(name:string,id:number ):Observable<any>\r\n  {\r\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Router,\r\n    Route\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n    constructor(private _router: Router) { }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    \r\n     let token = localStorage.getItem(\"token\");\r\n     if (token == \"undefined\" || token == null || token == \"\") {\r\n         this._router.navigateByUrl('/login')\r\n       return false;\r\n     }  \r\n      return true;\r\n   }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IPopNameAbbreviations } from 'src/app/Model/IPopNameAbbreviations';\r\nimport { PopNameAbbreviationsService } from 'src/app/Services/pop-name-abbreviations.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-pop-name-abbreviations',\r\n  templateUrl: './pop-name-abbreviations.component.html',\r\n  styleUrls: ['./pop-name-abbreviations.component.css']\r\n})\r\nexport class PopNameAbbreviationsComponent implements OnInit {\r\nloader=false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  searchKey: string = '';\r\n  PopNameAbbreviations: IPopNameAbbreviations[] = [];\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['environment', 'zoneName', 'popName', 'exchCode'];\r\n  dataSource = new MatTableDataSource(this.PopNameAbbreviations);\r\n\r\n  constructor(private popNameAbbreviationservice: PopNameAbbreviationsService,\r\n    private dialog: MatDialog,\r\n    private dialogService: DeleteServiceService,\r\n    private router: Router, private _activatedRoute: ActivatedRoute, private titleService: Title,\r\n    public notificationService: NotificationMsgService) {\r\n    this.titleService.setTitle(\"Field Opertion Report | Pop Name Abbreviations\");\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.popNameAbbreviationservice.getRequests().subscribe(response => {\r\n      this.PopNameAbbreviations = response;\r\n      this.dataSource = new MatTableDataSource<any>(this.PopNameAbbreviations);\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n    })\r\n  }\r\n  ngAfterViewInit() {\r\n\r\n    this.dataSource.sort = this.sort as MatSort;\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  }\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    this.loader=true;\r\n    this.dataSource.filter = this.searchKey.trim().toLowerCase();\r\n    setTimeout(()=>  this.loader=false ,2000)\r\n   \r\n  }\r\n\r\n  //this section for pagination \r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  pagesizedef: number = 25;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    this.loader=true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize, pageSize, pageIndex + 1);\r\n  }\r\n  getRequestdataNext(cursize: number, pageSize: number, pageNum: number) {\r\n    this.popNameAbbreviationservice.getPopNameAbbreviations(pageNum, pageSize).subscribe(res => {\r\n      if (res.status == true) {\r\n        this.PopNameAbbreviations.length = cursize;\r\n        this.PopNameAbbreviations.push(...res?.data);\r\n        this.PopNameAbbreviations.length = res?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource(this.PopNameAbbreviations);\r\n        this.dataSource._updateChangeSubscription();\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n        this.dataSource.sort = this.sort as MatSort;\r\n        this.loader=false;\r\n      }\r\n      else this.notificationService.warn(res.error)\r\n    }, err => {\r\n      this.notificationService.warn(\"! Fail\");\r\n      this.loader=false;\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n}\r\n","<mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            All Pop Name Abbreviation\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n\r\n\r\n    <div class=\"search-div\">\r\n        <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n            <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\r\n            <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n        <span>Loading Data ...</span>\r\n        <mat-progress-bar class=\"example-margin\" mode=\"buffer\" value=\"50\">\r\n    </mat-progress-bar>\r\n        \r\n      </div>\r\n      <ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n        <mat-table [dataSource]=\"dataSource\" matSort>\r\n            <!-- <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Id</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"id\"> {{element.id}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"elementId\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Element Id</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"elementId\"> {{element.elementId}} </mat-cell>\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"environment\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Environment</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"environment\"> {{element.environment}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"zoneName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Zone Name</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"zoneName\"> {{element.zoneName}}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"popName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b>Pop Name</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"popName\"> {{element.popName}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"exchCode\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b>Exch Code </b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"exchCode\"> {{element.exchCode}} </mat-cell>\r\n            </ng-container>\r\n            <!-- <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                    <img src=\"../../../assets/image/cylinder.gif\" height=\"90px\" width=\"100px\">\r\n                </mat-footer-cell>\r\n\r\n            </ng-container> -->\r\n\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                    No data\r\n                </mat-footer-cell>\r\n\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <!-- <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':(dataSource.data.length!=null)}\">\r\n            </mat-footer-row> -->\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\"></mat-footer-row>\r\n\r\n        </mat-table>\r\n    </div>\r\n</ng-template>\r\n    <mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" showFirstLastButtons>\r\n    </mat-paginator>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Color, Label, MultiDataSet } from 'ng2-charts';\r\nimport { ChartType } from 'chart.js';\r\nimport { Ichart } from 'src/app/Model/Ichart';\r\nimport { DailyOperationsService } from 'src/app/Services/daily-operations.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  searchKey:string ='' ;\r\n  chartData=<Ichart>{};\r\n  count:number=0;\r\n  userRole=localStorage.getItem('userGroup');\r\n  constructor(private dialog: MatDialog, private dailyOperationsService : DailyOperationsService,\r\n    private _bottomSheet: MatBottomSheet,public notificationService: NotificationMsgService ,private titleService:Title ){\r\n\r\n    this.titleService.setTitle(\"Daily Operations | Home\"); \r\n    \r\n  }\r\n  doughnutChartLabelsp: Label[] =[];\r\n  doughnutChartDatap: MultiDataSet = [\r\n    []\r\n  ];\r\n\r\n  doughnutChartType: ChartType = 'doughnut';\r\n  colors: Color[] = [\r\n    {\r\n      backgroundColor: [\r\n        '#6bb332',\r\n        '#012535',\r\n        'lightgray',\r\n        '#b90627','blue','orange','purple','brown','DeepPink', 'Salmon','DarkOrange'\r\n      ]\r\n    }\r\n  ];\r\n  \r\n  \r\n  getChartData():void{\r\n      this.dailyOperationsService.chartData().subscribe(res=>{\r\n      this.chartData= res.data as Ichart;\r\n      this.count = this.chartData.totalCount ;\r\n       this.doughnutChartLabelsp = this.chartData.statusNameList ;\r\n       this.doughnutChartDatap = [this.chartData.statusNameCountList] ;\r\n      }\r\n      ,err=>{this.notificationService.warn(\"occure an error\")}\r\n      );\r\n  \r\n  \r\n  }\r\n     ngOnInit(){\r\n  \r\n     this.getChartData();\r\n     }\r\n  \r\n}\r\n","<div class=\"row mx-0 pt-4\">\r\n  <div class=\"col-sm-12 col-md-12\">\r\n           <mat-card class=\"example-card\">\r\n               <mat-card-header>\r\n                   <mat-card-title class=\"\">\r\n                       <span class=\"d-inline-block text-left\">Status of chart</span>\r\n                       <span class=\"total d-inline-block\" [matBadge]=\"count\" matBadgeOverlap=\"false\" style=\"float: right;\" >Total</span>\r\n                      </mat-card-title> \r\n               </mat-card-header>\r\n           \r\n               <mat-divider></mat-divider>\r\n               <div class=\"chart-wrapper\">\r\n                   <canvas baseChart \r\n                   [data]=\"doughnutChartDatap\"\r\n                   [labels]=\"doughnutChartLabelsp\"\r\n                   [colors]=\"colors\"\r\n                   [chartType]=\"doughnutChartType\">\r\n                 </canvas>\r\n               </div>\r\n           </mat-card>\r\n         </div> \r\n         \r\n   </div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { IdailyOperations } from '../Model/IdailyOperations';\r\nimport { IdailyOperationsSearch } from '../Model/IdailyOperationsSearch';\r\nimport { PaginatedResult, Pagination } from '../Model/pagination';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DailyOperationsService {\r\n  // url =  \"http://172.29.29.8:2021/api/DailyOperation\";\r\n   //url3 = \"https://localhost:44375/api/DailyOperation\";\r\n  url3 = \"http://172.29.29.8:2031/api/DailyOperation\";\r\n  //url3 = \"http://172.29.29.8:5050/api/DailyOperation\";\r\n  paginatedResult : PaginatedResult<IdailyOperations[]> =new PaginatedResult<IdailyOperations[]>();\r\n\r\n  headers = new HttpHeaders({\r\n    'Accept': 'application/json',\r\n    'zumo-api-version': '2.0.0',\r\n\r\n});\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getDaily(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\r\n    let params = new HttpParams();\r\n    if(PageNumber !== null && PageSize !== null ){\r\n      params = params.append('pageNumber' , PageNumber.toString());\r\n      params = params.append('pageSize' , PageSize.toString());\r\n      params = params.append('searchValue' , searchValue.toString());\r\n      params = params.append('sortcolumn' , sortcolumn.toString());\r\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\r\n    }\r\n    return this.http.get<any>(`${this.url3}` + '/GetDailyOpertion' , {observe:'response' , params}).pipe(\r\n      map(response => {\r\n         return response.body ;\r\n      })\r\n    )\r\n  }\r\n  getAllDaily(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\r\n    let params = new HttpParams();\r\n    if(PageNumber !== null && PageSize !== null ){\r\n      params = params.append('pageNumber' , PageNumber.toString());\r\n      params = params.append('pageSize' , PageSize.toString());\r\n      params = params.append('searchValue' , searchValue.toString());\r\n      params = params.append('sortcolumn' , sortcolumn.toString());\r\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\r\n    }\r\n    return this.http.get<any>(`${this.url3}` + '/GetAll' , {observe:'response' , params}).pipe(\r\n      map(response => {\r\n         return response.body ;\r\n      })\r\n    )\r\n  }\r\n  getDailyOperationById(id: number): Observable<any> {\r\n    return this.http.post<any>(`${this.url3}/GetDailyOperationsById`, id);\r\n  }\r\n  insertDailyOperation(data: IdailyOperations): Observable<any> {\r\n    return this.http.post<any>(`${this.url3}/AddDailyOperations`, data);\r\n  }\r\n  updateDailyOperation(data: IdailyOperations): Observable<any> {\r\n    return this.http.post<any>(`${this.url3}/UpdateDailyOperations`, data);\r\n  }\r\n\r\n  deleteDailyOperation(id: number): Observable<any> {\r\n    return this.http.post<any>(`${this.url3}/DeleteDailyOperations`, id);\r\n  }\r\n\r\n  getListsForCreate(): Observable<any> {\r\n\r\n    return this.http.get<any>(`${this.url3}` + `/getListForCreate`);\r\n  }\r\n\r\n  ExportEmptyExcel():Observable<Blob>{\r\n    return this.http.get(`${this.url3}/DownloadEmptyExcel`,{responseType: 'blob',headers: this.headers});\r\n\r\n  }\r\n\r\npublic addFromFile(file : any)\r\n{\r\n  return this.http.post<any>(this.url3 + '/AddExcelFile' , file , {headers : this.headers});\r\n}\r\n\r\nExportExcelWithData():Observable<Blob>{\r\n  return this.http.get(`${this.url3}/DownloadAllDataOfExcel`,{responseType: 'blob',headers: this.headers});\r\n}\r\n\r\nDownloadAllDisplayDataOfExcel():Observable<Blob>{\r\n  return this.http.get(`${this.url3}/DownloadAllDisplayDataOfExcel`,{responseType: 'blob',headers: this.headers});\r\n}\r\n\r\nExportExcelWithselectData(ids:string[]):Observable<Blob>{\r\n\r\n  return this.http.post(`${this.url3}/DownloadSelectDataOfExcel`,ids,{responseType: 'blob',headers: this.headers});\r\n}\r\n\r\nGetZoneName (popNameId : number): Observable<any> {\r\n  return this.http.post<any>(`${this.url3}/GetZoneNameByPopNameId`, popNameId );\r\n}\r\n\r\nGetPopNameByZoneId (zoneId : number): Observable<any> {\r\n  return this.http.post<any>(`${this.url3}/GetPopNameByZoneId`, zoneId );\r\n}\r\n\r\nchartData():Observable<any>\r\n{\r\n return this.http.get<any>(`${this.url3}/GetflowChartData`) ;\r\n}\r\n\r\nAdvancedSearch(data: IdailyOperationsSearch): Observable<any> {\r\n  return this.http.post<any>(`${this.url3}/AdvancedSearch`, data);\r\n}\r\nIsNameValid(assignTo: IdailyOperations): Observable<any> {\r\n  return this.http.post<any>(`${this.url3}/IsNameValid/`,assignTo);\r\n}\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IzoneName } from '../Model/IzoneName';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZoneNameService {\n  url =  \"http://172.29.29.8:2021/api/ZoneName\";\n  url2=\"https://localhost:44375/api/ZoneName\" ;\n  url3 =  \"http://172.29.29.8:2031/api/ZoneName\";\n  //url3 =  \"http://172.29.29.8:5050/api/ZoneName\";\n  constructor(private http: HttpClient) { }\n\n  getZoneName(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\n    let params = new HttpParams();\n    if(PageNumber !== null && PageSize !== null ){\n      params = params.append('pageNumber' , PageNumber.toString());\n      params = params.append('pageSize' , PageSize.toString());\n      params = params.append('searchValue' , searchValue.toString());\n      params = params.append('sortcolumn' , sortcolumn.toString());\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\n    }\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n      map(response => {\n         return response.body ;\n      })\n    )\n  }\n\n  getRequests(): Observable<IzoneName[]>{\n    return this.http.get<IzoneName[]>(`${this.url3}/GetZoneName`);\n  }\n  \n  insertZoneName(data:IzoneName ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/AddZoneName`,data);  \n  }\n  \n  updateZoneName(data:IzoneName ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/UpdateZoneName`,data);  \n  }\n\n  deleteZoneName(id:number):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/DeleteZoneName`,id) ; \n  }\n  nameIsalreadysign(name:string,id:number ):Observable<any>\n  {\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DeleteComponent } from '../msg/delete/delete.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeleteServiceService {\n\n  constructor(private dialog:MatDialog) { }\n\n  openConfirmDialog(){\n   return this.dialog.open(DeleteComponent,{\n      width : '390px',\n      panelClass:'confirm-dialog-container',\n      disableClose : true,\n      position:{top:\"10px\"}\n    })\n    \n  }\n}\n","import { ElementRef } from '@angular/core';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Ioperator } from 'src/app/Model/Ioperator';\r\nimport { OperatorService } from 'src/app/Services/operator.service';\r\nimport { PaginationService } from 'src/app/Services/pagination.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-operator',\r\n  templateUrl: './operator.component.html',\r\n  styleUrls: ['./operator.component.css']\r\n})\r\nexport class OperatorComponent implements OnInit {\r\n  \r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  loader:boolean=false;\r\n  showNewRow: boolean = false;\r\n  operator: Ioperator[] = [];\r\n  operatorName: string = '';\r\n  operatorId: number = 0;\r\n  totalCount: number = 0;\r\n  isNameRepeated : boolean =false;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  constructor(private dialog: MatDialog,\r\n    public service: OperatorService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService,\r\n    private paginationService: PaginationService) {\r\n    this.titleService.setTitle(\"Operator\");\r\n  }\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['id', 'name','action'];\r\n  dataSource = new MatTableDataSource(this.operator);\r\n  LoadOperator() {\r\n    this.service.getOperator(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n      this.operator.push(...response?.data);\r\n      this.operator.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.operator);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n\r\n    })\r\n}\r\n\r\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  this.loader = true;\r\n  this.service.getOperator(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n    this.operator = response?.data;\r\n    this.operator.length = response?.pagination.totalCount;\r\n    this.dataSource = new MatTableDataSource<any>(this.operator);\r\n    this.dataSource._updateChangeSubscription();\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  })\r\n  setTimeout(()=>this.loader = false,2000) ;\r\n}\r\n\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let operator: Ioperator =\r\n    {\r\n      id: this.operatorId,\r\n      name: this.operatorName\r\n    }\r\n    if (this.operatorId == 0) {\r\n      this.service.insertOperator(operator).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: successfully Added');\r\n          this.LoadOperator();\r\n          this.operatorName = '';\r\n          this.operatorId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updateOperator(operator).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadOperator();\r\n          this.operatorName = '';\r\n          this.operatorId = 0;\r\n        },\r\n        error => {   setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\n    this.show=false;\r\n\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deleteOperator(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');\r\n          this.LoadOperator();\r\n         \r\n        },\r\n        error=>{this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    } \r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  onChecknameIsalreadysignWhenUpdate(row : any)\r\n  {\r\n   let _operatorName = row.name;\r\n   let _operatorId = row.id;\r\n    this.service.nameIsalreadysign(_operatorName , _operatorId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameUpdatedRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameUpdatedRepeated=true;\r\n    }\r\n    });\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let operatorEdit: Ioperator =\r\n    {\r\n      id: row.id,\r\n      name: row.name\r\n    }\r\n    this.service.updateOperator(operatorEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(' :: Successfully Updated');\r\n        this.LoadOperator();\r\n        this.operatorName = '';\r\n        this.operatorId = 0;\r\n      },\r\n      error => { \r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n        this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated=false;  }\r\n  addNew(){\r\n    this.show=true;\r\n  }\r\n\r\n  onChecknameIsalreadysign()\r\n  {\r\n    this.service.nameIsalreadysign(this.operatorName , this.operatorId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n    //this section for pagination \r\n    pageIn = 0;\r\n    previousSizedef = 25;\r\n    pagesizedef: number = 25;\r\n    public pIn: number = 0;\r\n    pageChanged(event: any) {\r\n      this.loader = true;\r\n      this.pIn = event.pageIndex;\r\n      this.pageIn = event.pageIndex;\r\n      this.pagesizedef = event.pageSize;\r\n      let pageIndex = event.pageIndex;\r\n      let pageSize = event.pageSize;\r\n      let previousSize = pageSize * pageIndex;\r\n      this.previousSizedef = previousSize;\r\n      this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n    }\r\n    getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n      \r\n        this.service.getOperator(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n          if (res.status == true) {\r\n            this.loader = false;\r\n            this.operator.length = cursize;\r\n            this.operator.push(...res?.data);\r\n            this.operator.length = res?.pagination.totalCount;\r\n            this.dataSource = new MatTableDataSource<any>(this.operator);\r\n            this.dataSource._updateChangeSubscription();\r\n            this.dataSource.paginator = this.paginator as MatPaginator;\r\n            this.loader = false;\r\n          }\r\n          else this.notificationService.warn(res.error)\r\n        }, err => {\r\n          this.notificationService.warn(\"! Fail\");\r\n          this.loader = false;\r\n  \r\n        })\r\n      \r\n  \r\n    }\r\n  \r\n    lastcol: string = 'Id';\r\n    lastdir: string = 'asc';\r\n  \r\n    sortData(sort: any) {\r\n      if (this.pIn != 0)\r\n        window.location.reload();\r\n      if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n        if (this.lastdir == 'asc')\r\n          sort.direction = 'desc';\r\n        else\r\n          sort.direction = 'asc';\r\n      }\r\n      this.lastcol = sort.active; this.lastdir = sort.direction;\r\n      var c = this.pageIn;\r\n      this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n    }\r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n       Operator\r\n       <div style=\"float: right;\">\r\n        <span class=\"add\" (click)=\"addNew()\">+ Add New</span></div>\r\n       </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label>OperatorName</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"operatorName\" (keyup)=\"onChecknameIsalreadysign()\">\r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"operatorId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!operatorName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"table-striped\" [dataSource]=\"dataSource\"   #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear >\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled \">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\"  (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n               \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\" (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n</mat-paginator>\r\n</mat-card>\r\n\r\n\r\n<!--   \r\n<app-loader *ngIf=\"loading\">\r\n</app-loader> -->\r\n\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component, ElementRef, Inject,OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { IdailyOperations } from 'src/app/Model/IdailyOperations';\r\nimport { Ioperator } from 'src/app/Model/Ioperator';\r\nimport { IpopName, PopName } from 'src/app/Model/IpopName';\r\nimport { IremedyAction } from 'src/app/Model/IremedyAction';\r\nimport { Istatus } from 'src/app/Model/Istatus';\r\nimport { ItechName } from 'src/app/Model/ItechName';\r\nimport { ItransmissionMedia } from 'src/app/Model/ItransmissionMedia';\r\nimport { IzoneName } from 'src/app/Model/IzoneName';\r\nimport { DailyOperationsService } from 'src/app/Services/daily-operations.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\nimport {Observable} from 'rxjs';\r\n@Component({\r\n  selector: 'app-add-daily-operation',\r\n  templateUrl: './add-daily-operation.component.html',\r\n  styleUrls: ['./add-daily-operation.component.css']\r\n})\r\nexport class AddDailyOperationComponent implements OnInit {\r\n  [x: string]: any;\r\n  @ViewChild('popNameSearch') popNameSearch!: ElementRef;\r\n  @ViewChild('operatorSearch') operatorSearch!: ElementRef;\r\n  @ViewChild('techNameSearch') techNameSearch!: ElementRef;\r\n  @ViewChild('statusNameSearch') statusNameSearch!: ElementRef;\r\n  @ViewChild('transmissionMediaSearch') transmissionMediaSearch!: ElementRef;\r\n  @ViewChild('remedyActionsSearch') remedyActionsSearch!: ElementRef;\r\n  loading: boolean = false;\r\n  id: number = 0;\r\n  dailyOperation: IdailyOperations = <IdailyOperations>{};\r\n  operators: Ioperator[] = [];\r\n  _operators: Ioperator[] = [];\r\n  filteredOptions: Observable<string[]> | undefined;\r\n   popNames:IpopName[]=[];\r\n   _popNames :any[]=[];\r\n  status: Istatus[] = [];\r\n  _status: Istatus[] = [];\r\n  techNames: ItechName[] = [];\r\n  _techNames: ItechName[] = [];\r\n  transmissionMedia: ItransmissionMedia[] = [];\r\n  _transmissionMedia: ItransmissionMedia[] = [];\r\n  remedyActions: IremedyAction[] = [];\r\n  _remedyActions: IremedyAction[] = [];\r\n  constructor(public service: DailyOperationsService, public dialogRef: MatDialogRef<AddDailyOperationComponent>, public notificationService: NotificationMsgService) { }\r\n\r\n  form: FormGroup = new FormGroup({\r\n    id: new FormControl(this.id),\r\n    complaintNumber: new FormControl('', [Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    PSDID: new FormControl('', [Validators.required,Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    circuitID: new FormControl('', [Validators.required ,Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    customerName: new FormControl('',Validators.required),\r\n    popNameIds: new FormControl('',Validators.required),\r\n    zoneName: new FormControl('',Validators.required),\r\n    operatorIds: new FormControl('' ,Validators.required),\r\n    techNameIds: new FormControl('' ,Validators.required),\r\n    remedyActionIds: new FormControl('' ),\r\n    notes: new FormControl(''),\r\n    transmissionMediaIds: new FormControl('' ,Validators.required),\r\n    statusIds: new FormControl('' ,Validators.required),\r\n    createdDate: new FormControl('' ,Validators.required),\r\n    closedDate: new FormControl('')\r\n  });\r\n\r\n  getformLists() {\r\n    this.service.getListsForCreate().subscribe(res => {\r\n      this.operators = res.operators as Ioperator[];\r\n      this._operators = res.operators as Ioperator[];\r\n      this.popNames = res.popNames as IpopName[];\r\n      this._popNames = res.popNames as IpopName[];\r\n      this.remedyActions = res.remedyActions as IremedyAction[];\r\n      this._remedyActions = res.remedyActions as IremedyAction[];\r\n      this.status = res._status as Istatus[];\r\n      this._status = res._status as Istatus[];\r\n      this.techNames = res.techNames as ItechName[];\r\n      this._techNames = res.techNames as ItechName[];\r\n      this.transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n      this._transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n\r\n      this.form.patchValue({\r\n        statusIds: this.status[0].id.toString()\r\n      })\r\n      this.form.patchValue({\r\n        remedyActionIds: this.remedyActions[0].id.toString()\r\n      })\r\n      this.form.patchValue({\r\n        techNameIds: this.techNames[0].id.toString()\r\n      })\r\n    });\r\n   \r\n   \r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getformLists();\r\n  }\r\n\r\n  onOperatorsInputChange(){\r\n    const searchInput = this.operatorSearch.nativeElement.value ?\r\n    this.operatorSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.operators = this._operators.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onPopNameInputChange(){\r\n    const searchInput = this.popNameSearch.nativeElement.value ?\r\n    this.popNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.popNames = this._popNames.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n\r\n  onTechNameInputChange(){\r\n    const searchInput = this.techNameSearch.nativeElement.value ?\r\n    this.techNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.techNames = this._techNames.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onTransmissionMediaInputChange(){\r\n    const searchInput = this.transmissionMediaSearch.nativeElement.value ?\r\n    this.transmissionMediaSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.transmissionMedia = this._transmissionMedia.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  \r\n  onRemedyActionInputChange(){\r\n    const searchInput = this.remedyActionsSearch.nativeElement.value ?\r\n    this.remedyActionsSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.remedyActions = this._remedyActions.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onStatusInputChange(){\r\n    const searchInput = this.statusNameSearch.nativeElement.value ?\r\n    this.statusNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.status = this._status.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onClear() {\r\n    this.form.reset();\r\n    this.notificationService.success(':: Submitted successfully');\r\n  }\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if (this.form.valid) {\r\n      this.dailyOperation.id = this.form.value.id;\r\n      this.dailyOperation.complaintNumber = Number(this.form.value.complaintNumber);\r\n      this.dailyOperation.psdid = Number(this.form.value.PSDID);\r\n      this.dailyOperation.circuitID = Number(this.form.value.circuitID);\r\n      this.dailyOperation.customerName = this.form.value.customerName;\r\n      this.dailyOperation.popNameId = Number(this.form.value.popNameIds);\r\n      this.dailyOperation.zoneName = this.form.value.zoneName;\r\n      this.dailyOperation.operatorId = Number(this.form.value.operatorIds);\r\n      this.dailyOperation.techNameId = Number(this.form.value.techNameIds);\r\n      this.dailyOperation.remedyActionId = Number(this.form.value.remedyActionIds);\r\n      this.dailyOperation.notes = this.form.value.notes;\r\n      this.dailyOperation.transmissionMediaId = Number(this.form.value.transmissionMediaIds);\r\n      this.dailyOperation.statusId = Number(this.form.value.statusIds);\r\n      this.dailyOperation.creationDate = new Date();\r\n      this.dailyOperation.createdDate = this.form.value.createdDate;\r\n      this.dailyOperation.closedDate = this.form.value.closedDate == \"\" ? null : this.form.value.closedDate;\r\n      this.dailyOperation.createdBy = localStorage.getItem('userName') + \" \";\r\n      this.dailyOperation.assignedTo = localStorage.getItem('userName') + \" \";\r\n      this.service.insertDailyOperation(this.dailyOperation).subscribe(res => {\r\n        this.onClose();\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n        }, 0)\r\n\r\n        this.notificationService.success(':: Saved Successfully');\r\n      }, error => {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n        }, 0)\r\n\r\n        this.notificationService.warn(':: An Error Occured')\r\n      }\r\n      );\r\n\r\n    }else{  this.loading = false;}\r\n  }\r\n  onClose() {\r\n    this.form.reset();\r\n    this.dialogRef.close();\r\n\r\n  }\r\n  OnChangeZoneName(event: any) {\r\n    let zoneId = Number(event.value);\r\n    this.service.GetPopNameByZoneId(zoneId).subscribe(res => {\r\n      this.popNames = res.data as IpopName[];\r\n    });\r\n  }\r\n\r\n  OnChangePopName(event: any) {\r\n    let popNameId = Number(event.value);\r\n    this.service.GetZoneName(popNameId).subscribe(res => {\r\n      let zoneName = res.data as IzoneName;\r\n      this.form.patchValue({\r\n        zoneName: zoneName.name.toString()\r\n      })\r\n    });\r\n  }\r\n  IsBiger : boolean = false;\r\n  handleclosedDateChange(event : any){\r\n    if(this.form.value.createdDate > this.form.value.closedDate){\r\n      this.IsBiger = true;\r\n    }else{\r\n      this.IsBiger = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","<mat-card class=\"example-card\">\r\n  <form [formGroup]=\"form\" class=\"form-normal\" (submit)=\"onSubmit()\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Daily Operation Form\r\n        <div class=\"\" style=\"float: right;\">\r\n          <button class=\"option submit\" type=\"submit\" [disabled]=\"IsBiger\"><small>Submit</small></button>\r\n          <span class=\"separator mx-1\">|</span>\r\n          <span class=\"option text-danger\" (click)=\"onClose()\"><small>Cancel</small></span>\r\n\r\n        </div>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n    <mat-grid-list cols=\"2\" rowHeight=\"450px\">\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container \">\r\n          <input type=\"hidden\" formControlName=\"id\">\r\n          <mat-form-field>\r\n            <input formControlName=\"complaintNumber\" matInput placeholder=\"complaint Number*\">\r\n            <mat-error>This field accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"PSDID\" matInput placeholder=\"PSDID*\">\r\n            <mat-error>This field is mandatory and accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"circuitID\" matInput placeholder=\"circuit ID*\">\r\n            <mat-error>This field is mandatory and accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"customerName\" matInput placeholder=\"customer Name*\">\r\n            <mat-error>This field is mandatory and accept only characters.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n         <mat-form-field>\r\n            <mat-select class=\"select\"  formControlName=\"popNameIds\" placeholder=\"pop Name*\"\r\n              (selectionChange)=\"OnChangePopName($event)\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #popNameSearch (input)=\"onPopNameInputChange()\" >\r\n              <ng-container *ngFor=\"let popNameIds of popNames\">\r\n                <mat-option value=\"{{popNameIds.id}}\">{{popNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"zoneName\" matInput placeholder=\"zone Name*\" readonly>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-select class=\"select\"  formControlName=\"operatorIds\" placeholder=\"operator Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #operatorSearch (input)=\"onOperatorsInputChange()\" >\r\n              <ng-container *ngFor=\"let operatorIds of operators\">\r\n                <mat-option value=\"{{operatorIds.id}}\">{{operatorIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container\">\r\n          <mat-form-field>\r\n            <mat-select class=\"select\" formControlName=\"techNameIds\" placeholder=\"tech Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #techNameSearch (input)=\"onTechNameInputChange()\" >\r\n              <ng-container *ngFor=\"let techNameIds of techNames\">\r\n                <mat-option value=\"{{techNameIds.id}}\">{{techNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-select class=\"select\" formControlName=\"remedyActionIds\" placeholder=\"Remedy Action Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #remedyActionsSearch (input)=\"onRemedyActionInputChange()\" >\r\n              <ng-container *ngFor=\"let remedyActionIds of remedyActions\">\r\n                <mat-option value=\"{{remedyActionIds.id}}\">{{remedyActionIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"notes\" matInput placeholder=\"notes*\">\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <mat-select class=\"select\" formControlName=\"transmissionMediaIds\" placeholder=\"transmission Media Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #transmissionMediaSearch (input)=\"onTransmissionMediaInputChange()\" >\r\n              <ng-container *ngFor=\"let transmissionMediaIds of transmissionMedia\">\r\n                <mat-option value=\"{{transmissionMediaIds.id}}\">{{transmissionMediaIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-select class=\"select\"  formControlName=\"statusIds\" placeholder=\"status *\" >\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"status name\" #statusNameSearch (input)=\"onStatusInputChange()\" >\r\n              <ng-container *ngFor=\"let statusIds of status\">\r\n                <mat-option value=\"{{statusIds.id}}\">{{statusIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input [ngxMatDatetimePicker]=\"createdDate\" formControlName=\"createdDate\" matInput\r\n              placeholder=\"created Date*\" ng-model-options=\"{timezone: 'utc'}\"  readonly>\r\n\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(createdDate)\"></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #createdDate  >\r\n            </ngx-mat-datetime-picker>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input [ngxMatDatetimePicker]=\"closedDate\" (dateChange)=\"handleclosedDateChange($event)\"  formControlName=\"closedDate\" matInput placeholder=\"closed Date*\" readonly>\r\n            <!-- [enableMeridian]=\"true\" -->\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(closedDate)\" ></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #closedDate   >\r\n            </ngx-mat-datetime-picker>\r\n            <mat-error *ngIf=\"true\">This field should less than or equal created Date.</mat-error>\r\n            <span *ngIf=\"IsBiger\" class=\"mat-error ng-tns-c54-51\">This field should be  less than or equal created Date.</span>\r\n          </mat-form-field>\r\n\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n\r\n    </mat-grid-list>\r\n\r\n\r\n\r\n  </form>\r\n  <!-- [disabled]=\"form.invalid\" -->\r\n</mat-card>\r\n\r\n<app-loader *ngIf=\"loading\">\r\n</app-loader>\r\n\r\n<!-- s -->\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'temp1';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { MatListModule} from '@angular/material/list';\r\nimport { MatMenuModule} from '@angular/material/menu'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatStepperModule} from  \"@angular/material/stepper\";\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport { MatBadgeModule}from '@angular/material/badge';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n   MatGridListModule,\r\n   MatRadioModule,\r\n   MatFormFieldModule,\r\n   MatInputModule,\r\n   MatSelectModule,\r\n   MatCheckboxModule,\r\n   MatDatepickerModule,\r\n   MatNativeDateModule,\r\n   MatTreeModule,\r\n   MatExpansionModule,\r\n   MatDividerModule,\r\n   MatTabsModule,\r\n   MatStepperModule,\r\n   MatSnackBarModule,\r\n   MatCardModule,\r\n   MatProgressSpinnerModule,\r\n   MatAutocompleteModule,\r\n   MatTooltipModule,\r\n   MatProgressBarModule,\r\n   MatBottomSheetModule,\r\n   MatBadgeModule,\r\n\r\n   \r\n  ]\r\n  ,\r\n  exports:[\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n   MatGridListModule,\r\n   MatRadioModule,\r\n   MatFormFieldModule,\r\n   MatInputModule,\r\n   MatSelectModule,\r\n   MatCheckboxModule,\r\n   MatDatepickerModule,\r\n   MatNativeDateModule,\r\n   MatTreeModule,\r\n   MatExpansionModule,\r\n   MatDividerModule,\r\n   MatTabsModule,\r\n   MatStepperModule,\r\n   MatSnackBarModule,\r\n   MatCardModule,\r\n   MatProgressSpinnerModule,\r\n   MatAutocompleteModule,\r\n   MatTooltipModule,\r\n   MatProgressBarModule,\r\n   MatBottomSheetModule,\r\n   MatBadgeModule,\r\n  \r\n  \r\n\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IPopNameAbbreviations } from '../Model/IPopNameAbbreviations';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopNameAbbreviationsService {\n  url =  \"http://172.29.29.8:2021/api/PopNameAbbreviations\";\n  url2 =\"https://localhost:44375/api/PopNameAbbreviations\" ;\n  url3 =  \"http://172.29.29.8:2031/api/PopNameAbbreviations\";\n  //url3 =  \"http://172.29.29.8:5050/api/PopNameAbbreviations\";\n\n  constructor(private http: HttpClient) { }\n\n  getPopNameAbbreviations(page :number , itemPerPage :number){\n    let params = new HttpParams();\n    if(page !== null && itemPerPage !== null){\n      params = params.append('pageNumber' , page.toString());\n      params = params.append('pageSize' , itemPerPage.toString());\n    }\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n      map(response => {\n         return response.body ;\n      })\n    )\n  }\n  getRequests(): Observable<IPopNameAbbreviations[]>{\n    return this.http.get<IPopNameAbbreviations[]>(`${this.url3}`);\n  }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  isMenuOpen = true;\r\n  contentMargin = 240;\r\n // @ViewChild('side') side?:ElementRef ;\r\n\r\n  constructor() {  }\r\n\r\n  ngOnInit(){ \r\n    //(this.side as ElementRef).nativeElement.style.marginLeft=\"240px\";\r\n  }\r\n\r\n  \r\n\r\n  onToolbarMenuToggle() {\r\n \r\n    this.isMenuOpen = !this.isMenuOpen;\r\n\r\n    if(!this.isMenuOpen) {\r\n      this.contentMargin = 0 ;\r\n     \r\n      \r\n    } else {\r\n      this.contentMargin = 240;\r\n  \r\n     \r\n\r\n    }\r\n  }\r\n\r\n \r\n\r\n}\r\n","<app-header (sidenavToggle)=\"onToolbarMenuToggle()\"></app-header>\r\n<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" #sidenav id=\"sidenav\" [class.menu-open]=\"isMenuOpen\" [class.menu-close]=\"!isMenuOpen\"\r\n        opened>\r\n        <app-sidebar></app-sidebar>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content #side [ngStyle]=\"{'margin-left.px': contentMargin}\">\r\n        <main #main>\r\n            <router-outlet>\r\n            </router-outlet>\r\n            <app-footeer></app-footeer>\r\n        </main>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Iloginview } from '../Model/Iloginview';\r\nimport { Iuser } from '../Model/Iuser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  url =  \"http://172.29.29.8:2021/api/account\";\r\n  url2 =  \"https://localhost:44375/api/account\";\r\n  url3 =  \"http://172.29.29.8:2031/api/account\";\r\n  //url3 =  \"http://172.29.29.8:5050/api/account\";\r\n\r\nconstructor(private http: HttpClient ) { }\r\n\r\nlogin(data:Iloginview ):Observable<Iuser>\r\n{\r\n  \r\n  \r\n  return this.http.post<Iuser>(`${this.url3}/login`,data);\r\n  \r\n}\r\n\r\n\r\nlogout(): Observable<any> {\r\n  return this.http.get<any>(`${this.url3}/Logout`);\r\n}\r\n\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IremedyAction } from '../Model/IremedyAction';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RemedyActionService {\n  url =  \"http://172.29.29.8:2021/api/RemedyAction\";\n  url2=\"https://localhost:44375/api/RemedyAction\" ;\n  url3 =  \"http://172.29.29.8:2031/api/RemedyAction\";\n  //url3 =  \"http://172.29.29.8:5050/api/RemedyAction\";\n  constructor(private http: HttpClient) { }\n\n  getRemedyAction(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\n    let params = new HttpParams();\n    if(PageNumber !== null && PageSize !== null ){\n      params = params.append('pageNumber' , PageNumber.toString());\n      params = params.append('pageSize' , PageSize.toString());\n      params = params.append('searchValue' , searchValue.toString());\n      params = params.append('sortcolumn' , sortcolumn.toString());\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\n    }\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n      map(response => {\n         return response.body ;\n      })\n    )\n  }\n  getRequests(): Observable<IremedyAction[]>{\n    return this.http.get<IremedyAction[]>(`${this.url3}`);\n  }\n  \n  insertRemedyAction(data:IremedyAction ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/AddRemedyAction`,data);  \n  }\n  updateRemedyAction(data:IremedyAction ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/UpdateRemedyAction`,data);  \n  }\n\n  deleteRemedyAction(id:number):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/DeleteRemedyAction`,id) ; \n  }\n  nameIsalreadysign(name:string,id:number ):Observable<any>\n  {\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \n  }\n}\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LayoutComponent } from './shared/components/layout/layout.component';\r\nimport { HeaderComponent } from './shared/components/navigation/header/header.component';\r\nimport { SidebarComponent } from './shared/components/navigation/sidebar/sidebar.component';\r\nimport { FooteerComponent } from './shared/components/navigation/footeer/footeer.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LoginComponent } from './shared/components/login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LayoutModule } from './shared/components/layout/layout.module';\r\nimport { LoginModule } from './shared/components/login/login.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from './interseptors/AuthInterceptor';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    LoginModule\r\n  ],\r\n  providers: [\r\n    Title, { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n    CanActivate,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n    Router,\r\n    Route\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\"\r\n})\r\nexport class AuthGuardAdminServices implements CanActivate {\r\n    constructor(private _router: Router) { }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n     let token = localStorage.getItem(\"token\");\r\n     let role=localStorage.getItem(\"userGroup\");\r\n     if (token == \"undefined\" || token == null || token == \"\"||role!=\"FieldOperationReport_Admin\") {\r\n         this._router.navigateByUrl('/login')\r\n       return false;\r\n     }  \r\n      return true;\r\n   }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { EmpService } from 'src/app/shared/services/emp.service';\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor(public service :EmpService, public dialogRef: MatDialogRef<TestComponent>,public notificationService: NotificationMsgService) { }\n\n  ngOnInit(){\n  }\n  departments =[\n    {id:3 ,value:\"Dep-1\"},\n    {id:2 ,value:\"Dep-2\"},\n    {id:3 ,value:\"Dep-3\"}\n\n  ]\n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    fullName: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(11)]),\n    city: new FormControl(''),\n    gender: new FormControl('1'),\n    department: new FormControl(0),\n    hireDate: new FormControl(''),\n    isPermanent: new FormControl(false)\n  });\n \n\n \n \n  onClear(){\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.notificationService.success(':: Submitted successfully');\n  }\n  onSubmit(){\n    if(this.service.form.valid){\n      //this.service.insertEmployee(this.service.form.value)\n      this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.notificationService.success(':: Submitted successfully');\n    this.onClose();\n\n    }\n  }\n  onClose(){\n    this.service.form.reset();\n    this.service.initializeFormGroup();\n    this.dialogRef.close();\n\n  }\n\n\n}\n","\n\n\n\n <mat-card class=\"example-card\">\n    <form [formGroup]=\"form\" class=\"normal-form\" (submit)=\"onSubmit()\">\n    <mat-card-header>\n        <mat-card-title>\n            Form\n           <div class=\"\" style=\"float: right;\">\n               <span class=\"option submit\" type=\"submit\"><small>Submit</small></span> \n               <span class=\"separator mx-1\">|</span>\n               <span class=\"option text-danger\"  (click)=\"onClose()\"><small>Cancel</small></span>\n               \n            </div>\n        </mat-card-title>\n    </mat-card-header>\n    <mat-divider></mat-divider>\n\n\n\n    <!-- <mat-toolbar>\n        <span class=\"fill-remaining-space\"></span>\n        <button class=\"btn-dialog-close\" mat-stroked-button  tabIndex=\"-1\" (click)=\"onClose()\"><mat-icon>clear</mat-icon></button>\n      </mat-toolbar> -->\n     \n        <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n          <mat-grid-tile  >\n            <div class=\"controles-container\">\n              <input type=\"hidden\" formControlName=\"$key\">\n              <mat-form-field>\n                <input formControlName=\"fullName\" matInput placeholder=\"Full Name*\">\n                <mat-error>This field is mandatory.</mat-error> \n              </mat-form-field>\n              <mat-form-field>\n                <input formControlName=\"email\" matInput placeholder=\"Email\">\n                <mat-error>Invalid email address.</mat-error>\n              </mat-form-field>\n              <mat-form-field>\n                <input formControlName=\"mobile\" matInput placeholder=\"Mobile*\">\n                <mat-error *ngIf=\"form.controls['mobile'].errors?.required\">This field is mandatory.</mat-error>\n                <mat-error *ngIf=\"form.controls['mobile'].errors?.minlength\">Minimum 11 charactors needed.</mat-error>\n              </mat-form-field>\n              <mat-form-field>\n                <input formControlName=\"city\" matInput placeholder=\"City\">\n              </mat-form-field>\n            </div>\n          </mat-grid-tile>\n          <mat-grid-tile>\n            <div class=\"controles-container\">\n              <div class=\"add-bottom-padding\">\n                <label id=\"radio-group-label\">Gender : </label>\n                <mat-radio-group formControlName=\"gender\">\n                  <mat-radio-button value=\"1\">Male</mat-radio-button>\n                  <mat-radio-button value=\"2\">Female</mat-radio-button>\n                </mat-radio-group>\n              </div>\n              <mat-form-field>\n                <mat-select formControlName=\"department\" placeholder=\"Department\">\n                  <mat-option>None</mat-option>\n                  <ng-container *ngFor=\"let department of departments\">\n                    <mat-option value=\"{{department.id}}\">{{department.value}}</mat-option>\n                  </ng-container>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field>\n                <input formControlName=\"hireDate\" matInput [matDatepicker]=\"picker\" placeholder=\"Hire Date\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n              <div class=\"add-bottom-padding\">\n                <mat-checkbox formControlName=\"isPermanent\">Permanent Employee</mat-checkbox>\n              </div>\n             \n            </div>\n          </mat-grid-tile>\n          \n        </mat-grid-list>\n      </form>\n    \n\n    \n   \n\n\n\n</mat-card>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ItransmissionMedia } from '../Model/ItransmissionMedia';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransmissionMediaService {\n  url =  \"http://172.29.29.8:2021/api/TransmissionMedia\";\n  url2=\"https://localhost:44375/api/TransmissionMedia\" ;\n  url3 =  \"http://172.29.29.8:2031/api/TransmissionMedia\";\n  //url3 =  \"http://172.29.29.8:5050/api/TransmissionMedia\";\n  constructor(private http: HttpClient) { }\n\n\n  getTransmissionMedia(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\n    let params = new HttpParams();\n    if(PageNumber !== null && PageSize !== null ){\n      params = params.append('pageNumber' , PageNumber.toString());\n      params = params.append('pageSize' , PageSize.toString());\n      params = params.append('searchValue' , searchValue.toString());\n      params = params.append('sortcolumn' , sortcolumn.toString());\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\n    }\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n      map(response => {\n         return response.body ;\n      })\n    )\n  }\n  // getRequests(): Observable<ItransmissionMedia[]>{\n  //   return this.http.get<ItransmissionMedia[]>(`${this.url}`);\n  // }\n  \n  insertTransmissionMedia(data:ItransmissionMedia ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/AddTransmissionMedia`,data);  \n  }\n  updateTransmissionMedia(data:ItransmissionMedia ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/UpdateTransmissionMedia`,data);  \n  }\n\n  deleteTransmissionMedia(id:number):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/DeleteTransmissionMedia`,id) ; \n  }\n  nameIsalreadysign(name:string,id:number ):Observable<any>\n  {\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IpopName } from '../Model/IpopName';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PopNameService {\n  url =  \"http://172.29.29.8:2021/api/PopName\";\n  url2 =\"https://localhost:44375/api/PopName\" ;\n  url3 =  \"http://172.29.29.8:2031/api/PopName\";\n  //url3 =  \"http://172.29.29.8:5050/api/PopName\";\n  constructor(private http: HttpClient) { }\n\n  getPopName(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\n    let params = new HttpParams();\n    if(PageNumber !== null && PageSize !== null ){\n      params = params.append('pageNumber' , PageNumber.toString());\n      params = params.append('pageSize' , PageSize.toString());\n      params = params.append('searchValue' , searchValue.toString());\n      params = params.append('sortcolumn' , sortcolumn.toString());\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\n    }\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\n      map(response => {\n         return response.body ;\n      })\n    )\n  }\n\n  getRequests(): Observable<IpopName[]>{\n    return this.http.get<IpopName[]>(`${this.url3}`);\n  }\n\n  GePopNameById(id: number): Observable<any> {\n    return this.http.post<any>(`${this.url3}/GePopNameById`, id);\n  }\n  \n  insertPopName(data:IpopName ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/AddPopName`,data);  \n  }\n  updatePopName(data:IpopName ):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/UpdatePopName`,data);  \n  }\n\n  deletePopName(id:number):Observable<any>\n  {\n   return this.http.post<any>(`${this.url3}/DeletePopName`,id) ; \n  }\n\n  nameIsalreadysign(name:string,id:number ):Observable<any>\n  {\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ItechName } from '../Model/ItechName';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TechNameService {\r\n  url =  \"http://172.29.29.8:2021/api/TechName\";\r\n  url2=\"https://localhost:44375/api/TechName\" ;\r\n  url3 =  \"http://172.29.29.8:2031/api/TechName\";\r\n  //url3 =  \"http://172.29.29.8:5050/api/TechName\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  getTechName(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\r\n    let params = new HttpParams();\r\n    if(PageNumber !== null && PageSize !== null){\r\n      params = params.append('pageNumber' , PageNumber.toString());\r\n      params = params.append('pageSize' , PageSize.toString());\r\n      params = params.append('searchValue' , searchValue.toString());\r\n      params = params.append('sortcolumn' , sortcolumn.toString());\r\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\r\n    }\r\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\r\n      map(response => {\r\n         return response.body ;\r\n      })\r\n    )\r\n  }\r\n  getRequests(): Observable<ItechName[]>{\r\n    return this.http.get<ItechName[]>(`${this.url3}`);\r\n  }\r\n  \r\n  insertTechName(data:ItechName ):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/AddTechName`,data);  \r\n  }\r\n  updateTechName(data:ItechName ):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/UpdateTechName`,data);  \r\n  }\r\n\r\n  deleteTechName(id:number):Observable<any>\r\n  {\r\n   return this.http.post<any>(`${this.url3}/DeleteTechName`,id) ; \r\n  }\r\n\r\n  nameIsalreadysign(name:string,id:number ):Observable<any>\r\n  {\r\n   return this.http.get<any>(`${this.url3}/NameIsAlreadySigned/`+name+`/`+id);  \r\n  }\r\n}\r\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport * as moment from 'moment';\r\nimport 'moment-timezone';\r\nimport { IdailyOperations } from 'src/app/Model/IdailyOperations';\r\nimport { Ioperator } from 'src/app/Model/Ioperator';\r\nimport { IpopName } from 'src/app/Model/IpopName';\r\nimport { IremedyAction } from 'src/app/Model/IremedyAction';\r\nimport { Istatus } from 'src/app/Model/Istatus';\r\nimport { ItechName } from 'src/app/Model/ItechName';\r\nimport { ItransmissionMedia } from 'src/app/Model/ItransmissionMedia';\r\nimport { IzoneName } from 'src/app/Model/IzoneName';\r\nimport { DailyOperationsService } from 'src/app/Services/daily-operations.service';\r\nimport { OperatorService } from 'src/app/Services/operator.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n@Component({\r\n  selector: 'app-edit-daily-opertion',\r\n  templateUrl: './edit-daily-opertion.component.html',\r\n  styleUrls: ['./edit-daily-opertion.component.css']\r\n})\r\nexport class EditDailyOpertionComponent implements OnInit {\r\n  \r\n  @ViewChild('popNameSearch') popNameSearch!: ElementRef;\r\n  @ViewChild('operatorSearch') operatorSearch!: ElementRef;\r\n  @ViewChild('techNameSearch') techNameSearch!: ElementRef;\r\n  @ViewChild('statusNameSearch') statusNameSearch!: ElementRef;\r\n  @ViewChild('transmissionMediaSearch') transmissionMediaSearch!: ElementRef;\r\n  @ViewChild('remedyActionsSearch') remedyActionsSearch!: ElementRef;\r\n  userRole = localStorage.getItem('userGroup');\r\n loading:boolean=false;\r\n  id: number = 0;\r\n  dailyOperation: IdailyOperations = <IdailyOperations>{};\r\n  operators: Ioperator[] = [];\r\n  _operators: Ioperator[] = [];\r\n  popNames: IpopName[] = [];\r\n  _popNames :any[]=[];\r\n  status: Istatus[] = [];\r\n  _status: Istatus[] = [];\r\n  techNames: ItechName[] = [];\r\n  _techNames: ItechName[] = [];\r\n  transmissionMedia: ItransmissionMedia[] = [];\r\n  _transmissionMedia: ItransmissionMedia[] = [];\r\n  remedyActions: IremedyAction[] = [];\r\n  _remedyActions: IremedyAction[] = [];\r\n\r\n  constructor(public service: DailyOperationsService,public OpertionServices : OperatorService, public dialogRef: MatDialogRef<EditDailyOpertionComponent>, public notificationService: NotificationMsgService, @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    this.id = data.id; \r\n  }\r\n\r\n  form: FormGroup = new FormGroup({\r\n    id: new FormControl(this.id),\r\n    complaintNumber: new FormControl('' , [ Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    PSDID: new FormControl('' , [ Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    circuitID: new FormControl('' ,[ Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]),\r\n    customerName: new FormControl('',Validators.required),\r\n    popNameIds: new FormControl('',Validators.required),\r\n    zoneName: new FormControl('',Validators.required),\r\n    operatorIds: new FormControl('',Validators.required),\r\n    techNameIds: new FormControl('',Validators.required),\r\n    remedyActionIds: new FormControl(''),\r\n    notes: new FormControl(''),\r\n    transmissionMediaIds: new FormControl('',Validators.required),\r\n    statusIds: new FormControl('',Validators.required),\r\n    assignedTo : new FormControl('',Validators.required),\r\n    createdDate: new FormControl('',Validators.required),\r\n    closedDate: new FormControl(''),\r\n  });\r\n\r\n\r\n  getformLists() {\r\n    this.service.getListsForCreate().subscribe(res => {\r\n      this.operators = res.operators as Ioperator[];\r\n      this._operators = res.operators as Ioperator[];\r\n      this.popNames = res.popNames as IpopName[];\r\n      this._popNames = res.popNames as IpopName[];\r\n      this.remedyActions = res.remedyActions as IremedyAction[];\r\n      this._remedyActions = res.remedyActions as IremedyAction[];\r\n      this.status = res._status as Istatus[];\r\n      this._status = res._status as Istatus[];\r\n      this.techNames = res.techNames as ItechName[];\r\n      this._techNames = res.techNames as ItechName[];\r\n      this.transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n      this._transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n    });\r\n      this.service.getDailyOperationById(this.id).subscribe(res => {\r\n        this.dailyOperation = res.data as IdailyOperations ;\r\n        this.form.patchValue({\r\n          complaintNumber: this.dailyOperation.complaintNumber,\r\n          PSDID: this.dailyOperation.psdid,\r\n          circuitID: this.dailyOperation.circuitID,\r\n          customerName: this.dailyOperation.customerName,\r\n          popNameIds: this.dailyOperation.popNameId.toString(),\r\n          zoneName : this.dailyOperation.zoneName.toString(),\r\n          operatorIds: this.dailyOperation.operatorId.toString(),\r\n          techNameIds: this.dailyOperation.techNameId.toString(),\r\n          remedyActionIds: this.dailyOperation.remedyActionId.toString(),\r\n          notes: this.dailyOperation.notes,\r\n          transmissionMediaIds: this.dailyOperation.transmissionMediaId.toString(),\r\n          statusIds: this.dailyOperation.statusId.toString(),\r\n          assignedTo : this.dailyOperation.assignedTo ,\r\n          createdDate: this.dailyOperation.createdDate,\r\n          closedDate: this.dailyOperation.closedDate,\r\n        })\r\n      });\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getformLists();\r\n  }\r\n\r\n  \r\n  onOperatorsInputChange(){\r\n    const searchInput = this.operatorSearch.nativeElement.value ?\r\n    this.operatorSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.operators = this._operators.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onPopNameInputChange(){\r\n    const searchInput = this.popNameSearch.nativeElement.value ?\r\n    this.popNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.popNames = this._popNames.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n\r\n  onTechNameInputChange(){\r\n    const searchInput = this.techNameSearch.nativeElement.value ?\r\n    this.techNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.techNames = this._techNames.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onTransmissionMediaInputChange(){\r\n    const searchInput = this.transmissionMediaSearch.nativeElement.value ?\r\n    this.transmissionMediaSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.transmissionMedia = this._transmissionMedia.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  \r\n  onRemedyActionInputChange(){\r\n    const searchInput = this.remedyActionsSearch.nativeElement.value ?\r\n    this.remedyActionsSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.remedyActions = this._remedyActions.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onStatusInputChange(){\r\n    const searchInput = this.statusNameSearch.nativeElement.value ?\r\n    this.statusNameSearch.nativeElement.value.toLowerCase() : '' ;\r\n    this.status = this._status.filter(u=> {\r\n      const name : string= u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1 ;\r\n    });\r\n  }\r\n  onClear() {\r\n    this.form.reset();\r\n    this.notificationService.success(':: Successfully Submitted');\r\n  }\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      this.loading=true;\r\n      this.dailyOperation.complaintNumber = Number(this.form.value.complaintNumber);\r\n      this.dailyOperation.psdid = Number(this.form.value.PSDID);\r\n      this.dailyOperation.circuitID = Number(this.form.value.circuitID);\r\n      this.dailyOperation.customerName = this.form.value.customerName;\r\n      this.dailyOperation.popNameId = Number(this.form.value.popNameIds);\r\n      this.dailyOperation.zoneName =  this.form.value.zoneName;\r\n      this.dailyOperation.operatorId = Number(this.form.value.operatorIds);\r\n      this.dailyOperation.techNameId = Number(this.form.value.techNameIds);\r\n      this.dailyOperation.remedyActionId = Number(this.form.value.remedyActionIds);\r\n      this.dailyOperation.notes = this.form.value.notes;\r\n      this.dailyOperation.transmissionMediaId = Number(this.form.value.transmissionMediaIds);\r\n      this.dailyOperation.statusId = Number(this.form.value.statusIds);\r\n      this.dailyOperation.assignedTo = this.form.value.assignedTo;\r\n      this.dailyOperation.createdDate = this.form.value.createdDate;\r\n      this.dailyOperation.closedDate = this.form.value.closedDate;\r\n      this.dailyOperation.updatedBy = localStorage.getItem('userName') + \" \";\r\n      this.dailyOperation.updateDate = new Date();\r\n      this.service.updateDailyOperation(this.dailyOperation).subscribe(res => {\r\n        this.onClose();\r\n        setTimeout(()=>{\r\n          this.loading=false;\r\n        },0)\r\n        this.notificationService.success(':: Successfully Updated');\r\n      }, error => {\r\n        setTimeout(()=>{\r\n          this.loading=false;\r\n        },0)\r\n        this.notificationService.warn(':: An Error Occured')\r\n      }\r\n      );\r\n\r\n    }\r\n  }\r\n  onClose() {\r\n    this.form.reset();\r\n    this.dialogRef.close();\r\n\r\n  }\r\n\r\n  OnChangeZoneName(event: any) {\r\n    let zoneId = Number(event.value);\r\n    this.service.GetPopNameByZoneId(zoneId).subscribe(res => {\r\n      this.popNames = res.data as IpopName[];\r\n    });\r\n  }\r\n\r\n  OnChangePopName(event: any) {\r\n    let popNameId = Number(event.value);\r\n    this.service.GetZoneName(popNameId).subscribe(res => {\r\n      let zoneName = res.data as IzoneName;\r\n      this.form.patchValue({\r\n        zoneName: zoneName.name.toString()\r\n      })\r\n    });\r\n  }\r\n\r\n  IsBiger : boolean = false;\r\n  handleclosedDateChange(event : any){\r\n    // let createdDate = moment.tz(this.form.value.createdDate, 'Etc/UTC');\r\n    let closedDate =  moment(this.form.value.closedDate._d);\r\n    let createdDate =  moment(this.form.value.createdDate);\r\n  \r\n    if(createdDate > closedDate){\r\n      this.IsBiger = true;\r\n    }\r\n    else  if(this.form.value.createdDate._d > this.form.value.closedDate._d){\r\n      this.IsBiger = true;\r\n    }\r\n    else{\r\n      this.IsBiger = false;\r\n    }\r\n  }\r\n\r\nisDisabled = false;\r\nonChecknameIsValid()\r\n{\r\n  this.dailyOperation.assignedTo = this.form.value.assignedTo;\r\n  this.service.IsNameValid(this.dailyOperation).subscribe(\r\n    res =>{\r\n  if(res.status )\r\n  {this.isDisabled = false}\r\n  else {this.isDisabled = true}\r\n  });\r\n}\r\n}\r\n","<mat-card class=\"example-card\">\r\n  <form [formGroup]=\"form\" class=\"form-normal\" (submit)=\"onSubmit()\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Daily Operation Form\r\n        <div class=\"\" style=\"float: right;\">\r\n          <button class=\"option submit\" type=\"submit\" [disabled]=\"IsBiger || isDisabled\"><small>Submit</small></button>\r\n          <span class=\"separator mx-1\">|</span>\r\n          <span class=\"option text-danger\" (click)=\"onClose()\"><small>Cancel</small></span>\r\n\r\n        </div>\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n    <mat-grid-list cols=\"2\" rowHeight=\"450px\">\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container \">\r\n          <input type=\"hidden\" formControlName=\"id\">\r\n          <mat-form-field>\r\n            <input formControlName=\"complaintNumber\" matInput placeholder=\"complaint Number*\">\r\n            <mat-error>This field accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"PSDID\" matInput placeholder=\"PSDID*\">\r\n            <mat-error>This field is mandatory and accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"circuitID\" matInput placeholder=\"circuit ID*\">\r\n            <mat-error>This field is mandatory and accept only number.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"customerName\" matInput placeholder=\"customer Name*\">\r\n            <mat-error>This field is mandatory and accept only characters.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-select class=\"select\"  formControlName=\"popNameIds\" placeholder=\"pop Name*\"\r\n              (selectionChange)=\"OnChangePopName($event)\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #popNameSearch (input)=\"onPopNameInputChange()\" >\r\n              <ng-container *ngFor=\"let popNameIds of popNames\">\r\n                <mat-option value=\"{{popNameIds.id}}\">{{popNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"zoneName\" matInput placeholder=\"zone Name*\" readonly>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n         \r\n          <mat-form-field>\r\n            <mat-select class=\"select\"  formControlName=\"operatorIds\" placeholder=\"operator Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #operatorSearch (input)=\"onOperatorsInputChange()\" >\r\n              <ng-container *ngFor=\"let operatorIds of operators\">\r\n                <mat-option value=\"{{operatorIds.id}}\">{{operatorIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n        \r\n        </div>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container\">\r\n          <mat-form-field>\r\n            <mat-select  class=\"select\" formControlName=\"techNameIds\" placeholder=\"tech Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #techNameSearch (input)=\"onTechNameInputChange()\" >\r\n              <ng-container *ngFor=\"let techNameIds of techNames\">\r\n                <mat-option value=\"{{techNameIds.id}}\">{{techNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-select  class=\"select\" formControlName=\"remedyActionIds\" placeholder=\"Remedy Action Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #remedyActionsSearch (input)=\"onRemedyActionInputChange()\" >\r\n              <ng-container *ngFor=\"let remedyActionIds of remedyActions\">\r\n                <mat-option value=\"{{remedyActionIds.id}}\">{{remedyActionIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"notes\" matInput placeholder=\"notes*\">\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <mat-select  class=\"select\" formControlName=\"transmissionMediaIds\" placeholder=\"transmission Media Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #transmissionMediaSearch (input)=\"onTransmissionMediaInputChange()\" >\r\n              <ng-container *ngFor=\"let transmissionMediaIds of transmissionMedia\">\r\n                <mat-option value=\"{{transmissionMediaIds.id}}\">{{transmissionMediaIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <mat-select  class=\"select\" formControlName=\"statusIds\" placeholder=\"status *\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"status name\" #statusNameSearch (input)=\"onStatusInputChange()\" >\r\n              <ng-container *ngFor=\"let statusIds of status\">\r\n                <mat-option value=\"{{statusIds.id}}\">{{statusIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input formControlName=\"assignedTo\" matInput placeholder=\"AssignedTo*\" (keyup)=\"onChecknameIsValid()\" [readonly]=\"userRole=='FieldOperationReport_User'\">\r\n            <mat-error>This field is mandatory.</mat-error>\r\n            <span class=\"mat-error\" *ngIf=\"isDisabled\">invalid Name</span>\r\n          </mat-form-field>\r\n\r\n\r\n          <mat-form-field>\r\n            <input [ngxMatDatetimePicker]=\"createdDate\"  formControlName=\"createdDate\" matInput\r\n              placeholder=\"created Date*\" readonly>\r\n\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(createdDate)\"></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #createdDate >\r\n            </ngx-mat-datetime-picker>\r\n            <mat-error>This field is mandatory.</mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input [ngxMatDatetimePicker]=\"closedDate\" (dateChange)=\"handleclosedDateChange($event)\"  formControlName=\"closedDate\" matInput placeholder=\"closed Date*\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(closedDate)\" ></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #closedDate >\r\n            </ngx-mat-datetime-picker>\r\n            <mat-error *ngIf=\"true\">This field should greater than or equal created Date.</mat-error>\r\n            <span *ngIf=\"IsBiger\" class=\"mat-error ng-tns-c54-51\">This field should be  less than or equal created Date.</span>\r\n          </mat-form-field>\r\n\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n\r\n\r\n\r\n    </mat-grid-list>\r\n\r\n\r\n\r\n  </form>\r\n  <!-- [disabled]=\"form.invalid\" -->\r\n\r\n\r\n <app-loader *ngIf=\"loading\"></app-loader>\r\n\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Istatus } from 'src/app/Model/Istatus';\r\nimport { StatusService } from 'src/app/Services/status.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent implements OnInit {\r\n\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  loader:boolean=false;\r\n  showNewRow: boolean = false;\r\n  status: Istatus[] = [];\r\n  statusName: string = '';\r\n  statusId: number = 0;\r\n  isNameRepeated : boolean =false;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n\r\n  constructor(private dialog: MatDialog,\r\n    public service: StatusService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService) {\r\n    this.titleService.setTitle(\"Status\");\r\n  }\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['id', 'name','action'];\r\n  dataSource = new MatTableDataSource(this.status);\r\n  \r\n  LoadStatus() {\r\n      this.service.getStatus(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n        this.status.push(...response?.data);\r\n        this.status.length = response?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource<any>(this.status);\r\n        this.dataSource._updateChangeSubscription();\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n        this.dataSource.sort = this.sort as MatSort;\r\n\r\n      })\r\n  }\r\n  getRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    this.loader = true;\r\n    this.service.getStatus(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n      this.status = response?.data;\r\n      this.status.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.status);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n    })\r\n   setTimeout(()=>this.loader = false,2000) ;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let status: Istatus =\r\n    {\r\n      id: this.statusId,\r\n      name: this.statusName\r\n    }\r\n    if (this.statusId == 0) {\r\n      this.service.insertStatus(status).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadStatus();\r\n          this.statusName = '';\r\n          this.statusId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updateStatus(status).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadStatus();\r\n          this.statusName = '';\r\n          this.statusId = 0;\r\n        },\r\n        error => { \r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\nthis.show=false;\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deleteStatus(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');    \r\n          this.LoadStatus();     \r\n        },\r\n        error=>{\r\n          this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    }    this.LoadStatus();\r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let statusEdit: Istatus =\r\n    {\r\n      id: row.id,\r\n      name: row.name,\r\n    }\r\n    this.service.updateStatus(statusEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n        this.LoadStatus();\r\n        this.statusName = '';\r\n        this.statusId = 0;\r\n      },\r\n      error => { \r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n        this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated=false;\r\n  }\r\n  addNew(){\r\n    this.show=true;\r\n  }\r\n\r\n  onChecknameIsalreadysign()\r\n  {\r\n    this.service.nameIsalreadysign(this.statusName , this.statusId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n  onChecknameIsalreadysignWhenUpdate(row : any)\r\n  {\r\n   let _statusName = row.name;\r\n   let _statusId = row.id;\r\n    this.service.nameIsalreadysign(_statusName , _statusId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameUpdatedRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameUpdatedRepeated=true;\r\n    }\r\n    });\r\n  }\r\n  //this section for pagination \r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  pagesizedef: number = 25;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    this.loader = true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n   \r\n      this.service.getStatus(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n        if (res.status == true) {\r\n          this.loader = false;\r\n          this.status.length = cursize;\r\n          this.status.push(...res?.data);\r\n          this.status.length = res?.pagination.totalCount;\r\n          this.dataSource = new MatTableDataSource<any>(this.status);\r\n          this.dataSource._updateChangeSubscription();\r\n          this.dataSource.paginator = this.paginator as MatPaginator;\r\n          this.loader = false;\r\n        }\r\n        else this.notificationService.warn(res.error)\r\n      }, err => {\r\n        this.notificationService.warn(\"! Fail\");\r\n        this.loader = false;\r\n\r\n      })\r\n    \r\n\r\n  }\r\n  lastcol: string = 'Id';\r\n  lastdir: string = 'asc';\r\n\r\n  sortData(sort: any) {\r\n    if (this.pIn != 0)\r\n      window.location.reload();\r\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n      if (this.lastdir == 'asc')\r\n        sort.direction = 'desc';\r\n      else\r\n        sort.direction = 'asc';\r\n    }\r\n    this.lastcol = sort.active; this.lastdir = sort.direction;\r\n    var c = this.pageIn;\r\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n  }\r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n      Status\r\n      <div style=\"float: right;\">\r\n        <span class=\"add\" (click)=\"addNew()\">+ Add New</span></div>\r\n        </mat-card-title>\r\n\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label>Status Name</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"statusName\" (keyup)=\"onChecknameIsalreadysign()\">\r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"statusId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!statusName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\" mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"table-striped\" [dataSource]=\"dataSource\"   #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear >\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled\">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\"   (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n               \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                  \r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\" (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n</mat-paginator>\r\n\r\n</mat-card>\r\n\r\n<!--   \r\n<app-loader *ngIf=\"loading\">\r\n</app-loader> -->\r\n\r\n\r\n","export interface Pagination {\r\n    currentPage : number;\r\n    itemsPerPage : number;\r\n    totalCount : number;\r\n    totalPages : number;\r\n}\r\n\r\nexport  class PaginatedResult<T>{\r\n    result : T  = <T>{};\r\n    pagination : Pagination = <Pagination>{};\r\n\r\n}","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { ILogs } from '../Model/ILogs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n  url =  \"http://172.29.29.8:2021/api/Logs\";\r\n  url2 =\"https://localhost:44375/api/Logs\" ;\r\n  url3 =  \"http://172.29.29.8:2031/api/Logs\";\r\n  //url3 =  \"http://172.29.29.8:5050/api/Logs\";\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLogs(PageNumber :number , PageSize :number , searchValue:string ,sortcolumn:string,sortcolumndir:string){\r\n    let params = new HttpParams();\r\n    if(PageNumber !== null && PageSize !== null ){\r\n      params = params.append('pageNumber' , PageNumber.toString());\r\n      params = params.append('pageSize' , PageSize.toString());\r\n      params = params.append('searchValue' , searchValue.toString());\r\n      params = params.append('sortcolumn' , sortcolumn.toString());\r\n      params = params.append('sortcolumndir' , sortcolumndir.toString());\r\n    }\r\n    return this.http.get<any>(`${this.url3}`  , {observe:'response' , params}).pipe(\r\n      map(response => {\r\n         return response.body ;\r\n      })\r\n    )\r\n  }\r\n  getRequests(): Observable<ILogs[]>{\r\n    return this.http.get<ILogs[]>(`${this.url3}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-delete',\n  templateUrl: './delete.component.html',\n  styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DeleteComponent>\n    ) { }\n\n  ngOnInit(): void {\n  }\n  onClose(){\n    this.dialogRef.close(false);\n    // this.dialogRef.close();\n\n  }\n  onDelete(){\n    this.dialogRef.close(true);\n        // this.onClose();\n\n  }\n\n}\n","<mat-toolbar>\n    <mat-icon id=\"trash\">delete_outline</mat-icon>\n    <span class=\"\">Delete</span>\n    <button  class=\"btn-dialog-close\"  (click)=\"onClose()\" id=\"close-icon\" >\n        <mat-icon>clear</mat-icon></button> \n  \n   </mat-toolbar> \n<div>\n    <div class=\"content-container\">\n     \n      \n       <span class=\"content-span full-width\">\n         Are you sure you want to delete this Record ?\n        </span>\n    </div>\n    <button mat-flat-button id=\"no-button\" (click)=\"onClose()\">NO</button>\n    <button mat-flat-button id=\"yes-button\" (click)=\"onDelete()\">YES</button>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Title } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ILogs } from 'src/app/Model/ILogs';\nimport { LogsService } from 'src/app/Services/logs.service';\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\n\n@Component({\n  selector: 'app-logs',\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css']\n})\nexport class LogsComponent implements OnInit {\n\n  pageNumber = 1;\n  pageSize = 25;\n  sortColumnDef: string = \"Id\";\n  SortDirDef: string = 'desc';\n  public colname: string = 'Id';\n  public coldir: string = 'desc';\n  searchKey:string ='' ;\n  Logs :ILogs []=[];\n  @ViewChild(MatSort) sort?:MatSort ;\n  @ViewChild(MatPaginator) paginator?:MatPaginator ;\n  displayedColumns: string[] = ['id','elementId','descirption' ,'creationDate','parentType','userName','groupName','actionType'];\n  dataSource=new MatTableDataSource(this.Logs);\n\n  constructor(private logsService : LogsService ,\n    private dialog: MatDialog,\n    private dialogService:DeleteServiceService,\n   private router: Router,private _activatedRoute: ActivatedRoute, private titleService:Title,\n   public notificationService: NotificationMsgService) { \n    this.titleService.setTitle(\"Field Opertion Report | Logs\"); \n   }\n\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\n\n  this.logsService.getLogs(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\n    this.Logs = response?.data;\n    this.Logs.length = response?.pagination.totalCount;\n    this.dataSource = new MatTableDataSource<any>(this.Logs);\n    this.dataSource._updateChangeSubscription();\n    this.dataSource.paginator = this.paginator as MatPaginator;\n  })\n\n}\n\n  ngOnInit(): void {\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\n  }\n\n    onSearchClear(){\n      this.searchKey ='';\n      this.applyFilter();\n    }\n    applyFilter(){let searchData = this.searchKey.trim().toLowerCase();\n      this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\n    }\n\n  //this section for pagination \n  pageIn = 0;\n  previousSizedef = 25;\n  pagesizedef: number = 25;\n  public pIn: number = 0;\n  pageChanged(event: any) {\n    this.pIn = event.pageIndex;\n    this.pageIn = event.pageIndex;\n    this.pagesizedef = event.pageSize;\n    let pageIndex = event.pageIndex;\n    let pageSize = event.pageSize;\n    let previousSize = pageSize * pageIndex;\n    this.previousSizedef = previousSize;\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\n  }\n  getRequestdataNext( cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\n      this.logsService.getLogs(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\n        if (res.status == true) {\n          this.Logs.length = cursize;\n          this.Logs.push(...res?.data);\n          this.Logs.length = res?.pagination.totalCount;\n          this.dataSource = new MatTableDataSource(this.Logs);\n          this.dataSource._updateChangeSubscription();\n          this.dataSource.paginator = this.paginator as MatPaginator;\n        }\n        else this.notificationService.warn(res.error)\n      }, err => {\n        this.notificationService.warn(\"! Fail\");\n\n      })\n    \n\n  }\n\n  lastcol: string = 'Id';\n  lastdir: string = 'asc';\n\n  sortData(sort: any) {\n    if (this.pIn != 0)\n      window.location.reload();\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\n      if (this.lastdir == 'asc')\n        sort.direction = 'desc';\n      else\n        sort.direction = 'asc';\n    }\n    this.lastcol = sort.active; this.lastdir = sort.direction;\n    var c = this.pageIn;\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\n  }\n}\n","<mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n        <mat-card-title>\r\n            All Logs\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n\r\n\r\n    <div class=\"search-div\">\r\n        <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n            <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\r\n            <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n                <mat-icon>close</mat-icon>\r\n            </button>\r\n        </mat-form-field>\r\n    </div>\r\n    <div class=\"spinner\" *ngIf=\"dataSource==null;else table\">\r\n        <span>Loading Data ...</span>\r\n        <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n      </mat-progress-bar>\r\n        \r\n      </div>\r\n      <ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n        <mat-table [dataSource]=\"dataSource\" #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear>\r\n            <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Id</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"id\"> {{element.id}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"elementId\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Element Id</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"elementId\"> {{element.elementId}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"descirption\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Description</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"descirption\"> {{element.descirption}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"creationDate\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> CreationDate</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"creationDate\"> {{element.creationDate| date:'medium'}}\r\n                </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"parentType\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Parent Type</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"parentType\"> {{element.parentType}} </mat-cell>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"userName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> User Name</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"userName\"> {{element.userName}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"groupName\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Group Name</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"groupName\"> {{element.groupName}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"actionType\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header><b> Action Type</b> </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\" data-label=\"actionType\"> {{element.actionType}} </mat-cell>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"loading\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                    <img src=\"../../../assets/image/cylinder.gif\" height=\"90px\" width=\"100px\">\r\n                </mat-footer-cell>\r\n\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"noData\">\r\n                <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n                    No data\r\n                </mat-footer-cell>\r\n\r\n            </ng-container>\r\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n            <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':(dataSource.data.length!=null)}\">\r\n            </mat-footer-row>\r\n            <mat-footer-row *matFooterRowDef=\"['noData']\"\r\n                [ngClass]=\"{'hide':!(dataSource!=null && dataSource.data.length==0)}\"></mat-footer-row>\r\n\r\n        </mat-table>\r\n    </div>\r\n    </ng-template>\r\n    <mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n    </mat-paginator>\r\n</mat-card>","export class PaginationModel {\r\n    selectItemsPerPage: number[] = [5, 10, 25, 100];\r\n    pageSize = this.selectItemsPerPage[0];\r\n    pageIndex = 1;\r\n    allItemsLength = 0;\r\n}\r\n","import { Component, ElementRef, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { IdailyOperations } from 'src/app/Model/IdailyOperations';\r\nimport { Ioperator } from 'src/app/Model/Ioperator';\r\nimport { IpopName } from 'src/app/Model/IpopName';\r\nimport { IremedyAction } from 'src/app/Model/IremedyAction';\r\nimport { Istatus } from 'src/app/Model/Istatus';\r\nimport { ItechName } from 'src/app/Model/ItechName';\r\nimport { ItransmissionMedia } from 'src/app/Model/ItransmissionMedia';\r\nimport { DailyOperationsService } from 'src/app/Services/daily-operations.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\nimport { AddDailyOperationComponent } from '../add-daily-operation/add-daily-operation.component';\r\nimport { EditDailyOpertionComponent } from '../edit-daily-opertion/edit-daily-opertion.component';\r\nimport { saveAs } from 'file-saver';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { IdailyOperationsSearch } from 'src/app/Model/IdailyOperationsSearch';\r\nimport { IzoneName } from 'src/app/Model/IzoneName';\r\nimport { Pagination } from 'src/app/Model/pagination';\r\n@Component({\r\n  selector: 'app-daily-operation',\r\n  templateUrl: './daily-operation.component.html',\r\n  styleUrls: ['./daily-operation.component.css']\r\n})\r\nexport class DailyOperationComponent implements OnInit {\r\n  @ViewChild('popNameSearch') popNameSearch!: ElementRef;\r\n  @ViewChild('operatorSearch') operatorSearch!: ElementRef;\r\n  @ViewChild('techNameSearch') techNameSearch!: ElementRef;\r\n  @ViewChild('statusNameSearch') statusNameSearch!: ElementRef;\r\n  @ViewChild('transmissionMediaSearch') transmissionMediaSearch!: ElementRef;\r\n  @ViewChild('remedyActionsSearch') remedyActionsSearch!: ElementRef;\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  loader: boolean=false;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  showNewRow: boolean = false;\r\n  dailyOperations: any[] = [];\r\n  dailyOperation: IdailyOperations = <IdailyOperations>{};\r\n  dailyOperationSearch: IdailyOperationsSearch = <IdailyOperationsSearch>{};\r\n  popNames: IpopName[] = [];\r\n  _popNames: IpopName[] = [];\r\n  status: Istatus[] = [];\r\n  _status: Istatus[] = [];\r\n  techNames: ItechName[] = [];\r\n  _techNames: ItechName[] = [];\r\n  transmissionMedia: ItransmissionMedia[] = [];\r\n  _transmissionMedia: ItransmissionMedia[] = [];\r\n  remedyActions: IremedyAction[] = [];\r\n  _remedyActions: IremedyAction[] = [];\r\n  operators: Ioperator[] = [];\r\n  _operators: Ioperator[] = [];\r\n  selected: string = \"\";\r\n  loading: boolean = false;\r\n  panelOpenState = false;\r\n  displayAll: Boolean = false;\r\n  isFilterationData: Boolean = false;\r\n  pageNumber = 1;\r\n  pageSize = 25;\r\n  pagination?: Pagination;\r\n  public colname: string = 'createdDate';\r\n  public coldir: string = 'desc';\r\n  sortColumnDef: string = \"createdDate\";\r\n  SortDirDef: string = 'desc';\r\n  searchData : string = '';\r\n  form: FormGroup = new FormGroup({\r\n    complaintNumber: new FormControl(''),\r\n    PSDID: new FormControl(''),\r\n    circuitID: new FormControl(''),\r\n    customerName: new FormControl(''),\r\n    popNameIds: new FormControl(''),\r\n    zoneName: new FormControl(''),\r\n    operatorIds: new FormControl(''),\r\n    assignedTo: new FormControl(''),\r\n    techNameIds: new FormControl(''),\r\n    remedyActionIds: new FormControl(''),\r\n    transmissionMediaIds: new FormControl(''),\r\n    statusIds: new FormControl(''),\r\n    createdDateFrom: new FormControl(''),\r\n    createdDateTo: new FormControl(''),\r\n    closedDateFrom: new FormControl(''),\r\n    closedDateTo: new FormControl(''),\r\n\r\n  });\r\n \r\n\r\n  constructor(private router: Router, private dialog: MatDialog, public service: DailyOperationsService, private titleService: Title, private dialogService: DeleteServiceService, public notificationService: NotificationMsgService, private _bottomSheet: MatBottomSheet) {\r\n    this.titleService.setTitle(\"DailyOperations\");\r\n  }\r\n\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = [ 'id','all',  'complaintNumber', 'psdid', 'circuitID', 'customerName', '_PopName',\r\n    'zoneName', 'createdDate', 'createdTime', 'closedDate', 'closedTime','sla','_OperatorName', 'assignedTo', '_TechName', '_RemedyActionName', 'notes', '_TransmissionMediaName',\r\n    '_StatusName',   'updateDate', 'createdBy','updatedBy', 'isToLate','flag','action'];\r\n  dataSource = new MatTableDataSource<any>();\r\n  getRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    this.loader = true;\r\n    if (this.displayAll) {\r\n      this.service.getAllDaily(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n        this.dailyOperations = response?.data as IdailyOperations[];\r\n        this.dailyOperations.length = response?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource<any>(this.dailyOperations);\r\n      this.dataSource._updateChangeSubscription();\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n        \r\n      })\r\n    } else {     \r\n      this.service.getDaily(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n        this.dailyOperations = response?.data as IdailyOperations[];\r\n        this.dailyOperations.length = response?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource<any>(this.dailyOperations);\r\n        this.dataSource._updateChangeSubscription();\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n      })\r\n    }\r\n    this.service.getListsForCreate().subscribe(res => {\r\n      this.operators = res.operators as Ioperator[];\r\n      this._operators = res.operators as Ioperator[];\r\n      this.popNames = res.popNames as IpopName[];\r\n      this._popNames = res.popNames as IpopName[];\r\n      this.remedyActions = res.remedyActions as IremedyAction[];\r\n      this._remedyActions = res.remedyActions as IremedyAction[];\r\n      this.status = res._status as Istatus[];\r\n      this._status = res._status as Istatus[];\r\n      this.techNames = res.techNames as ItechName[];\r\n      this._techNames = res.techNames as ItechName[];\r\n      this.transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n      this._transmissionMedia = res.transmissionMedia as ItransmissionMedia[];\r\n    });\r\n    //this.loading = false;\r\n   setTimeout(()=> this.loader = false,500);\r\n  }\r\n  ngOnInit() {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, this.searchData ,  this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n\r\n  onOperatorsInputChange() {\r\n    const searchInput = this.operatorSearch.nativeElement.value ?\r\n      this.operatorSearch.nativeElement.value.toLowerCase() : '';\r\n    this.operators = this._operators.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n  onPopNameInputChange() {\r\n    const searchInput = this.popNameSearch.nativeElement.value ?\r\n      this.popNameSearch.nativeElement.value.toLowerCase() : '';\r\n    this.popNames = this._popNames.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n\r\n  onTechNameInputChange() {\r\n    const searchInput = this.techNameSearch.nativeElement.value ?\r\n      this.techNameSearch.nativeElement.value.toLowerCase() : '';\r\n    this.techNames = this._techNames.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n  onTransmissionMediaInputChange() {\r\n    const searchInput = this.transmissionMediaSearch.nativeElement.value ?\r\n      this.transmissionMediaSearch.nativeElement.value.toLowerCase() : '';\r\n    this.transmissionMedia = this._transmissionMedia.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n\r\n  onRemedyActionInputChange() {\r\n    const searchInput = this.remedyActionsSearch.nativeElement.value ?\r\n      this.remedyActionsSearch.nativeElement.value.toLowerCase() : '';\r\n    this.remedyActions = this._remedyActions.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n  onStatusInputChange() {\r\n    const searchInput = this.statusNameSearch.nativeElement.value ?\r\n      this.statusNameSearch.nativeElement.value.toLowerCase() : '';\r\n    this.status = this._status.filter(u => {\r\n      const name: string = u.name.toLowerCase();\r\n      return name.indexOf(searchInput) > -1;\r\n    });\r\n  }\r\n\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  onAdvancedSearchClear() {\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    this.isFilterationData = true;\r\n    this.searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(this.pageNumber, this.pageSize, this.searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n  AdvancedSearch() {\r\n   this.isFilterationData = true;\r\n   this.loader=true;\r\n   //setTimeout(()=>this.loader=true ,10000 )\r\n  //  this.loading=true;\r\n    this.togglePanel();\r\n    this.dailyOperationSearch.complaintNumber = Number(this.form.value.complaintNumber);\r\n    this.dailyOperationSearch.psdid = Number(this.form.value.PSDID);\r\n    this.dailyOperationSearch.circuitID = Number(this.form.value.circuitID);\r\n    this.dailyOperationSearch.customerName = this.form.value.customerName;\r\n    this.dailyOperationSearch.popNameId = Number(this.form.value.popNameIds);\r\n    this.dailyOperationSearch.zoneName = this.form.value.zoneName;\r\n    this.dailyOperationSearch.assignedTo = this.form.value.assignedTo;\r\n    this.dailyOperationSearch.operatorId = Number(this.form.value.operatorIds);\r\n    this.dailyOperationSearch.techNameId = Number(this.form.value.techNameIds);\r\n    this.dailyOperationSearch.remedyActionId = Number(this.form.value.remedyActionIds);\r\n    this.dailyOperationSearch.notes = this.form.value.notes;\r\n    this.dailyOperationSearch.transmissionMediaId = Number(this.form.value.transmissionMediaIds);\r\n    this.dailyOperationSearch.statusId = Number(this.form.value.statusIds);\r\n    this.dailyOperationSearch.createdDateFrom = this.form.value.createdDateFrom == \"\" ? null : this.form.value.createdDateFrom;\r\n    this.dailyOperationSearch.createdDateTo = this.form.value.createdDateTo == \"\" ? null : this.form.value.createdDateTo;\r\n    this.dailyOperationSearch.closedDateFrom = this.form.value.closedDateFrom == \"\" ? null : this.form.value.closedDateFrom;\r\n    this.dailyOperationSearch.closedDateTo = this.form.value.closedDateTo == \"\" ? null : this.form.value.closedDateTo;\r\n    this.service.AdvancedSearch(this.dailyOperationSearch).subscribe(res => {\r\n      this.dailyOperations = res as IdailyOperations[];\r\n      this.dataSource = new MatTableDataSource(this.dailyOperations);\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n      //this.loader=false;\r\n      setTimeout(()=>this.loader=false ,0 )\r\n    });\r\n\r\n  }\r\n  //////////////import file\r\n  @Input() param = 'file';\r\n  @ViewChild('LIST') template!: TemplateRef<any>;\r\n  @ViewChild('LISTF') templateF!: TemplateRef<any>;\r\n  @ViewChild('fileInput') fileInput?: ElementRef;\r\n  @ViewChild('Msg') Msg!: TemplateRef<any>;\r\n  @ViewChild('data') data?: ElementRef;\r\n  fileAttr = 'Choose File';\r\n  fileAttrF = 'Choose File';\r\n  htmlToAdd: string = \"\";\r\n  fileuploaded: any;\r\n\r\n  /*******************************file **************************************** */\r\n  ////////////////Export excel/////////////////////////////////////////\r\n  @ViewChild('TABLE') table?: ElementRef;\r\n  Ids: string[] = [];\r\n  // select all\r\n  isall: boolean = false;\r\n  onselectcheckall(event: any) {\r\n    if (event.checked) {\r\n\r\n      this.isall = true;\r\n    }\r\n    else {\r\n      this.isall = false;\r\n\r\n    }\r\n  }\r\n\r\n  onselectcheck(event: any, r: any) {\r\n    if (event.checked) {\r\n      this.Ids.push(r.id.toString());\r\n    }\r\n    else {\r\n      const index: number = this.Ids.indexOf(r.id.toString());\r\n      if (index !== -1) {\r\n        this.Ids.splice(index, 1);\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  ExportTOExcel() {\r\n    if (this.isall && this.displayAll == false && this.isFilterationData==false) {\r\n      this.service.ExportExcelWithData().subscribe(res => {\r\n\r\n        const blob = new Blob([res], { type: 'application/vnd.ms.excel' });\r\n        const file = new File([blob], 'DailyFieldOperationsReport' + Date.now() + '.xlsx', { type: 'application/vnd.ms.excel' });\r\n\r\n        saveAs(file, 'DailyFieldOperationsReport' + Date.now() + '.xlsx')\r\n\r\n      }, err => {\r\n\r\n        this.notificationService.warn(\"! Fail\")\r\n\r\n      });\r\n    }\r\n    else if (this.isall && this.displayAll && this.isFilterationData==false) {\r\n      this.service.DownloadAllDisplayDataOfExcel().subscribe(res => {\r\n\r\n        const blob = new Blob([res], { type: 'application/vnd.ms.excel' });\r\n        const file = new File([blob], 'DailyFieldOperationsReport' + Date.now() + '.xlsx', { type: 'application/vnd.ms.excel' });\r\n\r\n        saveAs(file, 'DailyFieldOperationsReport' + Date.now() + '.xlsx')\r\n\r\n      }, err => {\r\n\r\n        this.notificationService.warn(\"! Fail\")\r\n\r\n      });\r\n    }\r\n    else if ((this.isall && this.isFilterationData) || (this.isall && this.displayAll && this.isFilterationData)){\r\n      this.service.ExportExcelWithselectData(this.dailyOperations.map(({ id }) => id)).subscribe(res => {\r\n        console.log(this.dailyOperations.map(({ id }) => id));\r\n        const blob = new Blob([res], { type: 'application/vnd.ms.excel' });\r\n        const file = new File([blob], 'Supportrequestedit' + '.xlsx', { type: 'application/vnd.ms.excel' });\r\n        saveAs(file, 'DailyFieldOperationsReport' + Date.now() + '.xlsx')\r\n\r\n      },\r\n        err => {\r\n          this.notificationService.warn(\"! Fail\")\r\n        });\r\n    }\r\n    else {\r\n      if (this.Ids.length == 0) {\r\n        this.notificationService.warn('select rows !')\r\n        return;\r\n      }\r\n\r\n      this.service.ExportExcelWithselectData(this.Ids).subscribe(res => {\r\n\r\n        const blob = new Blob([res], { type: 'application/vnd.ms.excel' });\r\n        const file = new File([blob], 'Supportrequestedit' + '.xlsx', { type: 'application/vnd.ms.excel' });\r\n        saveAs(file, 'DailyFieldOperationsReport' + Date.now() + '.xlsx')\r\n\r\n      },\r\n        err => {\r\n          this.notificationService.warn(\"! Fail\")\r\n        });\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  uploadFileEvtF(imgFile: any) {\r\n    this.fileuploaded = imgFile.target.files[0];\r\n    if (imgFile.target.files && imgFile.target.files[0]) {\r\n      this.fileAttr = '';\r\n      Array.prototype.forEach.call(imgFile.target.files, (file) => {\r\n        this.fileAttr += file.name + ' - ';\r\n      });\r\n      let reader = new FileReader();\r\n      reader.onload = (e: any) => {\r\n        let image = new Image();\r\n        image.src = e.target.result;\r\n        image.onload = rs => {\r\n          let imgBase64Path = e.target.result;\r\n        };\r\n      };\r\n      reader.readAsDataURL(imgFile.target.files[0]);\r\n\r\n      // Reset if duplicate image uploaded again\r\n      (this.fileInput as ElementRef).nativeElement.value = \"\";\r\n    } else {\r\n      this.fileAttr = 'Choose File';\r\n    }\r\n  }\r\n  addNew() {\r\n    const dialogGonfig = new MatDialogConfig();\r\n    dialogGonfig.disableClose = true;\r\n    dialogGonfig.autoFocus = true;\r\n    dialogGonfig.height = \"90%\";\r\n    dialogGonfig.width = \"85%\";\r\n    dialogGonfig.panelClass = 'modals-dialog';\r\n    this.dialog.open(AddDailyOperationComponent, dialogGonfig).afterClosed().subscribe(result => {\r\n      this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.resetfile();\r\n    this._bottomSheet.dismiss();\r\n  }\r\n  resetfile() {\r\n    this.fileAttr = 'Choose File';\r\n  }\r\n  openBottomSheetMsg() {\r\n    this._bottomSheet.open(this.Msg, {\r\n      panelClass: 'msg-dialog-container',\r\n      disableClose: true\r\n    });\r\n  }\r\n  openBottomSheet() {\r\n    this._bottomSheet.open(this.template, {\r\n      panelClass: 'botttom-dialog-container',\r\n      disableClose: true\r\n    });\r\n  }\r\n  openBottomSheetedit() {\r\n    this._bottomSheet.open(this.templateF, {\r\n      panelClass: 'botttom-dialog-container',\r\n      disableClose: true\r\n\r\n\r\n    });\r\n\r\n  }\r\n\r\n  upLoadF() {\r\n    const fd = new FormData();\r\n    fd.append(this.param, this.fileuploaded);\r\n    this.service.addFromFile(fd).subscribe(res => {\r\n      if (res.status == true) {\r\n        this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n        this.fileAttr = 'Choose File';\r\n        this.resetfile();\r\n        this._bottomSheet.dismiss();\r\n        this.openBottomSheetMsg();\r\n        this.htmlToAdd = res.data\r\n      }\r\n      else {\r\n        this.openBottomSheetMsg();\r\n        this.htmlToAdd = res.error;\r\n      }\r\n    }\r\n      , error => {\r\n        this.notificationService.warn(\"!! Fail\")\r\n        this.resetfile();\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  onDelete(r: any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.service.deleteDailyOperation(r.id).subscribe(\r\n          rs => {\r\n            this.notificationService.success(':: successfully Deleted');\r\n            this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n          },\r\n          error => { this.notificationService.warn(':: An Error Occured') }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  editROw(id: any) {\r\n    const dialogGonfig = new MatDialogConfig();\r\n    dialogGonfig.disableClose = true;\r\n    dialogGonfig.autoFocus = true;\r\n    dialogGonfig.width = \"85%\";\r\n    dialogGonfig.height = \"90%\";\r\n\r\n    dialogGonfig.panelClass = 'modals-dialog';\r\n    dialogGonfig.data = { id }\r\n    this.dialog.open(EditDailyOpertionComponent, dialogGonfig).afterClosed().subscribe(result => {\r\n      this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n\r\n    });\r\n\r\n  }\r\n  updateEdit(r: any) {\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n  }\r\n\r\n  ExportTOEmptyExcel() {\r\n\r\n    this.service.ExportEmptyExcel().subscribe(res => {\r\n\r\n      const blob = new Blob([res], { type: 'application/vnd.ms.excel' });\r\n      const file = new File([blob], 'DailyFieldOperationsReport' + Date.now() + '.xlsx', { type: 'application/vnd.ms.excel' });\r\n      saveAs(file, 'DailyFieldOperationsEmpty' + Date.now() + '.xlsx')\r\n\r\n    }, err => {\r\n      this.notificationService.warn(\"! Fail\")\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  closeMsg() {\r\n    this._bottomSheet.dismiss();\r\n  }\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if (this.form.valid) {\r\n      this.dailyOperation.id = this.form.value.id;\r\n      this.dailyOperation.complaintNumber = Number(this.form.value.complaintNumber);\r\n      this.dailyOperation.psdid = Number(this.form.value.PSDID);\r\n      this.dailyOperation.circuitID = Number(this.form.value.circuitID);\r\n      this.dailyOperation.customerName = this.form.value.customerName;\r\n      this.dailyOperation.popNameId = Number(this.form.value.popNameIds);\r\n      this.dailyOperation.zoneName = this.form.value.zoneName;\r\n      this.dailyOperation.operatorId = Number(this.form.value.operatorIds);\r\n      this.dailyOperation.techNameId = Number(this.form.value.techNameIds);\r\n      this.dailyOperation.remedyActionId = Number(this.form.value.remedyActionIds);\r\n      this.dailyOperation.notes = this.form.value.notes;\r\n      this.dailyOperation.transmissionMediaId = Number(this.form.value.transmissionMediaIds);\r\n      this.dailyOperation.statusId = Number(this.form.value.statusIds);\r\n      this.dailyOperation.creationDate = new Date();\r\n      this.dailyOperation.createdDate = this.form.value.createdDate;\r\n      this.dailyOperation.closedDate = this.form.value.closedDate == \"\" ? null : this.form.value.closedDate;\r\n      this.dailyOperation.createdBy = localStorage.getItem('userName') + \" \";\r\n      this.dailyOperation.assignedTo = localStorage.getItem('userName') + \" \";\r\n\r\n      this.service.insertDailyOperation(this.dailyOperation).subscribe(res => {\r\n\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n        }, 0)\r\n        this.clearFields();\r\n        //this.notificationService.success(':: Saved Successfully');\r\n      }, error => {\r\n        setTimeout(() => {\r\n          this.loading = false;\r\n        }, 0)\r\n\r\n        //this.notificationService.warn(':: An Error Occured')\r\n      }\r\n      );\r\n\r\n    }\r\n  }\r\n  // OnChangeZoneName(event: any) {\r\n  //   let zoneId = Number(event.value);\r\n  //   this.service.GetPopNameByZoneId(zoneId).subscribe(res => {\r\n  //     this.popNames = res.data as IpopName[];\r\n  //   });\r\n  // }\r\n\r\n  OnChangePopName(event: any) {\r\n    let popNameId = Number(event.value);\r\n    this.service.GetZoneName(popNameId).subscribe(res => {\r\n      let zoneName = res.data as IzoneName;\r\n      this.form.patchValue({\r\n        zoneName: zoneName.name.toString()\r\n      })\r\n    });\r\n  }\r\n  clearFields() {\r\n    this.togglePanel() ;\r\n    this.form.reset();\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  DisplayAll(checked: any) {\r\n    if (checked.checked) {\r\n      this.isFilterationData==false;\r\n      this.displayAll = checked.checked;\r\n      if(this.isFilterationData){  \r\n          this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n             }\r\n      this.service.getAllDaily(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n        this.dailyOperations = response?.data as IdailyOperations[];\r\n        this.dailyOperations.length = response?.pagination.totalCount;\r\n        this.dataSource = new MatTableDataSource<any>(this.dailyOperations);\r\n        this.dataSource.paginator = this.paginator as MatPaginator;\r\n      })\r\n\r\n    } else {\r\n      this.displayAll = checked.checked;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n    }\r\n  }\r\n  //this section for pagination \r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  pagesizedef: number = 25;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    //this.loading = true;\r\n    this.loader=true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n    this.loading = false;\r\n    this.pageSize = pageSize;\r\n    this.pageNumber = pageNum;\r\n    if (this.displayAll) {\r\n      this.service.getAllDaily(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n        if (res.status == true) {\r\n          this.dailyOperations.length = cursize;\r\n          this.dailyOperations.push(...res?.data);\r\n          this.dailyOperations.length = res?.pagination.totalCount;\r\n          this.dataSource = new MatTableDataSource<any>(this.dailyOperations);\r\n          this.dataSource._updateChangeSubscription();\r\n          this.dataSource.paginator = this.paginator as MatPaginator;\r\n          this.loader = false;\r\n        }\r\n        else this.notificationService.warn(res.error)\r\n      }, err => {\r\n        this.notificationService.warn(\"! Fail\");\r\n        this.loader = false;\r\n\r\n      })\r\n    } else {\r\n      this.service.getDaily(this.pageNumber, this.pageSize, search, this.colname, this.coldir).subscribe(res => {\r\n        if (res.status == true) {\r\n          this.dailyOperations.length = cursize;\r\n          this.dailyOperations.push(...res?.data);\r\n          this.dailyOperations.length = res?.pagination.totalCount;\r\n          this.dataSource = new MatTableDataSource<any>(this.dailyOperations);\r\n          this.dataSource._updateChangeSubscription();\r\n          this.dataSource.paginator = this.paginator as MatPaginator;\r\n          this.dataSource.sort = this.sort as MatSort;\r\n          this.loader = false;\r\n        }\r\n        else this.notificationService.warn(res.error)\r\n      }, err => {\r\n        this.notificationService.warn(\"! Fail\");\r\n        this.loader = false;\r\n\r\n      })\r\n    }\r\n\r\n  }\r\n  togglePanel() {\r\n\r\n    this.panelOpenState = !this.panelOpenState\r\n  }\r\n\r\n  lastcol: string = 'Id';\r\n  lastdir: string = 'asc';\r\n\r\n  sortData(sort: any) {\r\n    if (this.pIn != 0)\r\n      window.location.reload();\r\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n      if (this.lastdir == 'asc')\r\n        sort.direction = 'desc';\r\n      else\r\n        sort.direction = 'asc';\r\n    }\r\n    this.lastcol = sort.active; this.lastdir = sort.direction;\r\n    var c = this.pageIn;\r\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n  }\r\n\r\n\r\n}\r\n","<mat-expansion-panel [(expanded)]=\"panelOpenState\"  class=\"mb-3\">\r\n  <mat-expansion-panel-header>\r\n    <mat-panel-title>\r\n      Advanced Search\r\n    </mat-panel-title>\r\n    <mat-panel-description>\r\n\r\n    </mat-panel-description>\r\n  </mat-expansion-panel-header>\r\n  <mat-divider></mat-divider>\r\n  <form [formGroup]=\"form\" class=\"form-normal\" (submit)=\"AdvancedSearch()\">\r\n    <mat-grid-list cols=\"4\" rowHeight=\"230px\">\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container\">\r\n\r\n          <mat-form-field >\r\n            <input formControlName=\"complaintNumber\" matInput placeholder=\"complaint Number*\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field >\r\n            <mat-select formControlName=\"popNameIds\" placeholder=\"pop Name*\"\r\n              (selectionChange)=\"OnChangePopName($event)\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #popNameSearch (input)=\"onPopNameInputChange()\" >\r\n              <ng-container *ngFor=\"let popNameIds of popNames\">\r\n                <mat-option value=\"{{popNameIds.id}}\">{{popNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <mat-select formControlName=\"techNameIds\" placeholder=\"tech Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #techNameSearch (input)=\"onTechNameInputChange()\" >\r\n              <ng-container *ngFor=\"let techNameIds of techNames\">\r\n                <mat-option value=\"{{techNameIds.id}}\">{{techNameIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field >\r\n            <input [ngxMatDatetimePicker]=\"createdDateFrom\" formControlName=\"createdDateFrom\" matInput\r\n              placeholder=\"created From*\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(createdDateFrom)\"></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #createdDateFrom > //[enableMeridian]=\"true\"\r\n            </ngx-mat-datetime-picker>\r\n          </mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container\">\r\n          <mat-form-field >\r\n            <input formControlName=\"PSDID\" matInput placeholder=\"PSDID*\">\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <input formControlName=\"zoneName\" matInput placeholder=\"zone Name*\" readonly>\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <mat-select formControlName=\"remedyActionIds\" placeholder=\"Remedy Action Name*\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #remedyActionsSearch (input)=\"onRemedyActionInputChange()\" >\r\n              <ng-container *ngFor=\"let remedyActionIds of remedyActions\">\r\n                <mat-option value=\"{{remedyActionIds.id}}\">{{remedyActionIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <input [ngxMatDatetimePicker]=\"createdDateTo\" formControlName=\"createdDateTo\" matInput\r\n              placeholder=\"created To*\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(createdDateTo)\"></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #createdDateTo>// [enableMeridian]=\"true\" \r\n            </ngx-mat-datetime-picker>\r\n          </mat-form-field>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n          </mat-grid-tile>\r\n          <mat-grid-tile>\r\n            <div class=\"controles-container\">\r\n              <mat-form-field >\r\n                <input formControlName=\"circuitID\" matInput placeholder=\"circuit ID*\">\r\n              </mat-form-field>\r\n              <mat-form-field >\r\n                <mat-select formControlName=\"operatorIds\" placeholder=\"operator Name*\">\r\n                  <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #operatorSearch (input)=\"onOperatorsInputChange()\" >\r\n                  <ng-container *ngFor=\"let operatorIds of operators\">\r\n                    <mat-option value=\"{{operatorIds.id}}\">{{operatorIds.name}}</mat-option>\r\n                  </ng-container>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-form-field >\r\n                <mat-select formControlName=\"transmissionMediaIds\" placeholder=\"transmission Media Name*\">\r\n                  <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"Search by name...\" #transmissionMediaSearch (input)=\"onTransmissionMediaInputChange()\" >\r\n                  <ng-container *ngFor=\"let transmissionMediaIds of transmissionMedia\">\r\n                    <mat-option value=\"{{transmissionMediaIds.id}}\">{{transmissionMediaIds.name}}</mat-option>\r\n                  </ng-container>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <mat-form-field >\r\n                <input [ngxMatDatetimePicker]=\"closedDateFrom\" formControlName=\"closedDateFrom\" matInput placeholder=\"closed  From*\" readonly>\r\n                <mat-datepicker-toggle matSuffix [for]=\"$any(closedDateFrom)\"></mat-datepicker-toggle>\r\n                <ngx-mat-datetime-picker #closedDateFrom >//[enableMeridian]=\"true\" \r\n                </ngx-mat-datetime-picker>\r\n              </mat-form-field>\r\n\r\n\r\n              </div>\r\n              </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container\">\r\n          <mat-form-field >\r\n            <input formControlName=\"customerName\" matInput placeholder=\"customer Name*\">\r\n          </mat-form-field>\r\n          <mat-form-field >\r\n            <input formControlName=\"assignedTo\" matInput placeholder=\"Assigned To*\">\r\n          </mat-form-field>\r\n\r\n\r\n\r\n          <mat-form-field >\r\n            <mat-select formControlName=\"statusIds\" placeholder=\"status *\">\r\n              <input type=\"text\" autocomplete=\"off\" matInput class=\"p-2\" placeholder=\"status name\" #statusNameSearch (input)=\"onStatusInputChange()\" >\r\n              <ng-container *ngFor=\"let statusIds of status\">\r\n                <mat-option value=\"{{statusIds.id}}\">{{statusIds.name}}</mat-option>\r\n              </ng-container>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n\r\n\r\n\r\n          <mat-form-field >\r\n            <input [ngxMatDatetimePicker]=\"closedDateTo\" formControlName=\"closedDateTo\" matInput placeholder=\"closed  To*\" readonly>\r\n            <mat-datepicker-toggle matSuffix [for]=\"$any(closedDateTo)\"></mat-datepicker-toggle>\r\n            <ngx-mat-datetime-picker #closedDateTo  >//[enableMeridian]=\"true\"\r\n            </ngx-mat-datetime-picker>\r\n          </mat-form-field>\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n\r\n\r\n\r\n\r\n    </mat-grid-list>\r\n    <mat-grid-list cols=\"1\" rowHeight=\"50px\">\r\n      <mat-grid-tile>\r\n        <div class=\"controles-container pr-4\">\r\n          <div class=\"text-right\">\r\n            <button mat-button class=\"serch submit mr-1 text-white\"  type=\"submit\">\r\n              <mat-icon>search</mat-icon>Search\r\n            </button>\r\n\r\n            <input type=\"button\" mat-button  class=\"clear btn-danger \" (click)=\"clearFields()\" value=\"Clear\"/>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n\r\n\r\n  </form>\r\n</mat-expansion-panel>\r\n\r\n<mat-card class=\"example-card\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      Daily Operation List <span class=\"separator ml-2 mr-1\">|</span>\r\n      <span class=\"option\" (click)=\" openBottomSheet()\">Import Excel</span>\r\n      <span class=\"separator mx-1\">|</span>\r\n      <span class=\"option\" (click)=\" ExportTOExcel()\">Export Excel</span>\r\n      <span class=\"separator mx-1\">|</span>\r\n      <span class=\"option\" (click)=\"ExportTOEmptyExcel()\">Export Empty Excel</span>\r\n      <div class=\"\" style=\"float: right;\">\r\n        <span class=\"add\" (click)=\"addNew()\">+ Add New</span>\r\n      </div>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-divider></mat-divider>\r\n  <div class=\"search-div\" fxLayout=\"row\">\r\n\r\n    <ng-template #LIST>\r\n      <mat-toolbar>\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"close()\">\r\n          <mat-icon class=\"x\">close</mat-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n      <mat-form-field class=\"sheet\">\r\n        <div class=\"field\">\r\n          <mat-toolbar>\r\n\r\n            <input matInput [(ngModel)]=\"fileAttr\" readonly name=\"name\" />\r\n\r\n\r\n            <button mat-flat-button class=\"btn-color\">\r\n              Browse file\r\n            </button>\r\n          </mat-toolbar>\r\n\r\n          <input type=\"file\" #fileInput id=\"uploadFile\" (change)=\"uploadFileEvtF($event)\" name=\"uploadFile\"\r\n            multiple=\"multiple\" />\r\n        </div>\r\n      </mat-form-field>\r\n\r\n      <button mat-flat-button (click)=\"upLoadF()\" id=\"upload\" class=\"d-block\">\r\n        <mat-icon>cloud_upload</mat-icon> Upload\r\n      </button>\r\n    </ng-template>\r\n\r\n    <ng-template #Msg>\r\n      <mat-toolbar>\r\n        <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"closeMsg()\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-toolbar>\r\n      <div class=\"sheet\">\r\n        <div class=\"data\" [innerHtml]=\"htmlToAdd\">\r\n\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <mat-checkbox class=\"example-margin\" (change)=\"DisplayAll($event)\">Display All</mat-checkbox>\r\n\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n      <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\r\n      <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n        <mat-icon>close</mat-icon>\r\n      </button>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n    <span>Loading Data ...</span>\r\n    <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n\r\n  </div>\r\n\r\n  <ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n      <mat-table class=\"table-striped\" [dataSource]=\"dataSource\" #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear>\r\n\r\n        <ng-container matColumnDef=\"id\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header hidden> ID. </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"id\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\" hidden>\r\n            {{element.id}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"all\">\r\n          <mat-header-cell *matHeaderCellDef>\r\n            <mat-checkbox (change)=\"onselectcheckall($event)\">All</mat-checkbox>\r\n          </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\" data-label=\"All\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <mat-checkbox [checked]=\"isall\" (change)=\"onselectcheck($event,row)\"></mat-checkbox>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"complaintNumber\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Complaint Number </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element, let row\" data-label=\"complaintNumber\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.complaintNumber}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"ComplaintNumber\" name=\"complaintNumber\"\r\n                  [(ngModel)]=\"element.complaintNumber\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"psdid\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> PSD ID </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element, let row\" data-label=\"psdid\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.psdid}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"PSDID\" name=\"PSDID\" [(ngModel)]=\"element.psdid\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"circuitID\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Circuit ID </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"circuitID\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.circuitID}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"CircuitID\" name=\"circuitID\" [(ngModel)]=\"element.circuitID\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"customerName\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Customer Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element, let row\" data-label=\"customerName\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.customerName}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"CustomerName\" name=\"customerName\" [(ngModel)]=\"element.customerName\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_PopName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> Pop Name </b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_PopName\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            {{element._PopName}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"zoneName\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Zone Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"zoneName\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.zoneName}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"ZoneName\" name=\"zoneName\" [(ngModel)]=\"element.zoneName\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"createdDate\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> created Date </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"createdDate\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.createdDate | date:'mediumDate'}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field>\r\n                <input [matDatepicker]=\"createdDate\" matInput placeholder=\"created Date*\" readonly>\r\n                <mat-datepicker-toggle matSuffix [for]=\"createdDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker #createdDate></mat-datepicker>\r\n                <mat-error>This field is mandatory.</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"createdTime\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> creation Time </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"createdTime\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.createdTime}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field>\r\n                <input [ngxTimepicker]=\"createdTime\" matInput placeholder=\"created Time*\" readonly>\r\n                <ngx-material-timepicker-toggle matSuffix [for]=\"createdTime\"></ngx-material-timepicker-toggle>\r\n                <ngx-material-timepicker #createdTime></ngx-material-timepicker>\r\n                <mat-error>This field is mandatory.</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"closedDate\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> closed Date </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"closedDate\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.closedDate | date:'mediumDate'}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field>\r\n                <input [matDatepicker]=\"closedDate\" matInput placeholder=\"closed Date*\" readonly>\r\n                <mat-datepicker-toggle matSuffix [for]=\"closedDate\"></mat-datepicker-toggle>\r\n                <mat-datepicker #closedDate></mat-datepicker>\r\n                <mat-error>This field is mandatory.</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"closedTime\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> closed Time </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"closedTime\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.closedTime }}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field>\r\n                <input [ngxTimepicker]=\"closedTime\" matInput placeholder=\"closed Time*\" readonly>\r\n                <ngx-material-timepicker-toggle matSuffix [for]=\"closedTime\"></ngx-material-timepicker-toggle>\r\n                <ngx-material-timepicker #closedTime></ngx-material-timepicker>\r\n                <mat-error>This field is mandatory.</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"sla\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> SLA </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"sla\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.sla | slaFormat }}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"sla\" name=\"sla\" [(ngModel)]=\"element.sla\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_OperatorName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> operator Name </b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_OperatorName\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            {{element._OperatorName}}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"assignedTo\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Assigned To </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"assignedTo\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.assignedTo}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"AssignedTo\" name=\"assignedTo\" [(ngModel)]=\"element.assignedTo\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_TechName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> tech Name</b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_TechName\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            {{element._TechName}}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_RemedyActionName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> remedy Action</b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_RemedyActionName\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            {{element._RemedyActionName}}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"notes\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Notes </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element ,let row\" data-label=\"notes\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.notes}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"Notes\" name=\"notes\" [(ngModel)]=\"element.notes\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_TransmissionMediaName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> transmission Media </b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_TransmissionMediaName\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,\r\n            'green' : row._StatusName=='Closed'}\">\r\n            {{element._TransmissionMediaName}}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"_StatusName\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header><b> status </b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"_StatusName\"\r\n            [ngClass]=\"{'highlight' : row.isToLate,\r\n                         'green' : row._StatusName=='Closed','fontcolor':row._StatusName=='Closed'}\">\r\n            {{element._StatusName}}\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"updateDate\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Update Date </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element ,let row\" data-label=\"updateDate\" [ngClass]=\"{'highlight' : row.isToLate,\r\n          'green' : row._StatusName=='Closed'}\">\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.updateDate | date:'mediumDate'}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"UpdateDate\" name=\"updateDate\" [(ngModel)]=\"element.updateDate\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"createdBy\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Created By </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"createdBy\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.createdBy}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"CreatedBy\" name=\"createdBy\" [(ngModel)]=\"element.createdBy\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"updatedBy\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Updated By </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element,let row\" data-label=\"updatedBy\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              {{element.updatedBy}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                <input matInput placeholder=\"UpdatedBy\" name=\"updatedBy\" [(ngModel)]=\"element.updatedBy\">\r\n                <mat-error>ErrorMessage</mat-error>\r\n              </mat-form-field>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"isToLate\" hidden>\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header hidden><b> isToLate </b> </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element\" data-label=\"isToLate\" hidden>\r\n            {{element.isToLate}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"flag\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Open 2 hours ago </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let element , let row\" data-label=\"Open\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\"> <mat-icon class=\"text-danger\" *ngIf=\"row.isToLate\">notifications_active</mat-icon> </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action\">\r\n          <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\" data-label=\"action\" [ngClass]=\"{'highlight' : row.isToLate,'green' : row._StatusName=='Closed'}\">\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n              <button mat-button class=\"text-success font-weight-bolder\" (click)=\"editROw(row.id)\">\r\n                Edit\r\n              </button>\r\n              <span class=\"mx-2\">|</span>\r\n              <button mat-button class=\"font-weight-bolder\" color=\"warn\" (click)=\"onDelete(row)\">\r\n                Delete\r\n              </button>\r\n            </ng-container>\r\n            <ng-container *ngIf=\"editdisabled\">\r\n              <button class=\"btn-success btn-sm mr-1\" (click)=\"updateEdit(row)\">\r\n                Update\r\n              </button>\r\n              <button class=\"btn-danger btn-sm\" (click)=\"cancelEdit()\">\r\n                Cancel\r\n              </button>\r\n            </ng-container>\r\n          </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"noData\">\r\n          <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n            No Data ...\r\n          </mat-footer-cell>\r\n\r\n        </ng-container>\r\n\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n\r\n\r\n\r\n      </mat-table>\r\n\r\n    </div>\r\n  </ng-template>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[25,50, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n  </mat-paginator>\r\n\r\n</mat-card>\r\n\r\n\r\n\r\n\r\n<app-loader *ngIf=\"loading\">\r\n</app-loader>\r\n<!--  -->\r\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpService {\n\n \n  constructor() { }\n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    fullName: new FormControl('', Validators.required),\n    email: new FormControl('', Validators.email),\n    mobile: new FormControl('', [Validators.required, Validators.minLength(11)]),\n    city: new FormControl(''),\n    gender: new FormControl('1'),\n    department: new FormControl(0),\n    hireDate: new FormControl(''),\n    isPermanent: new FormControl(false)\n  });\n  initializeFormGroup(){\n    this.form.setValue({\n      $key:null,\n      fullName: '',\n      email: '',\n      mobile:'',\n      city: '',\n      gender: 1,\n      department: 0,\n      hireDate:'',\n      isPermanent: false\n\n    })\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ItechName } from 'src/app/Model/ItechName';\r\nimport { TechNameService } from 'src/app/Services/tech-name.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-tech-name',\r\n  templateUrl: './tech-name.component.html',\r\n  styleUrls: ['./tech-name.component.css']\r\n})\r\nexport class TechNameComponent implements OnInit {\r\n\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  loader:boolean=false;\r\n  showNewRow: boolean = false;\r\n  techNameModel: ItechName[] = [];\r\n  techName: string = '';\r\n  techNameId: number = 0;\r\n  isNameRepeated : boolean =false;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize =25;\r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n\r\n  constructor(private dialog: MatDialog,\r\n    public service: TechNameService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService) {\r\n    this.titleService.setTitle(\"TechName\");\r\n  }\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['id', 'name','action'];\r\n  dataSource = new MatTableDataSource(this.techNameModel);\r\n\r\n  LoadTechName() {\r\n    this.service.getTechName(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n      this.techNameModel.push(...response?.data);\r\n      this.techNameModel.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.techNameModel);\r\n     // this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n\r\n    })\r\n}\r\n\r\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  this.loader = true;\r\n  this.service.getTechName(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n    this.techNameModel = response?.data;\r\n    this.techNameModel.length = response?.pagination.totalCount;\r\n    this.dataSource = new MatTableDataSource<any>(this.techNameModel);\r\n    this.dataSource._updateChangeSubscription();\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  })\r\n  setTimeout(()=> this.loader = false,2000) ;\r\n}\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    this.dataSource.sort = this.sort as MatSort;\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  }\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let techNameModel: ItechName =\r\n    {\r\n      id: this.techNameId,\r\n      name: this.techName,\r\n    }\r\n    if (this.techNameId == 0) {\r\n      this.service.insertTechName(techNameModel).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadTechName();\r\n          this.techName = '';\r\n          this.techNameId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updateTechName(techNameModel).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadTechName();\r\n          this.techName = '';\r\n          this.techNameId = 0;\r\n        },\r\n        error => { \r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\nthis.show= false;\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deleteTechName(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');\r\n          this.LoadTechName();\r\n        },\r\n        error=>{\r\n         \r\n          this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    } \r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let techNameEdit: ItechName=\r\n    {\r\n      id: row.id,\r\n      name: row.name,\r\n    }\r\n    this.service.updateTechName(techNameEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n        this.LoadTechName();\r\n        this.techName = '';\r\n        this.techNameId = 0;\r\n      },\r\n      error => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n         this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n    this.isNameUpdatedRepeated=false;\r\n  }\r\n  addNew(){\r\n    this.show=true\r\n  }\r\n  onChecknameIsalreadysign()\r\n  {\r\n    this.service.nameIsalreadysign(this.techName , this.techNameId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n  onChecknameIsalreadysignWhenUpdate(row : any)\r\n  {\r\n   let _techName = row.name;\r\n   let _techNameId = row.id;\r\n    this.service.nameIsalreadysign(_techName , _techNameId).subscribe(\r\n      res =>{\r\n    if(res.status == true )\r\n    {\r\n      this.isDisabled = false;\r\n      this.isNameUpdatedRepeated=false;\r\n    }else\r\n    {\r\n      this.isDisabled  = true;\r\n      this.isNameUpdatedRepeated=true;\r\n    }\r\n    });\r\n  }\r\n\r\n  //this section for pagination \r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  pagesizedef: number = 25;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    this.loader = true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  \r\n      this.service.getTechName(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n        if (res.status == true) {\r\n         \r\n          this.techNameModel.length = cursize;\r\n          this.techNameModel.push(...res?.data);\r\n          this.techNameModel.length = res?.pagination.totalCount;\r\n          this.dataSource = new MatTableDataSource<any>(this.techNameModel);\r\n          this.dataSource._updateChangeSubscription();\r\n          this.dataSource.paginator = this.paginator as MatPaginator;\r\n          this.loader = false;\r\n        }\r\n        else this.notificationService.warn(res.error)\r\n      }, err => {\r\n        this.notificationService.warn(\"! Fail\");\r\n        this.loader = false;\r\n\r\n      })\r\n    \r\n\r\n  }\r\n  lastcol: string = 'Id';\r\n  lastdir: string = 'asc';\r\n\r\n  sortData(sort: any) {\r\n    if (this.pIn != 0)\r\n      window.location.reload();\r\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n      if (this.lastdir == 'asc')\r\n        sort.direction = 'desc';\r\n      else\r\n        sort.direction = 'asc';\r\n    }\r\n    this.lastcol = sort.active; this.lastdir = sort.direction;\r\n    var c = this.pageIn;\r\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n  }\r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        Tech Name\r\n        <div style=\"float: right;\">\r\n          <span class=\"add\"  (click)=\"addNew()\">+ Add New</span></div>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label> Tech Name</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"techName\"  (keyup)=\"onChecknameIsalreadysign()\">\r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"techNameId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!techName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"table-striped\" [dataSource]=\"dataSource\"   #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear >\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled\">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\" (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n\r\n\r\n            <ng-container *ngIf=\"!editdisabled\">\r\n               \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                  \r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\"  (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n</mat-paginator>\r\n</mat-card>\r\n\r\n\r\n\r\n\r\n  \r\n<!-- <app-loader *ngIf=\"loading\">\r\n</app-loader> -->","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddDailyOperationComponent } from './components/add-daily-operation/add-daily-operation.component';\r\nimport { DailyOperationComponent } from './components/daily-operation/daily-operation.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { LogsComponent } from './components/logs/logs.component';\r\nimport { OperatorComponent } from './components/operator/operator.component';\r\nimport { PopNameAbbreviationsComponent } from './components/pop-name-abbreviations/pop-name-abbreviations.component';\r\nimport { PopNameComponent } from './components/pop-name/pop-name.component';\r\nimport { RemedyActionComponent } from './components/remedy-action/remedy-action.component';\r\nimport { StatusComponent } from './components/status/status.component';\r\nimport { TechNameComponent } from './components/tech-name/tech-name.component';\r\nimport { TestComponent } from './components/test/test.component';\r\nimport { TransmissionMediaComponent } from './components/transmission-media/transmission-media.component';\r\nimport { ZoneNameComponent } from './components/zone-name/zone-name.component';\r\nimport { LayoutComponent } from './shared/components/layout/layout.component';\r\nimport { LoginComponent } from './shared/components/login/login.component';\r\nimport { AuthGuardAdminServices } from './shared/modules/AuthGuardAdminServices';\r\nimport { AuthGuardService } from './shared/modules/AuthGuardService';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'login',\r\n  component:LoginComponent,\r\n },\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: LayoutComponent,\r\n\r\n\r\n    children: [{\r\n      path: '',\r\n      component: DashboardComponent,\r\n\r\n    },\r\n    {\r\n      path: 'dailey',\r\n      component: DailyOperationComponent,\r\n      canActivate:[AuthGuardService]\r\n    },\r\n    {\r\n      path: 'popNameAbbreviations',\r\n      component: PopNameAbbreviationsComponent,\r\n      canActivate:[AuthGuardService]\r\n    },\r\n    {\r\n      path: 'operator',\r\n      component: OperatorComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'popName',\r\n      component: PopNameComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'zoneName',\r\n      component: ZoneNameComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'transmissionMedia',\r\n      component: TransmissionMediaComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'techName',\r\n      component: TechNameComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'status',\r\n      component: StatusComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'remedyAction',\r\n      component: RemedyActionComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    {\r\n      path: 'logs',\r\n      component: LogsComponent,\r\n      canActivate:[AuthGuardAdminServices]\r\n    },\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ItransmissionMedia } from 'src/app/Model/ItransmissionMedia';\r\nimport { TransmissionMediaService } from 'src/app/Services/transmission-media.service';\r\nimport { DeleteServiceService } from 'src/app/shared/services/delete-service.service';\r\nimport { NotificationMsgService } from 'src/app/shared/services/notification-msg.service';\r\n\r\n@Component({\r\n  selector: 'app-transmission-media',\r\n  templateUrl: './transmission-media.component.html',\r\n  styleUrls: ['./transmission-media.component.css']\r\n})\r\nexport class TransmissionMediaComponent implements OnInit {\r\n\r\nloader:boolean=false;\r\n  searchKey: string = '';\r\n  editUsr: any;\r\n  oldUsr: any;\r\n  editdisabled: boolean = false;\r\n  show: boolean = false;\r\n  showNewRow: boolean = false;\r\n  transmssionMedia: ItransmissionMedia[] = [];\r\n  transmssionMediaName: string = '';\r\n  transmssionMediaId: number = 0;\r\n  isNameRepeated : boolean =false;\r\n  isNameUpdatedRepeated : boolean =false;\r\n  isDisabled = false;\r\n  pageNumber = 1;\r\n  pageSize =25;\r\n  public colname: string = 'Id';\r\n  public coldir: string = 'asc';\r\n\r\n  constructor(private dialog: MatDialog,\r\n    public service: TransmissionMediaService,\r\n    private titleService: Title,\r\n    private dialogService: DeleteServiceService,\r\n    private notificationService: NotificationMsgService) {\r\n    this.titleService.setTitle(\"TransmissionMedia\");\r\n  }\r\n\r\n  @ViewChild(MatSort) sort?: MatSort;\r\n  @ViewChild(MatPaginator) paginator?: MatPaginator;\r\n  displayedColumns: string[] = ['id', 'name','action'];\r\n  dataSource = new MatTableDataSource(this.transmssionMedia);\r\n\r\n  LoadTransmissionMedia() {\r\n    this.service.getTransmissionMedia(this.pageNumber, this.pageSize, '', this.colname, this.coldir).subscribe(response => {\r\n      this.transmssionMedia.push(...response?.data);\r\n      this.transmssionMedia.length = response?.pagination.totalCount;\r\n      this.dataSource = new MatTableDataSource<any>(this.transmssionMedia);\r\n      this.dataSource._updateChangeSubscription();\r\n      this.dataSource.paginator = this.paginator as MatPaginator;\r\n      this.dataSource.sort = this.sort as MatSort;\r\n\r\n    })\r\n}\r\n\r\ngetRequestdata(pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n  this.loader = true;\r\n  this.service.getTransmissionMedia(pageNum, pageSize, search, sortColumn, sortDir).subscribe(response => {\r\n    setTimeout(()=>this.loader = false,2000);\r\n    this.transmssionMedia = response?.data;\r\n    this.transmssionMedia.length = response?.pagination.totalCount;\r\n    this.dataSource = new MatTableDataSource<any>(this.transmssionMedia);\r\n    this.dataSource._updateChangeSubscription();\r\n    this.dataSource.paginator = this.paginator as MatPaginator;\r\n  })\r\n \r\n}\r\n\r\n\r\n\r\n  // datatableRefresh(): void {\r\n  //   this.dataSource.sort = this.sort as MatSort;\r\n  //   this.service.getRequests().subscribe(res => {\r\n  //     this.transmssionMedia = res as ItransmissionMedia[];\r\n  //     this.dataSource = new MatTableDataSource(this.transmssionMedia);\r\n  //     this.dataSource.paginator = this.paginator as MatPaginator;\r\n  //     this.dataSource.sort = this.sort as MatSort;\r\n\r\n  //   });\r\n  // }\r\n  ngOnInit(): void {\r\n    this.editUsr = 0;\r\n    this.getRequestdata(1, 25, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n\r\n\r\n  onSearchClear() {\r\n    this.searchKey = '';\r\n    this.applyFilter();\r\n  }\r\n  applyFilter() {\r\n    let searchData = this.searchKey.trim().toLowerCase();\r\n    this.getRequestdata(1, 25, searchData, this.sortColumnDef, \"asc\");\r\n  }\r\n\r\n  onCreateUpdate() {\r\n    this.loader=true;\r\n    let transmssionMedia: ItransmissionMedia =\r\n    {\r\n      id: this.transmssionMediaId,\r\n      name: this.transmssionMediaName,\r\n    }\r\n    if (this.transmssionMediaId == 0) {\r\n      this.service.insertTransmissionMedia(transmssionMedia).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Added');\r\n          this.LoadTransmissionMedia();\r\n          this.transmssionMediaName = '';\r\n          this.transmssionMediaId = 0;\r\n        }\r\n        , error => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n\r\n          this.notificationService.warn(':: An Error Occured ')\r\n        }\r\n      );\r\n\r\n    }\r\n    else {\r\n      this.service.updateTransmissionMedia(transmssionMedia).subscribe(\r\n        res => {\r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },1500)\r\n          this.notificationService.success(':: Successfully Updated');\r\n          this.LoadTransmissionMedia();\r\n          this.transmssionMediaName = '';\r\n          this.transmssionMediaId = 0;\r\n        },\r\n        error => { \r\n          setTimeout(()=>{\r\n            this.loader=false;\r\n          },0)\r\n          this.notificationService.warn(':: An Error Occured') }\r\n      );\r\n\r\n\r\n    }\r\nthis.show=false;\r\n  }\r\n  onDelete(row:any) {\r\n    this.dialogService.openConfirmDialog().afterClosed().subscribe(res =>{\r\n    if(res) {\r\n      this.service.deleteTransmissionMedia(row.id).subscribe(\r\n        rs =>{\r\n          this.notificationService.success(':: Successfully Deleted');\r\n          this.LoadTransmissionMedia();\r\n         \r\n        },\r\n        error=>{this.notificationService.warn(':: An Error Occured')}\r\n        );\r\n    } \r\n  });\r\n  }\r\n\r\n  editROw(r: any) {\r\n\r\n    this.editUsr = r.id;\r\n    this.editdisabled = true;\r\n\r\n  }\r\n  updateEdit(row : any) {\r\n    this.loader=true;\r\n    let transmssionMediaEdit: ItransmissionMedia =\r\n    {\r\n      id: row.id,\r\n      name: row.name,\r\n    }\r\n    this.service.updateTransmissionMedia(transmssionMediaEdit).subscribe(\r\n      res => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },1500)\r\n        this.notificationService.success(':: Successfully Updated');\r\n        this.LoadTransmissionMedia();\r\n        this.transmssionMediaName = '';\r\n        this.transmssionMediaId = 0;\r\n      },\r\n      error => {\r\n        setTimeout(()=>{\r\n          this.loader=false;\r\n        },0)\r\n         this.notificationService.warn(':: An Error Occured') }\r\n    );\r\n    this.cancelEdit();\r\n  }\r\n  cancelEdit() {\r\n    this.editdisabled = false;\r\n  }\r\naddNew(){\r\n  this.show=true;\r\n}\r\nonChecknameIsalreadysign()\r\n{\r\n  this.service.nameIsalreadysign(this.transmssionMediaName , this.transmssionMediaId).subscribe(\r\n    res =>{\r\n  if(res.status == true )\r\n  {\r\n    this.isDisabled = false;\r\n    this.isNameRepeated=false;\r\n  }else\r\n  {\r\n    this.isDisabled  = true;\r\n    this.isNameRepeated=true;\r\n  }\r\n  });\r\n}\r\nonChecknameIsalreadysignWhenUpdate(row : any)\r\n{\r\n let _transmssionMediaName = row.name;\r\n let _transmssionMediaId = row.id;\r\n  this.service.nameIsalreadysign(_transmssionMediaName , _transmssionMediaId).subscribe(\r\n    res =>{\r\n  if(res.status == true )\r\n  {\r\n    this.isDisabled = false;\r\n    this.isNameUpdatedRepeated=false;\r\n  }else\r\n  {\r\n    this.isDisabled  = true;\r\n    this.isNameUpdatedRepeated=true;\r\n  }\r\n  });\r\n}\r\n\r\n  //this section for pagination \r\n  sortColumnDef: string = \"Id\";\r\n  SortDirDef: string = 'asc';\r\n  pageIn = 0;\r\n  previousSizedef = 25;\r\n  pagesizedef: number = 25;\r\n  public pIn: number = 0;\r\n  pageChanged(event: any) {\r\n    this.loader = true;\r\n    this.pIn = event.pageIndex;\r\n    this.pageIn = event.pageIndex;\r\n    this.pagesizedef = event.pageSize;\r\n    let pageIndex = event.pageIndex;\r\n    let pageSize = event.pageSize;\r\n    let previousSize = pageSize * pageIndex;\r\n    this.previousSizedef = previousSize;\r\n    this.getRequestdataNext(previousSize,  pageIndex + 1, pageSize, '', this.sortColumnDef, this.SortDirDef);\r\n  }\r\n  getRequestdataNext(cursize: number, pageNum: number, pageSize: number, search: string, sortColumn: string, sortDir: string) {\r\n   \r\n      this.service.getTransmissionMedia(pageNum, pageSize, search, sortColumn, sortDir).subscribe(res => {\r\n        if (res.status == true) {\r\n          this.loader = false;\r\n          this.transmssionMedia.length = cursize;\r\n          this.transmssionMedia.push(...res?.data);\r\n          this.transmssionMedia.length = res?.pagination.totalCount;\r\n          this.dataSource = new MatTableDataSource<any>(this.transmssionMedia);\r\n          this.dataSource._updateChangeSubscription();\r\n          this.dataSource.paginator = this.paginator as MatPaginator;\r\n          this.dataSource.sort = this.sort as MatSort;\r\n          this.loader = false;\r\n        }\r\n        else this.notificationService.warn(res.error)\r\n      }, err => {\r\n        this.notificationService.warn(\"! Fail\");\r\n        this.loader = false;\r\n\r\n      })\r\n    \r\n\r\n  }\r\n  lastcol: string = 'Id';\r\n  lastdir: string = 'asc';\r\n\r\n  sortData(sort: any) {\r\n    if (this.pIn != 0)\r\n      window.location.reload();\r\n    if (this.lastcol == sort.active && this.lastdir == sort.direction) {\r\n      if (this.lastdir == 'asc')\r\n        sort.direction = 'desc';\r\n      else\r\n        sort.direction = 'asc';\r\n    }\r\n    this.lastcol = sort.active; this.lastdir = sort.direction;\r\n    var c = this.pageIn;\r\n    this.getRequestdata(1, 25, '', sort.active, this.lastdir);\r\n  }\r\n}\r\n","\r\n <mat-card class=\"example-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n       Transmission Media\r\n       <div style=\"float: right;\">\r\n        <span class=\"add\"  (click)=\"addNew()\">+ Add New</span></div>\r\n        </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-divider></mat-divider>\r\n<div class=\"search-div\" fxLayout=\"row\">\r\n  <div *ngIf=\"show\">\r\n  <mat-form-field class=\"example-full-width mr-2\">\r\n    <mat-label> Transmission Media Name</mat-label>\r\n    <input type=\"text\" name=\"name\" matInput  [(ngModel)]=\"transmssionMediaName\" (keyup)=\"onChecknameIsalreadysign()\">\r\n    <input type=\"hidden\" name=\"id\" formControlName=\"id\"  [(ngModel)]=\"transmssionMediaId\" >\r\n    <span class=\"mat-error\" *ngIf=\"isNameRepeated\">name already exist</span>\r\n\r\n</mat-form-field>\r\n<button mat-raised-button (click)=\"onCreateUpdate()\"  class=\"search\" [disabled]=\"!transmssionMediaName.length || isDisabled\">\r\n   Save\r\n</button>\r\n</div>\r\n    <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\r\n        <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\"> \r\n       <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button> \r\n    </mat-form-field>\r\n</div>\r\n\r\n<div class=\"spinner\" *ngIf=\"dataSource==null || loader ;else table\">\r\n  <span>Loading Data ...</span>\r\n  <mat-progress-bar class=\"example-margin\"  mode=\"buffer\" value=\"50\">\r\n</mat-progress-bar>\r\n  \r\n</div>\r\n<ng-template #table>\r\n    <div class=\"example-container mat-elevation-z8\">\r\n\r\n<mat-table class=\"table-striped\" [dataSource]=\"dataSource\"   #table  matSort (matSortChange)=\"sortData($event)\" matSortActive=\"name\" matSortDirection=\"asc\" matSortDisableClear >\r\n  \r\n \r\n    <ng-container matColumnDef=\"id\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> ID. </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"id\" > {{element.id}} </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let element\" data-label=\"name\"> \r\n            <ng-container *ngIf=\"!editdisabled\">\r\n                {{element.name|| 'N/A'}} \r\n               </ng-container>\r\n               <ng-container *ngIf=\"editdisabled\">\r\n                 <mat-form-field hideRequiredMarker=\"false\" appearance=\"legacy\">\r\n                   <input matInput placeholder=\"Name\"  name=\"name\" [(ngModel)]=\"element.name\" (keyup)=\"onChecknameIsalreadysignWhenUpdate(element)\">\r\n                   <span class=\"mat-error\" *ngIf=\"isNameUpdatedRepeated && element.id == editUsr\">name already exist</span>\r\n                 </mat-form-field>\r\n               </ng-container>\r\n        </mat-cell>\r\n    </ng-container>     \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell mat-header-cell *matHeaderCellDef> Action</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\" data-label=\"action\">\r\n            <ng-container *ngIf=\"!editdisabled\"> \r\n                <button mat-button class=\"text-success font-weight-bolder\"  (click)=\"editROw(row)\">\r\n                  Edit\r\n                </button>\r\n               <span class=\"mx-2\">|</span>\r\n                <button mat-button class=\"font-weight-bolder\" color=\"warn\"  (click)=\"onDelete(row)\">\r\n                   Delete\r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"editdisabled\">\r\n                <button  class=\"btn-success btn-sm mr-1\" [disabled]=\"isDisabled\" (click)=\"updateEdit(row)\">\r\n                   Update\r\n                </button>\r\n               \r\n                <button  class=\"btn-danger btn-sm\"  (click)=\"cancelEdit()\">\r\n                  Cancel\r\n                </button>\r\n              </ng-container>\r\n            \r\n        </mat-cell>\r\n\r\n      \r\n\r\n    </ng-container>\r\n     \r\n     \r\n    \r\n      \r\n    <ng-container matColumnDef=\"noData\">\r\n        <mat-footer-cell *matFooterCellDef colspan=\"6\">\r\n           No Data ...\r\n        </mat-footer-cell>\r\n\r\n    </ng-container>\r\n  \r\n  \r\n    \r\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(dataSource.data.length==0 && dataSource !=null)}\"></mat-footer-row>\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n   \r\n\r\n</mat-table>\r\n<!-- end test -->\r\n</div>\r\n</ng-template>\r\n\r\n<mat-paginator [pageSizeOptions]=\"[50, 25, 100]\" [pageSize]=\"25\" (page)=\"pageChanged($event)\" showFirstLastButtons>\r\n</mat-paginator>\r\n</mat-card>\r\n\r\n\r\n<!--   \r\n<app-loader *ngIf=\"loading\">\r\n</app-loader> -->\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}